// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461963048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x44\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x77\x91\x7f\xef\x50\x56\x12\xdb\x45\xb1\xd8\xa2\xbe\xc8\xe4\x3c\xcd\xbc\x37\xf3\x46\x93\x37\xd7\xcb\xab\xf5\xfd\xaf\x37\x50\xfb\x46\x4f\xa3\xc9\x9b\x24\x89\xae\x6c\xbb\x77\xaa\xaa\x3d\x8c\xdf\x8e\x2e\xe1\x83\xb5\x95\x46\x98\x1b\x99\xc2\x4c\x6b\xe8\x43\x04\x0e\x09\xdd\x23\x96\x69\x14\x7d\x54\x12\x0d\x61\x09\x5b\x53\xa2\x03\x5f\x23\xcc\x5a\x21\xf9\x31\x44\x2e\xe0\x37\x74\xa4\xac\x81\x71\xfa\x16\xbe\x0d\x80\x78\x08\xc5\xdf\x7d\x1f\xed\xed\x16\x1a\xb1\x07\x63\x3d\x6c\x09\x39\x81\x22\xd8\x28\x2e\x8a\x3b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x45\x86\x14\x69\x74\x3f\x24\xb0\x85\x17\x8c\x15\x8c\x6e\xf9\xb4\x39\x46\x81\xf0\x51\x04\xfc\xab\xbd\x6f\xdf\x67\x59\xd7\x75\xa9\xe8\x59\xa6\xd6\x55\x99\x3e\xa0\x28\xfb\x38\xbf\xba\x59\xac\x6e\x12\x66\x1a\x45\x9f\x8c\x46\x0a\x5a\xff\xdc\x2a\xc7\x02\x8b\x3d\x88\x96\x79\x48\x51\x30\x3b\x2d\x3a\xb0\x0e\x44\xe5\x90\x63\xde\x06\x9e\x9d\x53\x5e\x99\xea\x02\xc8\x6e\x7c\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf5\x27\x0d\x7a\x66\xc5\x4a\x8f\x01\xdc\x22\x61\x20\x9e\xad\x60\xbe\x8a\xe1\xc7\xd9\x6a\xbe\xba\x88\xee\xe6\xeb\x9f\x97\x9f\xd6\x70\x37\xbb\xbd\x9d\x2d\xd6\xf3\x9b\x15\x2c\x6f\xe1\x6a\xb9\xb8\x9e\xaf\xe7\xcb\x05\x9f\x7e\x82\xd9\xe2\x1e\x7e\x99\x2f\xae\x2f\x00\xb9\x3d\x5c\x04\x77\xad\x0b\xdc\x99\xa0\x0a\xad\x0b\x93\x5a\x21\x9e\x14\xdf\xd8\x03\x19\x6a\x51\xaa\x8d\x92\xac\xc8\x54\x5b\x51\x21\x54\xf6\x11\x9d\x61\x21\xd0\xa2\x6b\x14\x85\xe1\x11\x53\x2b\x23\xad\x1a\xe5\x85\xef\xcf\xff\x90\x93\x46\x49\xc2\x2e\x1a\xcc\x54\xa3\x28\xa7\xdc\xf3\x89\x57\x5e\xe3\xf4\x16\x5b\x4b\xca\x5b\xb7\x67\x38\xf9\x49\x76\xb8\x0e\x00\xad\xcc\x1f\xdc\x65\x9d\xc7\xe4\xf7\xdc\xf2\x1a\xd1\xc7\x50\x3b\xdc\xe4\x71\x98\x17\xf1\xc0\x1a\xb1\x93\xa5\x49\x0b\x6b\x3d\xf7\x4b\xb4\xe1\xc0\xae\xc8\x5e\x2e\xb2\x77\xe9\xbb\xf4\x32\x93\x44\xaf\x77\x69\xa3\x18\x45\x14\x43\xf6\xc5\x42\x19\x05\x5d\x32\x73\xf8\xa8\xb0\xa3\xe3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xac\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x7f\xb8\x60\x2b\xb0\x0f\x84\x4e\x48\x0a\x8d\xf9\x28\xee\xd3\x90\x74\x8a\xed\x4c\x4e\xbe\xca\x12\x0f\x62\x97\x56\xfd\x8e\x89\x56\x51\x2f\x29\xdc\xb1\x23\x0b\xca\xc2\x3c\xb4\x70\x0f\x94\x8d\xd2\x71\x3a\xbe\x7c\xbe\xe8\x75\x3d\x50\x3c\x9d\x64\x87\xa4\xff\x73\xfe\x84\x44\x10\xf0\x17\x9e\x15\x99\x64\x87\xa1\x4e\x0a\x5b\xf2\xc2\x56\x09\xaf\x43\x1e\x57\xca\xcf\xda\xd6\x09\x45\x78\x87\xc5\x41\x6b\xa9\x1e\x43\x3c\x34\xc9\x59\xad\xd1\xe5\xb1\xe6\xa9\xf7\x26\xe8\x11\x03\x46\x6a\x41\x94\xc7\x01\xc7\xbb\x8b\x6e\x88\x9d\x46\x9d\xed\x5e\xee\xcf\xdf\xd3\x49\x53\x26\xa3\xf1\x51\x9c\x11\xf5\xe8\x19\xe0\x71\xe7\x13\x36\xa7\x67\xa7\x4a\x2a\xf4\x16\xe3\xe9\x07\xe5\x93\x67\xc2\xc0\x8c\x59\xd5\xe8\x28\x7d\xc6\xf9\x5f\x58\x9c\x1c\x4e\x29\x41\xe8\x05\xba\xa4\x10\xee\xeb\xd8\x15\xaf\xbb\xa0\x90\xde\x4f\xb2\xe2\xbf\x54\x17\x9a\x35\x19\xe1\xf1\xf7\xd0\x9e\xd0\x6c\x87\x2d\x0a\x36\x24\x3f\xfb\x8f\x91\x3b\xaa\xf2\x75\x0c\xc5\xbf\xec\x44\xd8\xec\x6f\x7e\x08\x79\xf3\xcf\x9f\xc3\x23\x55\xe5\xd3\x53\x3c\x1d\x0e\x61\x45\x9e\x9e\x26\x99\xf8\xb2\x9e\x97\xbf\xc3\x9f\x73\xff\x9e\x57\x3e\xf7\x61\x30\x60\xef\xc7\xfe\x5b\xf3\x77\x00\x00\x00\xff\xff\xca\x27\x60\xc5\xc9\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1737, mode: os.FileMode(416), modTime: time.Unix(1461803931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5f\x73\xdb\x36\x0c\x7f\xd7\xa7\x40\xf5\xd2\xed\x2e\x92\x92\xb4\xd7\x87\xce\xce\x9d\x97\x64\x9b\x6f\xa9\xb3\x4b\xdc\xe5\xfa\xb4\xa3\x24\xd8\x62\x23\x89\x2a\x49\x45\xf1\xd2\x7c\xf7\x81\x94\xe2\xd8\xb2\xfc\xa7\xff\xbc\xbc\xc4\x24\xc1\x1f\xf0\x03\x20\x00\x52\xef\xc5\xd9\xe5\xe9\xf8\xc3\x5f\xe7\x90\xe8\x2c\x3d\x71\x7a\x2f\x3c\xcf\x39\x15\xc5\x4c\xf2\x69\xa2\xe1\xf8\xf0\xe8\x0d\xfc\x2e\xc4\x34\x45\x18\xe6\x91\x0f\x83\x34\x05\x7b\xa4\x40\xa2\x42\x79\x87\xb1\xef\x38\x17\x3c\xc2\x5c\x61\x0c\x65\x1e\xa3\x04\x9d\x20\x0c\x0a\x16\xd1\xbf\xe6\xe4\x00\xfe\x46\xa9\xb8\xc8\xe1\xd8\x3f\x84\x9f\x8c\x80\xdb\x1c\xb9\x3f\xff\xe2\xcc\x44\x09\x19\x9b\x41\x2e\x34\x94\x0a\x09\x80\x2b\x98\x70\x52\x8a\xf7\x11\x16\x1a\x78\x0e\x91\xc8\x8a\x94\xb3\x3c\x42\xa8\xb8\x4e\xac\x92\x06\xc2\x77\x3e\x34\x00\x22\xd4\x8c\x64\x19\x49\x17\xb4\x9a\x2c\x4a\x01\xd3\x8e\x03\xf4\x97\x68\x5d\xbc\x0d\x82\xaa\xaa\x7c\x66\xad\xf4\x85\x9c\x06\x69\x2d\xa5\x82\x8b\xe1\xe9\xf9\xe8\xfa\xdc\x23\x4b\x1d\xe7\x7d\x9e\xa2\x32\x5c\x3f\x95\x5c\x12\xc1\x70\x06\xac\x20\x3b\x22\x16\x92\x75\x29\xab\x40\x48\x60\x53\x89\x74\xa6\x85\xb1\xb3\x92\x5c\xf3\x7c\x7a\x00\x4a\x4c\x74\xc5\x24\x3a\x31\x57\x5a\xf2\xb0\xd4\x4b\x0e\x7a\xb2\x8a\x98\x2e\x0a\x90\x8b\x58\x0e\xee\xe0\x1a\x86\xd7\x2e\xfc\x3a\xb8\x1e\x5e\x1f\x38\x37\xc3\xf1\x1f\x97\xef\xc7\x70\x33\xb8\xba\x1a\x8c\xc6\xc3\xf3\x6b\xb8\xbc\x82\xd3\xcb\xd1\xd9\x70\x3c\xbc\x1c\xd1\xea\x37\x18\x8c\x3e\xc0\x9f\xc3\xd1\xd9\x01\x20\xb9\x87\x94\xe0\x7d\x21\x8d\xed\x64\x20\x37\xae\x33\x91\xba\x46\x5c\x52\x3e\x11\xb5\x31\xaa\xc0\x88\x4f\x78\x44\x8c\xf2\x69\xc9\xa6\x08\x53\x71\x87\x32\x27\x22\x50\xa0\xcc\xb8\x32\xc1\x53\x64\x5a\xec\xa4\x3c\xe3\x9a\x69\xbb\x5e\xa1\xe3\x3b\x9e\x47\x59\xd4\x24\x53\x82\x2c\x3e\x21\x9f\xf7\x34\xd7\x29\x9e\x5c\xe1\x1d\xc7\x0a\xce\x90\x82\x94\xaa\x5e\x50\xef\x9a\xf3\x94\xe7\xb7\xe4\xe4\xb4\xef\x2a\x3d\x23\x8f\x27\x88\xda\x85\x44\xe2\xa4\xef\x9a\x70\x29\x8a\x57\xc6\xee\xa3\x38\xf7\x43\x21\x34\xb9\x8b\x15\x66\x41\x49\x11\xcc\x37\x82\x57\xfe\x2b\xff\x4d\x10\x29\xf5\xbc\xe7\x67\x9c\xa4\x94\x72\x21\xd8\xaa\x28\x50\x86\x56\x14\x48\x6b\xa6\x5a\xbc\x96\x91\xc9\x90\xb3\x0c\xfb\xae\x39\x2b\x84\xa4\x5b\x91\xc8\x35\xe6\xba\xef\x56\x3c\xd6\x49\x3f\xa6\x6b\x11\x7a\x76\x71\x40\x99\x40\x69\xc0\x52\x4f\x45\x2c\xc5\xfe\x91\x6b\x61\x54\x24\x39\x65\xb3\x92\xd1\x33\x2d\xf6\x91\xdd\xfb\x53\xfb\x88\xb1\x82\x2b\x4b\xc9\xec\x51\x42\x86\x2a\x30\xe1\x48\x99\xfc\xa8\x82\x23\xff\xd8\x3f\x7e\xf3\xb4\x61\x79\x7d\x54\xee\x49\x2f\xa8\x41\xbf\x33\xbe\xa7\x98\x21\xf0\x2f\xee\xa6\xc4\xc4\x42\xb2\x6a\xca\xb5\xc5\x57\x89\xa8\x62\x51\xe5\x04\xfb\xf4\x93\xf0\x5f\xf9\x87\x81\x49\xf5\xf9\x5e\x07\x89\x5e\x50\xe7\x4c\x2f\x14\x31\xd5\x83\xa9\x47\x4f\x5b\xdf\x25\xdc\x41\x51\x48\xc6\x15\xde\x60\x58\xfb\x32\xe6\x77\xe6\xdc\x04\x41\x8a\x34\x45\x49\x62\xa8\xeb\x14\xb3\x12\x8d\x4c\x94\x32\xa5\xfa\xae\x91\xa3\xd2\x80\xb2\x39\x5b\x3e\x95\xa2\x9a\xef\xb7\xef\xa5\x5e\x16\x7b\x47\xc7\x0b\xe7\x24\x91\x1c\x3d\x09\x68\xbc\xd7\x1e\xe5\xbe\xa6\x07\x21\x52\x61\x5a\xa2\x4b\x89\x5e\x08\xc5\xb5\x90\xb3\xb7\xf0\xf0\x50\x30\x9d\x3c\x3e\x12\xb3\xa3\x05\x15\xe4\x89\xbb\xb9\x25\x4b\x8b\x65\xb3\xc0\xf8\x03\xa5\x17\x32\xf9\x65\x16\x86\x27\xcd\x73\xf6\xb6\x17\x84\x5f\xa1\x78\xb3\xb6\x15\x65\xc6\xf1\xa6\x46\x6c\xd0\xd6\x6d\xf6\xe1\x12\xd2\xc3\x43\x5c\x5b\xed\xcb\x06\xf0\xf1\x71\x0f\xb6\x7f\x2a\x51\x51\x00\xbf\xa3\xf1\x16\xf1\xe9\x3f\xca\xbd\xb0\xb0\xd5\xf5\x0a\x27\x3f\x80\x86\x81\x26\xe4\x3d\xd0\x18\x33\x49\xcf\xf1\x0f\xa1\xa1\x2d\xf4\x7e\x68\x9c\x61\x5d\xd2\xbe\xfd\x91\x58\x94\x88\x09\xd5\x3d\x59\x65\x16\x3f\x6b\x33\x95\x66\x59\xc3\x3e\x4a\x0d\x9f\x6c\x0a\xd7\x5a\xad\xf3\xaa\x6c\xa7\x3d\x2f\x26\x18\xd7\x54\x75\x89\x05\x32\xea\xac\x76\x06\xa4\xa1\xca\x1c\xf8\x66\xa1\xd6\x58\x66\xcc\x37\x42\x5e\xcd\x61\xad\x03\xbb\x19\x90\x0c\xcf\x8b\x52\x83\x9e\x15\xd4\xe2\x69\x24\x8c\x6e\x43\x71\x6f\x4d\xc9\x44\x6c\xc6\x05\xa3\xdc\xa7\xee\x55\xa4\x6c\x66\x22\x50\xaf\x97\xdd\x6e\x31\x96\x34\x6f\x88\xc4\x6e\x8e\x30\xad\xb2\xad\x7c\x0d\x35\x93\xa3\x8b\xbe\xa3\x51\xc7\xfa\xae\xb9\x3c\x99\x5c\xd0\x86\x6a\xf3\xee\xf2\x0d\x08\x9a\xf0\x68\x18\xb5\x70\x7c\x52\x43\xf9\x66\x3a\x2a\x15\xf4\xfb\xf0\xb2\x39\x7f\x69\x1c\x61\xcf\x4c\x13\x5c\x49\xbc\x75\xf8\x60\xae\xe4\x65\x16\x52\x9c\xd6\x69\x28\xf3\x28\xa1\x51\x84\x74\xc0\xe7\xcf\xd0\x3e\x95\x98\xd1\x78\x6a\xf4\x2f\x29\x33\xcf\xbc\x15\x4d\x13\x35\xb2\xf8\x0b\x0f\x7a\x47\x00\xbe\xc5\x40\x16\xc7\xd6\x80\xbd\x71\x7e\x52\xd8\xcd\x58\xfe\x78\xc6\xcf\x4e\xdf\x11\xf4\x10\xe6\x8c\x76\xe0\xdc\xca\xa5\x5d\x2d\x3f\x04\xeb\x98\xad\x71\xfa\x4a\xf0\x86\xf4\x0e\x4e\xd9\xa2\xe0\x7f\x28\xca\xa7\x54\x53\x78\x5e\x0a\x32\x75\x48\xe3\xe9\x54\xb2\x2d\xdd\x68\xa3\x1d\x2c\xa5\x31\x26\x67\x1a\xff\x69\x17\x1a\xfa\x4f\xef\x43\xb6\x4c\xcf\xdb\x92\xd9\x51\x73\xaf\xd5\xeb\xc6\x6f\x9b\x69\xbc\x36\x9e\x6c\xe4\x35\xcf\xa8\xb9\xb1\xac\x58\xed\x69\x9b\x2f\xd2\x0b\x6c\xbe\x5a\x8f\x3a\x2f\xb5\x4c\x2c\x65\xba\xec\x46\xd6\xbc\x1c\xce\xb1\x49\xe2\xf1\x71\x41\x57\x4d\xca\x28\x63\x5f\xd2\xe4\x9f\x35\xbf\x58\x54\xdd\x01\xbb\x8f\xee\xad\xa2\x52\x6d\x99\xde\x37\xce\x46\x8b\xe9\xa0\xc9\x61\x2c\x5e\x4c\x07\x7a\x25\xcc\x28\x20\xeb\x23\xdf\x7e\x35\xeb\xa2\xd7\x80\x74\x35\xf8\x75\xf9\xd0\x2a\x95\x5b\x7b\x7c\x6d\x79\x67\xa3\xad\xff\x1e\x1e\x1a\x91\xc6\x98\xc5\x0c\x6d\x2b\x5b\x9d\x06\x76\xad\xc6\x36\x93\x5b\x8a\x58\xa9\x13\x21\x77\x6d\xb1\xaf\x21\x9d\xea\x6c\x9e\x61\x0d\x56\x9d\x52\xfd\xfe\x4b\x73\x48\x15\xeb\x42\x88\x5b\x65\xbe\xee\xc5\x30\x16\xf0\x0e\x77\xc5\xce\xb3\x6a\x2d\x34\x9d\x11\xf2\x08\x31\x56\xf0\x4e\x48\x84\x1b\x21\x6f\xb7\x15\xc3\xee\x7c\xaa\x47\x9f\x8d\x31\xe9\xce\x6e\x73\x39\xe4\x79\xec\x99\xaf\x50\x73\x04\xb3\xe8\x68\x5d\x3b\xd6\xe5\xf9\xcf\xe6\x47\xfb\x43\x48\xfb\xdb\x51\xfb\xab\x86\xf9\x9c\x61\xbf\x6e\xd8\x0f\x63\xff\x05\x00\x00\xff\xff\x77\xf5\x53\xb5\x76\x15\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 5494, mode: os.FileMode(416), modTime: time.Unix(1461806523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x30\x10\xc7\xdf\xfd\x57\x9c\xca\x0b\xa0\x26\x05\x56\x8d\xad\x3c\x75\xc0\xb6\x68\xa8\x95\x68\x19\xe2\x69\x72\x9c\x4b\x62\xe1\xd8\xc1\x76\x08\xdd\xb4\xff\x7d\xe7\xa4\x9d\x60\x5b\xb6\x25\x0f\x55\x7c\x9f\xfb\xfa\x7b\x3f\x3a\x39\x64\xe7\xa6\xde\x58\x59\x94\x1e\x4e\x8e\x8e\x5f\xc3\x07\x63\x0a\x85\x90\x68\x11\xc3\x5c\x29\xe8\x42\x0e\x2c\x3a\xb4\x8f\x98\xc5\x8c\x5d\x49\x81\xda\x61\x06\x8d\xce\xd0\x82\x2f\x11\xe6\x35\x17\xf4\xb3\x8d\x8c\xe1\x33\x5a\x27\x8d\x86\x93\xf8\x08\xf6\x03\x30\xda\x86\x46\x07\x67\x6c\x63\x1a\xa8\xf8\x06\xb4\xf1\xd0\x38\x24\x01\xe9\x20\x97\x74\x29\x3e\x09\xac\x3d\x48\x0d\xc2\x54\xb5\x92\x5c\x0b\x84\x56\xfa\xb2\xbb\x64\x2b\x11\xb3\xbb\xad\x80\x49\x3d\x27\x96\x13\x5d\xd3\x57\xfe\x9c\x02\xee\x19\x03\x7a\x4a\xef\xeb\xd9\x64\xd2\xb6\x6d\xcc\x3b\x97\xb1\xb1\xc5\x44\xf5\x94\x9b\x5c\x25\xe7\x97\x8b\xd5\x65\x44\x4e\x19\xbb\xd1\x0a\x5d\xa8\xf5\xa1\x91\x96\x0a\x4c\x37\xc0\x6b\xf2\x21\x78\x4a\xee\x14\x6f\xc1\x58\xe0\x85\x45\x8a\x79\x13\x7c\xb6\x56\x7a\xa9\x8b\x31\x38\x93\xfb\x96\x5b\x64\x99\x74\xde\xca\xb4\xf1\x2f\x1a\xb4\x73\x45\x95\x3e\x07\xa8\x45\x5c\xc3\x68\xbe\x82\x64\x35\x82\x77\xf3\x55\xb2\x1a\xb3\xdb\x64\xfd\x71\x79\xb3\x86\xdb\xf9\xf5\xf5\x7c\xb1\x4e\x2e\x57\xb0\xbc\x86\xf3\xe5\xe2\x22\x59\x27\xcb\x05\x7d\xbd\x87\xf9\xe2\x0e\x3e\x25\x8b\x8b\x31\x20\xb5\x87\x2e\xc1\xa7\xda\x06\xef\x64\x50\x86\xd6\x85\x49\xad\x10\x5f\x5c\x9e\x9b\xde\x8c\xab\x51\xc8\x5c\x0a\xaa\x48\x17\x0d\x2f\x10\x0a\xf3\x88\x56\x53\x21\x50\xa3\xad\xa4\x0b\xc3\x73\x64\x2d\x63\x4a\x56\xd2\x73\xdf\x7d\xff\x56\x4e\xcc\x0e\x27\x2c\xe6\xca\x53\x32\xf7\xf8\xc5\x9a\x76\xa6\x7d\x19\x89\x52\xaa\x6c\x1f\x1f\x51\x1f\x7c\xa3\x21\xa4\x5c\xdc\x17\xd6\x50\x7a\x24\x8c\x32\x76\x06\x7b\xf9\x34\xbc\x67\xec\xfb\x70\xba\xc9\xb2\xc1\xec\xee\x09\xd9\x2c\x16\x2e\x55\x0d\x42\x20\xfb\xf0\xde\xf4\xf4\xcd\x29\x66\x7d\xb4\x44\x4e\x9e\xa3\x94\x5b\xf8\xa3\xd6\x1e\xbe\xc2\xb7\x41\x0a\x68\xa3\x6c\x21\x75\xe4\x4d\x3d\x83\xe3\x93\xfa\xe9\xd9\x59\x6a\xbc\x37\xd5\xee\x38\xe8\x66\xe8\x44\xa7\xd8\x96\xd2\x63\xe4\x68\xb3\x70\x06\x34\x82\x3e\x1c\xb6\x39\xca\x64\x9e\x77\x4c\xcd\xb3\x8c\x7a\x1b\x75\x7f\xa5\x19\x1c\xf5\xda\xbb\x53\x85\xf9\xee\xb0\x53\xa6\xac\xa8\xb7\x3d\x64\x79\x1a\xde\x6d\xf5\xa6\xaa\x50\xfb\xff\x4f\x50\x85\xaf\x06\xb1\x3c\xdf\x61\xba\x6a\x07\xa8\xc0\xec\x28\x43\xbb\x11\xd6\x78\x80\xfc\x39\x63\x16\x37\x5a\x94\xb4\x6c\x5b\xf6\xd7\xa6\x45\xad\xe5\x75\x0f\x52\x53\x06\x05\x39\x19\xe4\xd3\xb3\xbf\x0b\x58\xac\x68\x99\x07\x3d\x91\xc0\xbf\x24\x52\x65\xc4\xfd\x43\x63\x7c\xbf\x55\xb9\xa1\xfe\x3a\xf9\x95\xb0\xe3\x69\x3f\xa5\x1f\x01\x00\x00\xff\xff\x53\x15\x02\x7f\x36\x05\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 1334, mode: os.FileMode(416), modTime: time.Unix(1461806702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\x51\x8f\xe3\x34\x10\x7e\xcf\xaf\x98\x0b\x12\x02\x69\x93\x5c\xf7\xd0\x0a\x2d\x4d\x51\xe9\x2e\x50\x71\x6a\xd1\xb6\xc7\x6a\x9f\x90\xe3\x4c\x13\x2f\x8e\x6d\x6c\x77\xd3\xb2\xea\x7f\x67\x9c\x74\x7b\x6d\x39\x84\x40\xe8\x5e\xae\x2f\xad\x3d\x63\xcf\xf7\x7d\xf3\x79\x3a\x7c\x75\x33\x9f\x2c\x1f\x7e\xbe\x85\xda\x37\x72\x14\x0d\x5f\x25\x49\x34\xd1\x66\x6b\x45\x55\x7b\xb8\x7c\x3d\xb8\x82\x1f\xb4\xae\x24\xc2\x54\xf1\x14\xc6\x52\x42\x17\x72\x60\xd1\xa1\x7d\xc2\x32\x8d\xa2\xb7\x82\xa3\x72\x58\xc2\x5a\x95\x68\xc1\xd7\x08\x63\xc3\x38\x7d\xed\x23\x17\xf0\x0b\x5a\x27\xb4\x82\xcb\xf4\x35\x7c\x11\x12\xe2\x7d\x28\xfe\xf2\x9b\x68\xab\xd7\xd0\xb0\x2d\x28\xed\x61\xed\x90\x2e\x10\x0e\x56\x82\x8a\xe2\x86\xa3\xf1\x20\x14\x70\xdd\x18\x29\x98\xe2\x08\xad\xf0\x75\x57\x64\x7f\x45\x1a\x3d\xec\x2f\xd0\x85\x67\x94\xcb\x28\xdb\xd0\x6a\x75\x9c\x05\xcc\x47\x11\xd0\xa7\xf6\xde\x5c\x67\x59\xdb\xb6\x29\xeb\x50\xa6\xda\x56\x99\xec\xb3\x5c\xf6\x76\x3a\xb9\x9d\x2d\x6e\x13\x42\x1a\x45\xef\x94\x44\x17\xb8\xfe\xbe\x16\x96\x08\x16\x5b\x60\x86\x70\x70\x56\x10\x3a\xc9\x5a\xd0\x16\x58\x65\x91\x62\x5e\x07\x9c\xad\x15\x5e\xa8\xea\x02\x9c\x5e\xf9\x96\x59\x8c\x4a\xe1\xbc\x15\xc5\xda\x9f\x08\xf4\x82\x8a\x98\x1e\x27\x90\x44\x4c\x41\x3c\x5e\xc0\x74\x11\xc3\x77\xe3\xc5\x74\x71\x11\xdd\x4f\x97\x3f\xce\xdf\x2d\xe1\x7e\x7c\x77\x37\x9e\x2d\xa7\xb7\x0b\x98\xdf\xc1\x64\x3e\xbb\x99\x2e\xa7\xf3\x19\xad\xbe\x87\xf1\xec\x01\x7e\x9a\xce\x6e\x2e\x00\x49\x1e\x2a\x82\x1b\x63\x03\x76\x02\x28\x82\x74\xa1\x53\x0b\xc4\x93\xe2\x2b\xdd\x83\x71\x06\xb9\x58\x09\x4e\x8c\x54\xb5\x66\x15\x42\xa5\x9f\xd0\x2a\x22\x02\x06\x6d\x23\x5c\x68\x9e\x23\x68\x65\x24\x45\x23\x3c\xf3\xdd\xfa\x2f\x74\xd2\x28\x49\xc8\x45\x7b\x33\xd5\xc8\xca\x11\x69\x3e\xf4\xc2\x4b\x1c\xdd\xe1\x93\xc0\x96\x52\x9d\x1f\x66\xfd\x56\x08\x4a\xa1\x7e\x23\x85\x65\x1e\x3b\xbf\x25\xb9\x6b\x44\x1f\x43\x6d\x71\x95\xc7\xa1\x57\x8e\x9a\xd5\xb0\x0d\x2f\x55\x5a\x68\xed\x49\x2b\x66\xc2\x82\x1c\x91\x1d\x36\xb2\x37\xe9\x9b\xf4\x2a\xe3\xce\xbd\xdf\x4b\x1b\x41\x59\xce\xc5\x90\xfd\x63\xa1\xcc\x05\x4e\x3c\xb3\x1d\x46\x77\x7c\xac\x41\xcf\x40\xb1\x06\xf3\x38\xc4\x8c\xb6\x74\x8a\x6b\xe5\x51\xf9\x3c\x6e\x45\xe9\xeb\xbc\xa4\x63\x1c\x93\x6e\x71\x41\x36\x20\x0f\x30\x99\x38\xce\x24\xe6\x83\xb8\xbb\xc6\x71\x2b\xc8\xca\xce\xf2\xf7\xb4\xd8\x23\xdb\xa4\x55\xf7\xbe\x98\x11\xae\xa3\x14\xf6\xc8\x8d\x85\xcb\x42\x2f\x24\xb3\x8f\x2e\x1b\xa4\x97\xe9\xe5\xd5\xcb\x46\xc7\xeb\xd1\xc5\xa3\x61\xd6\x5f\xfa\x3f\xdf\x9f\x38\x16\x08\xfc\x81\x67\x45\x86\x59\xdf\xd0\x61\xa1\x4b\x7a\xac\x55\x42\x4f\x21\x8f\x2b\xe1\xc7\xc6\x58\x26\x1c\xde\x63\xd1\x73\x2d\xc5\x53\x88\x07\x91\xac\x96\x12\x6d\x1e\x4b\xea\x7a\x6f\x00\xd7\xe5\xec\xb3\xb8\x64\xce\xe5\x71\xc8\xa4\x97\x8b\x76\x1f\x3b\x8d\x5a\xdd\x1e\xf6\xcf\xcf\xc9\xa4\x29\x93\xc1\xe5\x51\x9c\x32\xea\xc1\x4b\x82\xc7\x8d\x4f\xc8\x9a\x9e\x7c\xca\x5d\x21\xd7\x18\x93\x0f\x8d\x76\xc2\x6b\xbb\xbd\x86\xe7\x67\xc3\x7c\xbd\xdb\x11\xb7\xc1\x51\x89\x8c\x6a\x1c\x90\x9c\x2c\x4e\x61\x41\x50\x04\x6d\x52\x30\xfb\xef\x10\x16\xa3\xb9\x41\x05\x7b\x45\xae\x87\x59\xf1\x5f\xaa\x33\x49\xbc\x14\xf3\xf8\x6b\x90\x28\x48\x6e\xd1\x20\x23\x5b\xf6\x3e\x0e\x03\x49\x53\x9d\x53\xe1\xff\x06\xe2\x57\xf1\xe8\xf9\xb9\x3f\x97\x7a\xd1\x20\xbd\x88\xc6\x04\x65\x8e\x00\x7c\xf0\xe0\xd7\xa7\xd4\xd8\x07\x9f\x54\x1a\x66\xc2\x67\xdf\x12\x3e\x9d\x87\x32\x46\xef\x76\x9f\xf7\xa1\xfc\x50\x36\x7c\x85\x49\xb3\xdb\x1d\x61\x71\xeb\xa6\x61\x76\x1b\x90\xb0\x8f\xdb\xa2\x89\xd4\xe1\x5f\xed\x23\x34\x89\x77\x95\x3e\xa1\x36\x1d\x7e\xee\x7f\x9c\x4f\xb0\xf3\x79\x7c\x3e\x89\xc2\x08\xea\x26\x52\xf7\x4f\xf3\x67\x00\x00\x00\xff\xff\x4a\x6d\x21\x18\xc7\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2247, mode: os.FileMode(416), modTime: time.Unix(1461803957, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xed\x6f\xdb\xb8\x19\xff\xae\xbf\x82\x10\x8a\x46\x6e\x64\x39\x2d\x86\x61\x98\x91\xed\xb2\xa4\xbd\x33\x96\xa5\x87\x38\x5d\x71\xc8\x82\x42\x91\x68\x9b\x38\xbd\x1d\x49\xc5\xc9\x86\xfc\xef\x7b\x1e\x92\x92\x48\x49\xae\x9d\xf6\x3e\x5c\x3f\x34\x16\x9f\x17\xfe\x9e\x57\xf2\xe1\xec\x8d\x77\x5e\x56\x4f\x9c\xad\x37\x92\xbc\x3b\x79\xfb\x67\xf2\x63\x59\xae\x33\x4a\x16\x45\x12\x91\xb3\x2c\x23\x8a\x24\x08\xa7\x82\xf2\x07\x9a\x46\x9e\x77\xc9\x12\x5a\x08\x9a\x92\xba\x48\x29\x27\x72\x43\xc9\x59\x15\x27\xf0\xc7\x50\x42\xf2\x6f\xca\x05\x2b\x0b\xf2\x2e\x3a\x21\x01\x32\xf8\x86\xe4\x4f\xe6\xde\x53\x59\x93\x3c\x7e\x22\x45\x29\x49\x2d\x28\x28\x60\x82\xac\x18\x6c\x4a\x1f\x13\x5a\x49\xc2\x0a\x92\x94\x79\x95\xb1\xb8\x48\x28\xd9\x32\xb9\x51\x9b\x18\x15\x91\xf7\x8b\x51\x50\xde\xcb\x18\x78\x63\xe0\xae\xe0\x6b\x65\x73\x91\x58\x7a\x1e\x81\x7f\x1b\x29\xab\xbf\xce\x66\xdb\xed\x36\x8a\x15\xca\xa8\xe4\xeb\x59\xa6\xb9\xc4\xec\x72\x71\xfe\xfe\x6a\xf9\x7e\x0a\x48\x3d\xef\x53\x91\x51\x81\xb6\xfe\x56\x33\x0e\x06\xde\x3f\x91\xb8\x02\x1c\x49\x7c\x0f\xe8\xb2\x78\x4b\x4a\x4e\xe2\x35\xa7\x40\x93\x25\xe2\xdc\x72\x26\x59\xb1\x0e\x89\x28\x57\x72\x1b\x73\xea\xa5\x4c\x48\xce\xee\x6b\xe9\x38\xa8\x41\x05\x96\xda\x0c\xe0\xa2\xb8\x20\xfe\xd9\x92\x2c\x96\x3e\xf9\xc7\xd9\x72\xb1\x0c\xbd\xcf\x8b\x9b\x9f\x3e\x7e\xba\x21\x9f\xcf\xae\xaf\xcf\xae\x6e\x16\xef\x97\xe4\xe3\x35\x39\xff\x78\x75\xb1\xb8\x59\x7c\xbc\x82\xaf\x0f\xe4\xec\xea\x17\xf2\xcf\xc5\xd5\x45\x48\x28\xb8\x07\x36\xa1\x8f\x15\x47\xec\x00\x90\xa1\xeb\x30\x52\x4b\x4a\x9d\xcd\x57\xa5\x06\x23\x2a\x9a\xb0\x15\x4b\xc0\xa2\x62\x5d\xc7\x6b\x4a\xd6\xe5\x03\xe5\x05\x18\x42\x2a\xca\x73\x26\x30\x78\x02\xa0\xa5\x5e\xc6\x72\x26\x63\xa9\xbe\x07\xe6\x44\xde\x9b\x99\xe7\x3d\xc4\x9c\xac\x99\x3c\xab\x2a\x1e\x33\x41\x3f\xd3\xfb\x53\xd4\x9b\xc5\x3c\xca\xcb\xb4\xce\x68\xe0\xbb\x64\x3f\x24\xb7\x7e\xb1\x5e\xc6\x05\x38\xef\xbf\xd4\xbf\x83\xa4\xf0\x66\x33\xf2\x23\x95\x10\x4c\x4e\xab\x52\x30\x59\x72\xc8\x90\x38\x07\xd4\xbc\xcc\xd5\xa6\xab\x1a\xd2\xb1\x8a\xe5\x26\xf2\x56\x75\x91\x20\x26\xb2\xa6\xf2\x32\x16\xf2\x67\x58\x7d\x9f\xd1\x9c\x16\x32\x40\x8e\x09\xf9\x1f\x04\x1f\x81\x89\x2c\x16\x9b\x05\x00\x7f\x24\xa7\x5a\x18\x16\xa4\x5a\xf8\xb8\x0a\xfc\x19\x26\x24\x21\x6c\x45\x02\x8b\xf3\x6f\xe4\x44\x6b\x20\x80\x46\xd6\xbc\xd0\x92\xa2\xbe\xc7\xd0\x15\x6b\x8b\xf7\xf8\x6d\x68\xd4\xd2\x62\x0d\x1b\xa3\xb6\x67\xcf\x91\x9b\x7b\xcf\x8e\x79\x0f\x8c\x6e\x89\xa8\xf3\x3c\x06\x13\x5d\xeb\x52\x2a\x12\xce\x2a\x34\xcd\x35\x72\xa9\xd9\x03\x64\xe8\x8c\x83\x88\xd7\x99\x04\xc3\x70\x79\x6e\x16\x0b\xba\xcd\x58\x41\x1b\x9b\x91\x14\xb1\xc6\xde\xff\x14\x9d\xc1\x0e\xa3\x63\xb2\xa5\xd5\x32\xfa\x24\x74\x74\xb7\xa6\xa2\x2e\x2d\x63\x9c\x00\xca\xfe\x32\xd4\x66\x58\x1c\x7d\xc0\xd6\x73\x98\xe6\x6a\x5d\xc6\x1e\x28\x16\xb8\x64\x39\x15\x32\xce\x2b\x12\x0b\x9d\xc2\x34\x29\x8b\x54\x74\xee\xab\x0b\xf6\x48\x20\x73\x92\x4d\xd8\xa8\xc2\xe5\x4d\x9d\xc7\xc5\x74\xc5\x19\x2d\xd2\xec\x89\x3c\xe8\xbe\x64\xf9\xb6\x21\xdd\x34\x3b\x04\xed\x5e\xda\x02\xa3\x0c\x2c\x27\x17\xb1\xa4\x90\x5e\x5c\x80\x03\xa4\xcd\xf7\x86\xbc\x3d\x39\x39\x99\x44\xb2\x5c\x6a\xd3\x26\xca\x80\x76\x13\x25\xf3\xa9\x80\x9a\xa3\xe9\x05\x5b\xad\x82\x14\xfe\xeb\xc2\x88\xbd\x0f\x97\x05\xfa\x1c\xfe\x46\x02\x0a\x58\x62\xb0\xf0\x8b\x4c\xa7\x50\x3e\x44\xc7\xad\x61\x47\xd6\xdb\x3b\x5c\xc1\xa2\x0e\xd4\x32\xf6\xa3\x56\x55\xe3\x7e\xc5\x1c\x55\xb5\xd8\x68\xe4\x1f\x0c\x43\xd0\x72\xde\xae\xee\x26\xfd\x28\x28\xa9\x39\x36\x50\xd7\x86\x81\x74\xb3\x4d\x83\xeb\x12\xb2\x03\xb1\x35\xf4\xce\x14\x8d\xbf\xe3\xbc\x82\xda\x6e\x38\x95\xd4\xed\xc9\x5d\xc3\x4d\x6c\x66\xbe\x11\x1f\x0c\xbf\x61\x57\xa2\xb7\xed\x2f\x93\x75\xd3\xb7\x77\x9d\x50\x76\xa8\xd0\x3b\x57\xe8\xaa\xce\xef\xa1\xc7\x9d\x92\x13\x07\xc0\xd8\x72\x66\x4c\xbd\x35\x1a\xda\x40\xb0\x26\x10\xca\xac\xc6\x43\x5a\x48\xd2\x47\xe9\x18\xcd\x8c\xb4\x2e\x23\x24\x47\x90\x54\x5c\x8a\xcf\xd0\xd7\x03\x7f\x3a\x9d\x82\x33\x3a\x1d\xa4\x67\x99\x16\x68\x4b\xea\x4f\x93\x46\xdb\x33\xa1\x19\x9e\x37\x63\x4a\x8f\x8f\x8f\x7b\x4a\xf9\xf7\x2b\xfd\xe1\x87\x9e\x4e\x15\x68\x28\x4f\xb4\xf3\x67\xe0\x1b\x51\x1c\xea\x95\xb6\x3b\x85\xfe\xa4\xdd\xcb\xf8\xab\xdc\x2d\xee\xca\x1e\xfb\x13\xa3\xce\x69\xf0\x43\x95\x05\xf0\x5c\x5a\x21\x6d\x0b\xda\x06\xdb\x93\x29\xe1\x10\x84\xf3\xfa\xbc\xac\x0b\x04\xe2\xaa\x98\x76\x89\x33\xb7\xc3\xd4\xee\xe0\xb0\xcf\x6d\xa7\x0f\x41\x74\x06\x5b\x10\xd0\xe1\x0e\x04\xab\x5b\x9b\xed\x30\x99\x74\x99\x5b\xab\x44\xb7\x2d\xa8\x43\x54\xea\x52\x2c\x88\x61\x8f\xc0\x77\x11\x7c\x03\xc2\x1f\x10\x96\xbf\xb2\xaa\x82\x0b\x8d\x4f\x8e\x5d\x67\x41\xa6\x41\x6f\x4e\x36\x70\x23\x00\xb2\x82\xe9\x44\xe4\xf9\x80\xd4\x9a\xf6\x2a\xa0\xb3\xd5\x31\xaf\xb3\xc7\xb2\x80\xf8\x9c\xe6\x70\xbb\x01\xcc\xfd\xfc\x79\x3b\xb1\x81\xb4\xd2\xc7\xc7\x07\xd5\xd0\x77\x61\x8a\xd3\x74\x3f\x22\xfe\x32\x44\xfd\x3e\xf1\x32\x44\x6d\x8c\xbe\xc1\x4f\xe3\x50\xbd\xee\x7f\x2c\x21\xeb\x6a\x03\xf9\x0e\x57\x1a\x75\x96\x74\x8b\x81\xd5\xd8\x42\xbb\x21\x59\x47\x01\x4b\x41\xd4\xc7\xe6\x89\x79\xa6\x8f\x36\xdd\xc7\xe7\xf6\x65\x0d\xed\x45\xe9\xc0\xda\x33\x04\xe1\x50\x3b\xc5\x1c\x76\xf6\xe1\xf6\x12\x38\xc6\xc7\x18\x03\x8b\xc7\x09\x45\x0c\xd7\x4a\xf2\xfa\xb5\x2d\xe6\xd0\xef\x67\x76\xac\xdc\x8e\xee\xe8\x6c\x63\xf0\xae\x8d\x80\xdb\xaa\xf9\x1e\xee\x1e\x4a\x72\x7a\x3a\x66\x8b\xe5\x3b\xff\x5f\x65\xaa\xee\x29\xaa\x94\x2d\xd1\x5e\x0a\x0e\x05\xaf\x29\x5e\xd7\x07\x72\xaa\x03\xc0\xb0\x84\xcb\x7c\x44\x9d\xd7\xcb\xeb\xaf\xf9\xb4\xc3\xdb\x6c\x7a\x41\x33\x2a\x87\x9b\x8e\xf8\xa2\x87\xbb\x51\x70\x86\x95\xd8\x07\x37\x26\x3e\xc8\x99\x3d\x15\x05\xd8\x65\x2d\x74\x31\x35\xb8\x71\xd2\x8d\xec\x93\xa1\x77\x70\x28\xba\x7d\x2c\xf0\x11\xba\x56\x0c\x44\xfd\xc3\xa2\x98\xcb\x05\xfe\x19\xa6\xf8\x78\x41\xa4\xc6\x08\xe1\x40\x74\x6b\xd5\xfa\xb2\x36\x53\xb5\xc8\x52\x6b\xa5\xd5\x65\xae\xb1\xea\xb7\x43\x87\xeb\x1d\x8c\xed\x80\x90\xd7\x54\x23\x04\x8c\xee\x6c\x18\xc1\xbd\x5e\xf2\x32\xcb\x28\x0f\xfc\x0c\x46\xe5\x6b\x1c\x07\xa1\x29\x35\x86\x04\xaf\x04\x8c\xfb\x34\x7c\x85\x83\xbd\x46\xad\x7e\x46\x50\xc3\x30\xcf\xc5\x15\x9b\xa9\x09\xd2\x9f\x40\x14\x93\x04\x66\x62\x7d\xee\xb5\xf2\x30\x61\x54\x30\xcd\x62\xf2\x6b\x55\x51\x3b\x71\x32\x85\xbd\xe2\x25\x8a\x5d\x36\x9b\x5f\x1b\x81\x4e\x72\xfe\x3c\xe9\x5d\x8e\xf7\x8a\x58\xf7\x64\xb5\xdd\xce\x8b\x63\x5f\x42\xcb\xe0\x1c\xa9\x67\x28\x45\x84\x6b\x63\xa4\x47\xcb\x26\x9b\x41\x65\xd7\xec\x11\x43\x60\xf3\x62\xa8\x77\x8d\xca\x13\x2b\xc3\xad\x31\x0c\x14\x0e\x93\x48\x29\x46\x65\x85\xd5\x3d\x76\xa4\x43\xa1\x3b\x54\x61\x8a\x1d\x62\x8d\x4e\xdb\x1b\x6d\x9c\x8e\x77\xc6\x3b\x7c\x95\x95\x89\x7a\x8d\xb0\x87\xe0\xaa\x84\x7d\x5a\x4a\x24\x68\xcc\x93\x4d\x30\xb9\x3d\x42\xd2\x91\xf2\xb2\x15\x69\xe5\xc6\xaa\x9c\xef\x48\x9c\x2f\x66\x32\xff\x3b\x7e\x9c\xaa\xc6\x00\x3f\x0e\x4f\x26\x13\xa9\x11\x6f\x37\xbc\x8a\x45\xe7\xd0\x10\x02\xa8\x28\xbe\xe8\x37\x02\xf1\xad\x10\x50\x87\x71\x64\x3f\x9d\xd5\xe2\x8e\x84\x1e\x82\x49\xb2\x52\xd0\xf4\x7b\xe1\x68\x2d\xdf\x00\x68\x67\x85\xed\x10\x72\x6a\xac\xd9\xed\x25\x55\x86\x52\x42\x37\x3d\xbb\x7a\x9a\xe5\xb9\x3d\xc8\xb5\x2f\x12\x7d\xde\xdf\x6a\x20\x44\x2d\xdd\x16\xc2\x4e\xba\x83\x7f\xd0\x64\x49\x63\x83\x5d\xd6\xb8\x10\x34\x70\xc2\x0e\x44\xa8\x54\x87\x83\x97\xa2\x1d\xb5\xad\xf4\x8e\x55\xf7\x3e\xfd\xa6\x36\x9c\xca\x77\x9c\x66\x3b\x4a\x9f\x49\x96\x9f\xbe\xf6\xd6\x32\x77\x4f\x1f\xeb\x4d\xab\x39\xf6\xcc\x83\xd9\x69\x03\xe2\xb0\xa6\x02\x1e\xd1\x66\xfd\xee\x2d\xa5\x4b\xb3\x9d\xac\x48\x34\xfd\xe7\x8f\xd7\x69\x34\xbc\x2f\x29\x95\x31\xcb\x7a\xc5\x8d\x97\xb6\xd7\x9a\xc1\xac\xe1\xcf\xc3\xa1\x19\xa5\x5d\xb1\xb7\xa9\xf5\xf5\x86\xd3\x60\x82\xdb\xc3\xef\x04\xc8\xd4\x52\x83\x0b\xdf\xd3\xba\x02\x9c\x0f\xa9\x51\xf3\xba\x36\x78\xb3\x6b\x9d\x8a\xe9\x05\x5e\x16\x4d\x6d\xf5\x3a\x95\xbe\x38\xb2\xd5\xd3\x79\x99\x63\x34\xda\x6c\x17\x41\x62\x56\x36\x9c\xc6\xa9\xdd\xae\xec\x2a\x71\x98\x22\xf3\xd5\xef\x27\x7b\x98\x0e\x2a\x36\xb7\x23\xf6\x34\x6e\x58\x96\x72\x5a\x74\x1e\x3c\xd4\xac\x56\x14\xba\xdb\xce\xbb\xf3\x9a\x16\x94\xc7\x92\x1a\x5d\x3f\xc9\x3c\x03\x2d\xc5\x03\xe5\x12\xef\xce\xa3\x7e\x72\x77\xd9\x80\x88\x72\x96\x11\x8a\xf2\xf8\x57\x6a\xf4\x8c\xb9\xc6\xea\xaf\x93\x31\x17\x0e\x2f\xa7\x7a\x78\x82\x2a\x16\x65\xf6\x40\xd3\xa3\x81\x93\x3a\xdf\x20\xa3\xab\xae\x91\xb2\x27\x2c\x97\xa3\xbd\xc6\x1f\x65\x6b\x99\x1f\xed\x1c\xaf\x76\x49\x15\xf9\xf6\x68\x74\x88\x6a\x44\x77\x09\xae\x9e\xd8\x91\x7d\x2a\xbc\x2c\x0d\x5e\x12\xb9\x83\x52\xa1\xcd\x2b\x2b\xa1\x74\x75\x5f\xe8\x26\xd2\xbe\x64\xf7\x0e\x70\x8b\x45\xdd\xeb\x60\x52\xec\x9f\xe6\xb8\x68\x8e\xa5\x01\xaf\xf5\xf2\x3a\x3c\xcf\x91\x63\x78\x84\xf7\xd7\x0f\xaa\xb2\x31\x27\xbb\x80\x8c\xcf\xc4\x41\xb5\x36\x2e\xfa\x35\x07\xf7\x3b\xf0\x88\x6b\xf7\xc7\xa0\x29\x19\x13\x68\xf5\xa8\xb9\x25\x62\x53\x6e\xd3\x72\x5b\x44\xe7\x0d\x21\x18\xed\x2d\xfb\xec\xdd\x93\x54\x87\xd8\xdc\xbb\xdd\x18\xe6\xee\x8e\xf0\xff\x00\x00\x00\xff\xff\xaa\x9c\x1d\x86\xe9\x1e\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 7913, mode: os.FileMode(416), modTime: time.Unix(1461806485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
