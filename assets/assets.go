// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461974225, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x44\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x77\x91\x7f\xef\x50\x56\x12\xdb\x45\xb1\xd8\xa2\xbe\xc8\xe4\x3c\xcd\xbc\x37\xf3\x46\x93\x37\xd7\xcb\xab\xf5\xfd\xaf\x37\x50\xfb\x46\x4f\xa3\xc9\x9b\x24\x89\xae\x6c\xbb\x77\xaa\xaa\x3d\x8c\xdf\x8e\x2e\xe1\x83\xb5\x95\x46\x98\x1b\x99\xc2\x4c\x6b\xe8\x43\x04\x0e\x09\xdd\x23\x96\x69\x14\x7d\x54\x12\x0d\x61\x09\x5b\x53\xa2\x03\x5f\x23\xcc\x5a\x21\xf9\x31\x44\x2e\xe0\x37\x74\xa4\xac\x81\x71\xfa\x16\xbe\x0d\x80\x78\x08\xc5\xdf\x7d\x1f\xed\xed\x16\x1a\xb1\x07\x63\x3d\x6c\x09\x39\x81\x22\xd8\x28\x2e\x8a\x3b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x45\x86\x14\x69\x74\x3f\x24\xb0\x85\x17\x8c\x15\x8c\x6e\xf9\xb4\x39\x46\x81\xf0\x51\x04\xfc\xab\xbd\x6f\xdf\x67\x59\xd7\x75\xa9\xe8\x59\xa6\xd6\x55\x99\x3e\xa0\x28\xfb\x38\xbf\xba\x59\xac\x6e\x12\x66\x1a\x45\x9f\x8c\x46\x0a\x5a\xff\xdc\x2a\xc7\x02\x8b\x3d\x88\x96\x79\x48\x51\x30\x3b\x2d\x3a\xb0\x0e\x44\xe5\x90\x63\xde\x06\x9e\x9d\x53\x5e\x99\xea\x02\xc8\x6e\x7c\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf5\x27\x0d\x7a\x66\xc5\x4a\x8f\x01\xdc\x22\x61\x20\x9e\xad\x60\xbe\x8a\xe1\xc7\xd9\x6a\xbe\xba\x88\xee\xe6\xeb\x9f\x97\x9f\xd6\x70\x37\xbb\xbd\x9d\x2d\xd6\xf3\x9b\x15\x2c\x6f\xe1\x6a\xb9\xb8\x9e\xaf\xe7\xcb\x05\x9f\x7e\x82\xd9\xe2\x1e\x7e\x99\x2f\xae\x2f\x00\xb9\x3d\x5c\x04\x77\xad\x0b\xdc\x99\xa0\x0a\xad\x0b\x93\x5a\x21\x9e\x14\xdf\xd8\x03\x19\x6a\x51\xaa\x8d\x92\xac\xc8\x54\x5b\x51\x21\x54\xf6\x11\x9d\x61\x21\xd0\xa2\x6b\x14\x85\xe1\x11\x53\x2b\x23\xad\x1a\xe5\x85\xef\xcf\xff\x90\x93\x46\x49\xc2\x2e\x1a\xcc\x54\xa3\x28\xa7\xdc\xf3\x89\x57\x5e\xe3\xf4\x16\x5b\x4b\xca\x5b\xb7\x67\x38\xf9\x49\x76\xb8\x0e\x00\xad\xcc\x1f\xdc\x65\x9d\xc7\xe4\xf7\xdc\xf2\x1a\xd1\xc7\x50\x3b\xdc\xe4\x71\x98\x17\xf1\xc0\x1a\xb1\x93\xa5\x49\x0b\x6b\x3d\xf7\x4b\xb4\xe1\xc0\xae\xc8\x5e\x2e\xb2\x77\xe9\xbb\xf4\x32\x93\x44\xaf\x77\x69\xa3\x18\x45\x14\x43\xf6\xc5\x42\x19\x05\x5d\x32\x73\xf8\xa8\xb0\xa3\xe3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xac\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x7f\xb8\x60\x2b\xb0\x0f\x84\x4e\x48\x0a\x8d\xf9\x28\xee\xd3\x90\x74\x8a\xed\x4c\x4e\xbe\xca\x12\x0f\x62\x97\x56\xfd\x8e\x89\x56\x51\x2f\x29\xdc\xb1\x23\x0b\xca\xc2\x3c\xb4\x70\x0f\x94\x8d\xd2\x71\x3a\xbe\x7c\xbe\xe8\x75\x3d\x50\x3c\x9d\x64\x87\xa4\xff\x73\xfe\x84\x44\x10\xf0\x17\x9e\x15\x99\x64\x87\xa1\x4e\x0a\x5b\xf2\xc2\x56\x09\xaf\x43\x1e\x57\xca\xcf\xda\xd6\x09\x45\x78\x87\xc5\x41\x6b\xa9\x1e\x43\x3c\x34\xc9\x59\xad\xd1\xe5\xb1\xe6\xa9\xf7\x26\xe8\x11\x03\x46\x6a\x41\x94\xc7\x01\xc7\xbb\x8b\x6e\x88\x9d\x46\x9d\xed\x5e\xee\xcf\xdf\xd3\x49\x53\x26\xa3\xf1\x51\x9c\x11\xf5\xe8\x19\xe0\x71\xe7\x13\x36\xa7\x67\xa7\x4a\x2a\xf4\x16\xe3\xe9\x07\xe5\x93\x67\xc2\xc0\x8c\x59\xd5\xe8\x28\x7d\xc6\xf9\x5f\x58\x9c\x1c\x4e\x29\x41\xe8\x05\xba\xa4\x10\xee\xeb\xd8\x15\xaf\xbb\xa0\x90\xde\x4f\xb2\xe2\xbf\x54\x17\x9a\x35\x19\xe1\xf1\xf7\xd0\x9e\xd0\x6c\x87\x2d\x0a\x36\x24\x3f\xfb\x8f\x91\x3b\xaa\xf2\x75\x0c\xc5\xbf\xec\x44\xd8\xec\x6f\x7e\x08\x79\xf3\xcf\x9f\xc3\x23\x55\xe5\xd3\x53\x3c\x1d\x0e\x61\x45\x9e\x9e\x26\x99\xf8\xb2\x9e\x97\xbf\xc3\x9f\x73\xff\x9e\x57\x3e\xf7\x61\x30\x60\xef\xc7\xfe\x5b\xf3\x77\x00\x00\x00\xff\xff\xca\x27\x60\xc5\xc9\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1737, mode: os.FileMode(416), modTime: time.Unix(1461803931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x51\x53\xdb\x38\x10\x7e\xf7\xaf\xd8\xfa\x85\xbb\x19\x6c\x03\xed\xf4\x66\x7a\x09\x33\x39\xe0\xae\x99\xa3\xe1\x86\xd0\x63\xfa\x74\x23\xdb\x9b\x58\xc5\xb6\x5c\x49\x26\xe4\x28\xff\xfd\x56\xb2\x13\x12\xe3\x10\x97\x16\x8e\x17\x22\x69\xf5\xed\x7e\xbb\xab\xd5\x5a\xbd\x57\xc7\x67\x47\x17\x9f\xfe\x3a\x81\x44\x67\xe9\xa1\xd3\x7b\xe5\x79\xce\x91\x28\xe6\x92\x4f\x13\x0d\x07\x7b\xfb\x6f\xe1\x0f\x21\xa6\x29\xc2\x30\x8f\x7c\x18\xa4\x29\xd8\x25\x05\x12\x15\xca\x6b\x8c\x7d\xc7\x39\xe5\x11\xe6\x0a\x63\x28\xf3\x18\x25\xe8\x04\x61\x50\xb0\x88\xfe\xd5\x2b\xbb\xf0\x37\x4a\xc5\x45\x0e\x07\xfe\x1e\xfc\x64\x04\xdc\x7a\xc9\xfd\xf9\x57\x67\x2e\x4a\xc8\xd8\x1c\x72\xa1\xa1\x54\x48\x00\x5c\xc1\x84\x93\x52\xbc\x89\xb0\xd0\xc0\x73\x88\x44\x56\xa4\x9c\xe5\x11\xc2\x8c\xeb\xc4\x2a\xa9\x21\x7c\xe7\x53\x0d\x20\x42\xcd\x48\x96\x91\x74\x41\xa3\xc9\xaa\x14\x30\xed\x38\x40\x7f\x89\xd6\xc5\xbb\x20\x98\xcd\x66\x3e\xb3\x56\xfa\x42\x4e\x83\xb4\x92\x52\xc1\xe9\xf0\xe8\x64\x34\x3e\xf1\xc8\x52\xc7\xf9\x98\xa7\xa8\x0c\xd7\x2f\x25\x97\x44\x30\x9c\x03\x2b\xc8\x8e\x88\x85\x64\x5d\xca\x66\x20\x24\xb0\xa9\x44\x5a\xd3\xc2\xd8\x39\x93\x5c\xf3\x7c\xba\x0b\x4a\x4c\xf4\x8c\x49\x74\x62\xae\xb4\xe4\x61\xa9\xd7\x1c\xb4\xb0\x8a\x98\xae\x0a\x90\x8b\x58\x0e\xee\x60\x0c\xc3\xb1\x0b\xbf\x0d\xc6\xc3\xf1\xae\x73\x39\xbc\x78\x7f\xf6\xf1\x02\x2e\x07\xe7\xe7\x83\xd1\xc5\xf0\x64\x0c\x67\xe7\x70\x74\x36\x3a\x1e\x5e\x0c\xcf\x46\x34\xfa\x1d\x06\xa3\x4f\xf0\xe7\x70\x74\xbc\x0b\x48\xee\x21\x25\x78\x53\x48\x63\x3b\x19\xc8\x8d\xeb\x4c\xa4\xc6\x88\x6b\xca\x27\xa2\x32\x46\x15\x18\xf1\x09\x8f\x88\x51\x3e\x2d\xd9\x14\x61\x2a\xae\x51\xe6\x44\x04\x0a\x94\x19\x57\x26\x78\x8a\x4c\x8b\x9d\x94\x67\x5c\x33\x6d\xc7\x0f\xe8\xf8\x8e\xe7\x51\x16\xd5\xc9\x94\x20\x8b\x0f\xc9\xe7\x3d\xcd\x75\x8a\x87\xe7\x78\xcd\x71\x06\xc7\x48\x41\x4a\x55\x2f\xa8\x66\xcd\x7a\xca\xf3\x2b\x72\x72\xda\x77\x95\x9e\x93\xc7\x13\x44\xed\x42\x22\x71\xd2\x77\x4d\xb8\x14\xc5\x2b\x63\x37\x51\x9c\xfb\xa1\x10\x9a\xdc\xc5\x0a\x33\xa0\xa4\x08\x96\x13\xc1\x6b\xff\xb5\xff\x36\x88\x94\xba\x9f\xf3\x33\x4e\x52\x4a\xb9\x10\x6c\x55\x14\x28\x43\x2b\x0a\xa4\x35\x53\xad\x6e\xcb\xc8\x64\xc8\x59\x86\x7d\xd7\xac\x15\x42\xd2\xae\x48\xe4\x1a\x73\xdd\x77\x67\x3c\xd6\x49\x3f\xa6\x6d\x11\x7a\x76\xb0\x4b\x99\x40\x69\xc0\x52\x4f\x45\x2c\xc5\xfe\xbe\x6b\x61\x54\x24\x39\x65\xb3\x92\xd1\x3d\x2d\xf6\x99\xdd\xf8\x53\x7b\xc4\x58\xc1\x95\xa5\x64\xe6\x28\x21\x43\x15\x98\x70\xa4\x4c\x7e\x56\xc1\xbe\x7f\xe0\x1f\xbc\x5d\x4c\x58\x5e\x9f\x95\x7b\xd8\x0b\x2a\xd0\x1f\x8c\xef\x29\x66\x08\xfc\x8b\xdd\x94\x98\x58\x48\x36\x9b\x72\x6d\xf1\x55\x22\x66\xb1\x98\xe5\x04\xbb\xf8\x49\xf8\xaf\xfd\xbd\xc0\xa4\xfa\x72\xae\x85\x44\x2f\xa8\x72\xa6\x17\x8a\x98\xea\xc1\xd4\xa3\xd3\xd6\x77\x09\x77\x50\x14\x92\x71\x85\x97\x18\x56\xbe\x8c\xf9\xb5\x59\x37\x41\x90\x22\x4d\x51\x92\x18\xea\x2a\xc5\xac\x44\x2d\x13\xa5\x4c\xa9\xbe\x6b\xe4\xa8\x34\xa0\xac\xd7\xd6\x57\xa5\x98\x2d\xe7\x9b\xfb\x52\x2f\x8b\xbd\xfd\x83\x95\x75\x92\x48\xf6\x17\x02\x1a\x6f\xb4\x47\xb9\xaf\xe9\x20\x44\x2a\x4c\x4b\x74\x29\xd1\x0b\xa1\xb8\x16\x72\xfe\x0e\x6e\x6f\x0b\xa6\x93\xbb\x3b\x62\xb6\xbf\xa2\x82\x3c\x71\xbd\xb4\x64\x6d\xb0\x6e\x16\x18\x7f\xa0\xf4\x42\x26\xbf\xcd\xc2\xf0\xb0\x3e\x67\xef\x7a\x41\xf8\x04\xc5\x8f\x6b\x7b\xa0\xcc\x38\xde\xd4\x88\x47\xb4\xb5\x9b\xbd\xb7\x86\x74\x7b\x1b\x57\x56\xfb\xb2\x06\xbc\xbb\x7b\x01\xdb\xbf\x94\xa8\x28\x80\x3f\xd0\x78\x8b\xb8\xf8\x8f\xf2\x45\x58\xd8\xea\x7a\x8e\x93\x67\xa0\x61\xa0\x09\xf9\x05\x68\x5c\x30\x49\xe7\xf8\x59\x68\x68\x0b\xfd\x32\x34\x8e\xb1\x2a\x69\xdf\x7f\x24\x56\x25\x62\x42\x75\x0f\x1f\x32\x8b\xef\xb5\x99\x4a\xb3\xae\xe1\x05\x4a\xcd\x51\x42\xf7\x06\x3e\xb9\xd4\x98\x42\x2e\xb1\x40\xa6\x8d\x8e\x8c\xfa\x0b\xd3\x49\xc5\x7c\x32\xa9\x53\xef\xc8\x4e\xaa\x2d\x66\x19\xcf\x54\xdb\x7d\x73\x57\x3f\xf4\x44\x6b\xdc\x96\x7b\x16\x4e\xd5\xfc\xe9\x7b\x59\xa9\x13\x21\x4f\x32\x1a\x74\x81\xf8\xa5\x05\x42\x95\x59\xc6\xe4\xbc\xb1\xfd\xb9\xee\x08\xf2\xb1\xb9\xa3\xac\xaf\x53\x9c\xe8\xf7\xd4\xe2\x8d\x79\x4c\x0e\x58\xcc\xda\x76\xff\x7e\xfa\x09\x21\x5e\xde\xbd\xb6\xa7\xf7\x0c\xea\x5a\xc8\x6d\xa7\xbf\x08\xb8\x19\x6c\x0a\xb4\xe1\x6a\x84\xbc\x8a\xf0\xc6\x63\xd2\x4e\x97\x64\x78\x5e\x94\x1a\xf4\xbc\xa0\x46\x8e\x1a\xff\xe8\x2a\x14\x37\xd6\x94\x4c\xc4\xa6\x29\x34\xca\x7d\xea\x51\x8a\x94\xcd\x4d\x68\xaa\xf1\xfa\xe1\xb2\x18\x6b\x9a\x1f\x39\x6f\xdd\x1c\x61\x1a\xa2\xa6\xf2\x0d\xd4\x9a\xc7\x85\x1a\x5a\xeb\xbb\x7a\xf3\x64\x72\x4a\x13\xaa\xc9\xbb\xcd\x37\x20\x28\xeb\xe8\x93\xc3\xc2\xf1\x49\x05\xe5\x9b\x1e\xb8\x54\xd0\xef\xc3\x4e\xbd\xbe\x63\x1c\x61\xd7\x4c\xab\xf3\x20\xab\x37\xe1\x83\xd9\x92\x97\x59\x48\x71\xda\xa4\xa1\xcc\x23\x5b\x38\xe2\x1d\xf8\xfa\x15\x9a\xab\x12\x33\xfa\x08\x31\xfa\xd7\x94\x99\xca\x6e\x45\xd3\x44\x8d\x2c\xfe\x4a\x39\x6f\x09\xc0\xf7\x18\xc8\xe2\xd8\x1a\xf0\x62\x9c\x17\x0a\xdb\x19\xcb\xe7\x67\x7c\xef\xf4\x8e\xa0\x7b\xb0\x64\xd4\x81\x73\x23\x97\xba\x5a\xbe\x07\xd6\x31\x5b\xe3\xf4\x44\xf0\x9a\x74\x07\xa7\x6c\x51\xf0\x7f\x5c\xbd\x54\x53\x78\x5e\x0a\x32\x75\x48\x1f\x21\x53\xc9\xb6\xf4\x1c\x8f\xda\xc1\x52\x6a\x56\x73\xa6\xf1\x9f\x66\xa1\xa1\xff\xf4\xd5\x6b\xcb\xf4\xb2\xf9\x30\x33\x6a\xe9\xb5\x6a\x5c\xfb\xed\x71\x1a\x6f\x8c\x27\x6b\x79\x73\xdd\xd2\x9e\xac\xe8\x72\x61\xae\x6e\x64\x53\xfa\xea\xea\xb6\xa9\x61\x62\x29\xd3\x75\x37\xb2\xfa\x09\x60\x89\x4d\x12\x77\x77\x2b\xba\x2a\x52\x46\x19\xfb\x96\x56\xee\x5e\xf3\xab\x55\xd5\x2d\xb0\x2f\x71\xd5\xab\xa8\x54\x5b\xbe\xd1\x3a\xb7\x69\x9a\x1c\xc6\xe2\xd5\x74\x30\x6d\x0c\x05\x64\x73\xe4\x9b\x1f\xe0\x6d\xf4\x6a\x90\xb6\x0b\x7e\x53\x3e\x34\x4a\xe5\xd6\x3b\xbe\xb2\xbc\xf5\xa2\xad\xfe\x6e\x6f\x6b\x91\xda\x98\xd5\x0c\x6d\x2a\x7b\xd8\x0d\x74\xad\xc6\x36\x93\x1b\x8a\xaa\xee\xb1\xeb\x15\xfb\x06\xd2\xa9\xce\x96\x19\x56\x63\x55\x29\xd5\xef\xef\x98\x45\xaa\x58\xa7\x42\x5c\x29\xf3\x86\x1b\xc3\x85\x80\x0f\xd8\x15\x3b\xcf\x66\x1b\xa1\x69\x8d\x90\x47\x88\xb1\x82\x0f\x42\x22\x5c\x0a\x79\xb5\xad\x18\xb6\xe7\x53\xd5\xfa\x3c\x1a\x93\xf6\xec\x36\x9b\x43\x9e\xc7\x9e\x79\x6b\x5c\x22\x98\x41\xcb\xd5\xd5\xb1\x2e\x2f\x7f\xd6\x3f\x9c\xc6\x73\x57\xf3\x85\xb0\xf9\x76\x65\x1e\xad\xec\x1b\x96\x7d\xfe\xfc\x2f\x00\x00\xff\xff\x1b\xbd\x4d\x41\x5c\x17\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 5980, mode: os.FileMode(416), modTime: time.Unix(1461967415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x30\x10\xc7\xdf\xfd\x57\x9c\xca\x0b\xa0\x26\x05\x56\x8d\xad\x3c\x75\xc0\xb6\x68\xa8\x95\x68\x19\xe2\x69\x72\x9c\x4b\x62\xe1\xd8\xc1\x76\x08\xdd\xb4\xff\x7d\xe7\xa4\x9d\x60\x5b\xb6\x25\x0f\x55\x7c\x9f\xfb\xfa\x7b\x3f\x3a\x39\x64\xe7\xa6\xde\x58\x59\x94\x1e\x4e\x8e\x8e\x5f\xc3\x07\x63\x0a\x85\x90\x68\x11\xc3\x5c\x29\xe8\x42\x0e\x2c\x3a\xb4\x8f\x98\xc5\x8c\x5d\x49\x81\xda\x61\x06\x8d\xce\xd0\x82\x2f\x11\xe6\x35\x17\xf4\xb3\x8d\x8c\xe1\x33\x5a\x27\x8d\x86\x93\xf8\x08\xf6\x03\x30\xda\x86\x46\x07\x67\x6c\x63\x1a\xa8\xf8\x06\xb4\xf1\xd0\x38\x24\x01\xe9\x20\x97\x74\x29\x3e\x09\xac\x3d\x48\x0d\xc2\x54\xb5\x92\x5c\x0b\x84\x56\xfa\xb2\xbb\x64\x2b\x11\xb3\xbb\xad\x80\x49\x3d\x27\x96\x13\x5d\xd3\x57\xfe\x9c\x02\xee\x19\x03\x7a\x4a\xef\xeb\xd9\x64\xd2\xb6\x6d\xcc\x3b\x97\xb1\xb1\xc5\x44\xf5\x94\x9b\x5c\x25\xe7\x97\x8b\xd5\x65\x44\x4e\x19\xbb\xd1\x0a\x5d\xa8\xf5\xa1\x91\x96\x0a\x4c\x37\xc0\x6b\xf2\x21\x78\x4a\xee\x14\x6f\xc1\x58\xe0\x85\x45\x8a\x79\x13\x7c\xb6\x56\x7a\xa9\x8b\x31\x38\x93\xfb\x96\x5b\x64\x99\x74\xde\xca\xb4\xf1\x2f\x1a\xb4\x73\x45\x95\x3e\x07\xa8\x45\x5c\xc3\x68\xbe\x82\x64\x35\x82\x77\xf3\x55\xb2\x1a\xb3\xdb\x64\xfd\x71\x79\xb3\x86\xdb\xf9\xf5\xf5\x7c\xb1\x4e\x2e\x57\xb0\xbc\x86\xf3\xe5\xe2\x22\x59\x27\xcb\x05\x7d\xbd\x87\xf9\xe2\x0e\x3e\x25\x8b\x8b\x31\x20\xb5\x87\x2e\xc1\xa7\xda\x06\xef\x64\x50\x86\xd6\x85\x49\xad\x10\x5f\x5c\x9e\x9b\xde\x8c\xab\x51\xc8\x5c\x0a\xaa\x48\x17\x0d\x2f\x10\x0a\xf3\x88\x56\x53\x21\x50\xa3\xad\xa4\x0b\xc3\x73\x64\x2d\x63\x4a\x56\xd2\x73\xdf\x7d\xff\x56\x4e\xcc\x0e\x27\x2c\xe6\xca\x53\x32\xf7\xf8\xc5\x9a\x76\xa6\x7d\x19\x89\x52\xaa\x6c\x1f\x1f\x51\x1f\x7c\xa3\x21\xa4\x5c\xdc\x17\xd6\x50\x7a\x24\x8c\x32\x76\x06\x7b\xf9\x34\xbc\x67\xec\xfb\x70\xba\xc9\xb2\xc1\xec\xee\x09\xd9\x2c\x16\x2e\x55\x0d\x42\x20\xfb\xf0\xde\xf4\xf4\xcd\x29\x66\x7d\xb4\x44\x4e\x9e\xa3\x94\x5b\xf8\xa3\xd6\x1e\xbe\xc2\xb7\x41\x0a\x68\xa3\x6c\x21\x75\xe4\x4d\x3d\x83\xe3\x93\xfa\xe9\xd9\x59\x6a\xbc\x37\xd5\xee\x38\xe8\x66\xe8\x44\xa7\xd8\x96\xd2\x63\xe4\x68\xb3\x70\x06\x34\x82\x3e\x1c\xb6\x39\xca\x64\x9e\x77\x4c\xcd\xb3\x8c\x7a\x1b\x75\x7f\xa5\x19\x1c\xf5\xda\xbb\x53\x85\xf9\xee\xb0\x53\xa6\xac\xa8\xb7\x3d\x64\x79\x1a\xde\x6d\xf5\xa6\xaa\x50\xfb\xff\x4f\x50\x85\xaf\x06\xb1\x3c\xdf\x61\xba\x6a\x07\xa8\xc0\xec\x28\x43\xbb\x11\xd6\x78\x80\xfc\x39\x63\x16\x37\x5a\x94\xb4\x6c\x5b\xf6\xd7\xa6\x45\xad\xe5\x75\x0f\x52\x53\x06\x05\x39\x19\xe4\xd3\xb3\xbf\x0b\x58\xac\x68\x99\x07\x3d\x91\xc0\xbf\x24\x52\x65\xc4\xfd\x43\x63\x7c\xbf\x55\xb9\xa1\xfe\x3a\xf9\x95\xb0\xe3\x69\x3f\xa5\x1f\x01\x00\x00\xff\xff\x53\x15\x02\x7f\x36\x05\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 1334, mode: os.FileMode(416), modTime: time.Unix(1461806702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\x51\x8f\xe3\x34\x10\x7e\xcf\xaf\x98\x0b\x12\x02\x69\x93\x5c\xf7\xd0\x0a\x2d\x4d\x51\xe9\x2e\x50\x71\x6a\xd1\xb6\xc7\x6a\x9f\x90\xe3\x4c\x13\x2f\x8e\x6d\x6c\x77\xd3\xb2\xea\x7f\x67\x9c\x74\x7b\x6d\x39\x84\x40\xe8\x5e\xae\x2f\xad\x3d\x63\xcf\xf7\x7d\xf3\x79\x3a\x7c\x75\x33\x9f\x2c\x1f\x7e\xbe\x85\xda\x37\x72\x14\x0d\x5f\x25\x49\x34\xd1\x66\x6b\x45\x55\x7b\xb8\x7c\x3d\xb8\x82\x1f\xb4\xae\x24\xc2\x54\xf1\x14\xc6\x52\x42\x17\x72\x60\xd1\xa1\x7d\xc2\x32\x8d\xa2\xb7\x82\xa3\x72\x58\xc2\x5a\x95\x68\xc1\xd7\x08\x63\xc3\x38\x7d\xed\x23\x17\xf0\x0b\x5a\x27\xb4\x82\xcb\xf4\x35\x7c\x11\x12\xe2\x7d\x28\xfe\xf2\x9b\x68\xab\xd7\xd0\xb0\x2d\x28\xed\x61\xed\x90\x2e\x10\x0e\x56\x82\x8a\xe2\x86\xa3\xf1\x20\x14\x70\xdd\x18\x29\x98\xe2\x08\xad\xf0\x75\x57\x64\x7f\x45\x1a\x3d\xec\x2f\xd0\x85\x67\x94\xcb\x28\xdb\xd0\x6a\x75\x9c\x05\xcc\x47\x11\xd0\xa7\xf6\xde\x5c\x67\x59\xdb\xb6\x29\xeb\x50\xa6\xda\x56\x99\xec\xb3\x5c\xf6\x76\x3a\xb9\x9d\x2d\x6e\x13\x42\x1a\x45\xef\x94\x44\x17\xb8\xfe\xbe\x16\x96\x08\x16\x5b\x60\x86\x70\x70\x56\x10\x3a\xc9\x5a\xd0\x16\x58\x65\x91\x62\x5e\x07\x9c\xad\x15\x5e\xa8\xea\x02\x9c\x5e\xf9\x96\x59\x8c\x4a\xe1\xbc\x15\xc5\xda\x9f\x08\xf4\x82\x8a\x98\x1e\x27\x90\x44\x4c\x41\x3c\x5e\xc0\x74\x11\xc3\x77\xe3\xc5\x74\x71\x11\xdd\x4f\x97\x3f\xce\xdf\x2d\xe1\x7e\x7c\x77\x37\x9e\x2d\xa7\xb7\x0b\x98\xdf\xc1\x64\x3e\xbb\x99\x2e\xa7\xf3\x19\xad\xbe\x87\xf1\xec\x01\x7e\x9a\xce\x6e\x2e\x00\x49\x1e\x2a\x82\x1b\x63\x03\x76\x02\x28\x82\x74\xa1\x53\x0b\xc4\x93\xe2\x2b\xdd\x83\x71\x06\xb9\x58\x09\x4e\x8c\x54\xb5\x66\x15\x42\xa5\x9f\xd0\x2a\x22\x02\x06\x6d\x23\x5c\x68\x9e\x23\x68\x65\x24\x45\x23\x3c\xf3\xdd\xfa\x2f\x74\xd2\x28\x49\xc8\x45\x7b\x33\xd5\xc8\xca\x11\x69\x3e\xf4\xc2\x4b\x1c\xdd\xe1\x93\xc0\x96\x52\x9d\x1f\x66\xfd\x56\x08\x4a\xa1\x7e\x23\x85\x65\x1e\x3b\xbf\x25\xb9\x6b\x44\x1f\x43\x6d\x71\x95\xc7\xa1\x57\x8e\x9a\xd5\xb0\x0d\x2f\x55\x5a\x68\xed\x49\x2b\x66\xc2\x82\x1c\x91\x1d\x36\xb2\x37\xe9\x9b\xf4\x2a\xe3\xce\xbd\xdf\x4b\x1b\x41\x59\xce\xc5\x90\xfd\x63\xa1\xcc\x05\x4e\x3c\xb3\x1d\x46\x77\x7c\xac\x41\xcf\x40\xb1\x06\xf3\x38\xc4\x8c\xb6\x74\x8a\x6b\xe5\x51\xf9\x3c\x6e\x45\xe9\xeb\xbc\xa4\x63\x1c\x93\x6e\x71\x41\x36\x20\x0f\x30\x99\x38\xce\x24\xe6\x83\xb8\xbb\xc6\x71\x2b\xc8\xca\xce\xf2\xf7\xb4\xd8\x23\xdb\xa4\x55\xf7\xbe\x98\x11\xae\xa3\x14\xf6\xc8\x8d\x85\xcb\x42\x2f\x24\xb3\x8f\x2e\x1b\xa4\x97\xe9\xe5\xd5\xcb\x46\xc7\xeb\xd1\xc5\xa3\x61\xd6\x5f\xfa\x3f\xdf\x9f\x38\x16\x08\xfc\x81\x67\x45\x86\x59\xdf\xd0\x61\xa1\x4b\x7a\xac\x55\x42\x4f\x21\x8f\x2b\xe1\xc7\xc6\x58\x26\x1c\xde\x63\xd1\x73\x2d\xc5\x53\x88\x07\x91\xac\x96\x12\x6d\x1e\x4b\xea\x7a\x6f\x00\xd7\xe5\xec\xb3\xb8\x64\xce\xe5\x71\xc8\xa4\x97\x8b\x76\x1f\x3b\x8d\x5a\xdd\x1e\xf6\xcf\xcf\xc9\xa4\x29\x93\xc1\xe5\x51\x9c\x32\xea\xc1\x4b\x82\xc7\x8d\x4f\xc8\x9a\x9e\x7c\xca\x5d\x21\xd7\x18\x93\x0f\x8d\x76\xc2\x6b\xbb\xbd\x86\xe7\x67\xc3\x7c\xbd\xdb\x11\xb7\xc1\x51\x89\x8c\x6a\x1c\x90\x9c\x2c\x4e\x61\x41\x50\x04\x6d\x52\x30\xfb\xef\x10\x16\xa3\xb9\x41\x05\x7b\x45\xae\x87\x59\xf1\x5f\xaa\x33\x49\xbc\x14\xf3\xf8\x6b\x90\x28\x48\x6e\xd1\x20\x23\x5b\xf6\x3e\x0e\x03\x49\x53\x9d\x53\xe1\xff\x06\xe2\x57\xf1\xe8\xf9\xb9\x3f\x97\x7a\xd1\x20\xbd\x88\xc6\x04\x65\x8e\x00\x7c\xf0\xe0\xd7\xa7\xd4\xd8\x07\x9f\x54\x1a\x66\xc2\x67\xdf\x12\x3e\x9d\x87\x32\x46\xef\x76\x9f\xf7\xa1\xfc\x50\x36\x7c\x85\x49\xb3\xdb\x1d\x61\x71\xeb\xa6\x61\x76\x1b\x90\xb0\x8f\xdb\xa2\x89\xd4\xe1\x5f\xed\x23\x34\x89\x77\x95\x3e\xa1\x36\x1d\x7e\xee\x7f\x9c\x4f\xb0\xf3\x79\x7c\x3e\x89\xc2\x08\xea\x26\x52\xf7\x4f\xf3\x67\x00\x00\x00\xff\xff\x4a\x6d\x21\x18\xc7\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2247, mode: os.FileMode(416), modTime: time.Unix(1461972134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x6d\x6f\xdc\xb8\x11\xfe\xae\x5f\x41\x2c\x0e\xb1\x36\x96\xb5\x4e\x50\x1c\x8a\x2e\xdc\x9e\x6b\x27\x77\x8b\xba\x4e\xea\x75\x1a\x1c\xdc\x20\xa0\x25\xee\x2e\x11\xbd\x1d\x49\x79\xe3\x1e\xfc\xdf\x3b\x43\x52\x12\x29\x69\xb3\xeb\xbb\x03\x9a\x0f\xf1\x8a\x9c\x19\x3e\xf3\xca\x19\xce\x5e\x06\x17\x65\xf5\x28\xf8\x7a\xa3\xc8\xeb\xd3\x57\xdf\x93\x1f\xcb\x72\x9d\x31\xb2\x28\x92\x98\x9c\x67\x19\xd1\x5b\x92\x08\x26\x99\x78\x60\x69\x1c\x04\x57\x3c\x61\x85\x64\x29\xa9\x8b\x94\x09\xa2\x36\x8c\x9c\x57\x34\x81\x3f\x76\x27\x22\xff\x66\x42\xf2\xb2\x20\xaf\xe3\x53\x12\x22\xc1\xc4\x6e\x4d\xa6\xf3\xe0\xb1\xac\x49\x4e\x1f\x49\x51\x2a\x52\x4b\x06\x02\xb8\x24\x2b\x0e\x87\xb2\xaf\x09\xab\x14\xe1\x05\x49\xca\xbc\xca\x38\x2d\x12\x46\xb6\x5c\x6d\xf4\x21\x56\x44\x1c\xfc\x6c\x05\x94\xf7\x8a\x02\x2d\x05\xea\x0a\xbe\x56\x2e\x15\xa1\x2a\x08\x08\xfc\xdb\x28\x55\xfd\x65\x36\xdb\x6e\xb7\x31\xd5\x28\xe3\x52\xac\x67\x99\xa1\x92\xb3\xab\xc5\xc5\x9b\xeb\xe5\x9b\x13\x40\x1a\x04\x1f\x8a\x8c\x49\xd4\xf5\x97\x9a\x0b\x50\xf0\xfe\x91\xd0\x0a\x70\x24\xf4\x1e\xd0\x65\x74\x4b\x4a\x41\xe8\x5a\x30\xd8\x53\x25\xe2\xdc\x0a\xae\x78\xb1\x8e\x88\x2c\x57\x6a\x4b\x05\x0b\x52\x2e\x95\xe0\xf7\xb5\xf2\x0c\xd4\xa0\x02\x4d\x5d\x02\x30\x11\x2d\xc8\xe4\x7c\x49\x16\xcb\x09\xf9\xfb\xf9\x72\xb1\x8c\x82\x8f\x8b\xdb\x9f\xde\x7d\xb8\x25\x1f\xcf\x6f\x6e\xce\xaf\x6f\x17\x6f\x96\xe4\xdd\x0d\xb9\x78\x77\x7d\xb9\xb8\x5d\xbc\xbb\x86\xaf\xb7\xe4\xfc\xfa\x67\xf2\x8f\xc5\xf5\x65\x44\x18\x98\x07\x0e\x61\x5f\x2b\x81\xd8\x01\x20\x47\xd3\xa1\xa7\x96\x8c\x79\x87\xaf\x4a\x03\x46\x56\x2c\xe1\x2b\x9e\x80\x46\xc5\xba\xa6\x6b\x46\xd6\xe5\x03\x13\x05\x28\x42\x2a\x26\x72\x2e\xd1\x79\x12\xa0\xa5\x41\xc6\x73\xae\xa8\xd2\xdf\x03\x75\xe2\xe0\xe5\x2c\x08\x1e\xa8\x20\x6b\xae\xce\xab\x4a\x50\x2e\xd9\x47\x76\x7f\x86\x72\x33\x2a\xe2\xbc\x4c\xeb\x8c\x85\x13\x7f\x7b\x12\x91\xbb\x49\xb1\x5e\xd2\x02\x8c\xf7\x5f\x36\xf9\x04\x41\x11\xcc\x66\xe4\x47\xa6\xc0\x99\x82\x55\xa5\xe4\xaa\x14\x10\x21\x34\x07\xd4\xa2\xcc\xf5\xa1\xab\x1a\xc2\xb1\xa2\x6a\x13\x07\xab\xba\x48\x10\x13\x59\x33\x75\x45\xa5\x7a\x0f\xab\x6f\x32\x96\xb3\x42\x85\x48\x31\x25\xbf\x82\xf3\x11\x98\xcc\xa8\xdc\x2c\x00\xf8\x57\x72\x66\x98\x61\x41\xe9\x85\x77\xab\x70\x32\xc3\x80\x24\x84\xaf\x48\xe8\x50\xfe\x95\x9c\x1a\x09\x04\xd0\xa8\x5a\x14\x86\x53\xd6\xf7\xe8\xba\x62\xed\xd0\x1e\xbf\x8a\xac\x58\x56\xac\xe1\x60\x94\xf6\x14\x78\x7c\xf3\xe0\xc9\x53\xef\x81\xb3\x2d\x91\x75\x9e\x53\x50\xd1\xd7\x2e\x65\x32\x11\xbc\x42\xd5\x7c\x25\x97\x86\x3c\x44\x82\x4e\x39\xf0\x78\x9d\x29\x50\x0c\x97\xe7\x76\xb1\x60\xdb\x8c\x17\xac\xd1\x19\xb7\x62\xde\xe8\xfb\x9f\xa2\x53\xd8\x23\xf4\x54\x76\xa4\x3a\x4a\x9f\x46\x9e\xec\x56\x55\x94\x65\x78\xac\x11\x40\xd8\x9f\x87\xd2\x2c\x89\x27\x0f\xc8\x7a\x06\x33\x54\xad\xc9\xf8\x03\xc3\x04\x57\x3c\x67\x52\xd1\xbc\x22\x54\x9a\x10\x66\x49\x59\xa4\xb2\x33\x5f\x5d\xf0\xaf\x04\x22\x27\xd9\x44\x8d\x28\x5c\xde\xd4\x39\x2d\x4e\x56\x82\xb3\x22\xcd\x1e\xc9\x83\xa9\x4b\x8e\x6d\x9b\xad\xdb\xe6\x84\xb0\x3d\xcb\x68\x60\x85\x81\xe6\xe4\x92\x2a\x06\xe1\x25\x24\x18\x40\xb9\x74\x2f\xc9\xab\xd3\xd3\xd3\x69\xac\xca\xab\x32\xa1\x19\x5b\x1a\x05\xa7\x5a\x8d\xf6\x28\xcd\xf9\xa1\x80\xcc\x63\xe9\x25\x5f\xad\xc2\x14\xfe\xeb\x9c\x89\x15\x10\x97\x25\x5a\x1e\xfe\xc6\x12\xd2\x58\xa1\xcb\xf0\x8b\x9c\x9c\x40\x12\x11\xe3\xbd\x86\x1c\x49\xef\x3e\xe1\x0a\xa6\x76\xa8\x97\xb1\x2a\xb5\xa2\x1a\x27\x68\xe2\xb8\xaa\xe5\xc6\xe0\x7f\x6b\x09\xc2\x96\xf2\x6e\xf5\x69\xda\xf7\x85\xe6\x9a\x63\x19\xf5\x75\x18\x70\x37\xc7\x34\xb8\xae\x20\x46\x10\x5b\xb3\xdf\xa9\x62\xf0\x77\x94\xd7\x90\xe1\x0d\xa5\xe6\xba\x3b\xfd\xd4\x50\x13\x97\x58\x6c\xe4\x5b\x4b\x6f\xc9\x35\xeb\x5d\xfb\xcb\xc6\xde\xc9\xab\x4f\x1d\x53\x76\x28\xd3\x6b\x9f\xe9\xba\xce\xef\xa1\xd2\x9d\x91\x53\x0f\xc0\xd8\x72\x66\x55\xbd\xb3\x12\x5a\x47\xf0\xc6\x11\x5a\xad\xc6\x42\x86\x49\xb1\xaf\xca\x53\x9a\x5b\x6e\x93\x4c\xb8\x1d\x43\x68\x09\x25\x3f\x42\x75\x0f\x27\x27\x27\x27\x60\x8c\x4e\x06\xe9\x69\x66\x18\xda\xc4\xfa\xd3\xb4\x91\xf6\x44\x58\x86\xb7\xce\x98\xd0\xe3\xe3\xe3\x9e\x50\xf1\xfb\x85\xfe\xf0\x43\x4f\xa6\x76\x34\x24\x29\xea\xf9\x1e\xe8\x46\x04\x47\x66\xa5\xad\x51\xd1\x64\xda\x9e\x65\xed\x55\xee\x66\xf7\x79\x8f\x27\x53\x2b\xce\x2b\xf3\x43\x91\x05\xd0\x5c\x39\x2e\x6d\xd3\xda\x05\xdb\xe3\x29\xe1\x2a\x84\x5b\xfb\xa2\xac\x0b\x04\xe2\x8b\x38\xe9\x02\x67\xee\xba\xa9\x3d\xc1\x23\x9f\xbb\x46\x1f\x82\xe8\x14\x76\x20\xa0\xc1\x3d\x08\x4e\xcd\xb6\xc7\x61\x30\x99\x34\x77\x56\x89\x29\x5e\x90\x87\x28\xd4\xdf\x71\x20\x46\xbd\x0d\xb1\x6b\x63\x62\x41\x4c\x06\x1b\xcb\x2f\xbc\xaa\xa0\xad\x99\x90\x63\xdf\x58\x10\x69\x50\xa1\x93\x0d\xf4\x05\xb0\xad\x61\x7a\x1e\x79\x3a\x20\xb4\x4e\x7a\x19\xd0\xe9\xea\xa9\xd7\xe9\xe3\x68\x40\x26\x82\xe5\xd0\xe3\x00\xe6\x7e\xfc\xbc\x9a\xba\x40\x5a\xee\xe3\xe3\x83\x72\xe8\x77\x61\xa2\x69\xba\x1f\x91\x78\x1e\xa2\x7e\x9d\x78\x1e\xa2\xd6\x47\xbf\xc1\x4e\xe3\x50\x83\xee\x7f\x4c\x21\xa7\xc1\x81\x78\x87\xc6\x46\xdf\x25\xdd\x62\xe8\x14\xb6\xc8\x2d\x48\xce\x55\xc0\x53\x60\x9d\x60\xf1\xc4\x38\x33\x57\x9b\xa9\xe3\x73\xb7\x65\x43\x7d\x91\x3b\x74\xce\x8c\x80\x39\x32\x46\xb1\x97\x9d\x7b\xb9\x3d\x07\x8e\xb5\x31\xfa\xc0\xa1\xf1\x5c\x41\xa1\xb9\x24\x2f\x5e\xb8\x6c\xde\xfe\xfd\xcc\xf5\x95\x5f\xd1\x3d\x99\xad\x0f\x5e\xb7\x1e\xf0\x4b\xb5\xd8\x43\xdd\x43\x49\xce\xce\xc6\x74\x71\x6c\x37\xf9\x67\x99\xea\x3e\x45\xa7\xb2\xc3\xda\x0b\xc1\x21\xe3\x0d\xc3\xa6\x7d\xc0\xa7\x2b\x00\x8c\x4c\xb8\x2c\x46\xc4\x05\xbd\xb8\xfe\x96\x4d\x3b\xbc\xcd\xa1\x97\x2c\x63\x6a\x78\xe8\x88\x2d\x7a\xb8\x1b\x01\xe7\x98\x89\x7d\x70\x63\xec\x83\x98\xd9\x93\x51\x80\x5d\xd5\xd2\x24\x53\x83\x1b\xe7\xdd\xd8\xbd\x19\x7a\x17\x87\xde\x77\xaf\x05\x31\xb2\x6f\x04\xc3\xa6\xf9\xe1\xec\xd8\xe6\x02\xff\x0c\x43\x7c\x3c\x21\x52\xab\x84\xf4\x20\xfa\xb9\xea\x7c\x39\x87\xe9\x5c\xe4\xa9\xb3\xd2\xca\xb2\x6d\xac\xfe\xed\xed\x43\x7b\x07\xc3\x3b\x20\x14\x35\x33\x08\x01\xa3\x3f\x21\xc6\xd0\xdd\x2b\x51\x66\x19\x13\xe1\x24\x83\x81\xf9\x06\x87\x42\x28\x4a\x8d\x22\xe1\x77\x12\x86\x7e\x16\x7d\x87\xe3\xbd\x41\xad\x7f\xc6\x90\xc3\x30\xd5\xd1\x8a\xcf\xf4\x1c\x39\x99\x82\x17\x93\x04\x26\x63\x73\xef\xb5\xfc\x30\x67\x54\x30\xd3\x62\xf0\x1b\x51\x71\x3b\x77\x72\x8d\xbd\x12\x25\xb2\x5d\x35\x87\xdf\x58\x86\x8e\x73\xfe\x34\xed\x35\xc7\x7b\x59\x9c\x3e\x59\x1f\xb7\xb3\x71\xec\x73\x18\x1e\x9c\x26\xcd\x24\xa5\x37\xa1\x6d\x8c\xcd\x80\xd9\x44\x33\x88\xec\x8a\x3d\x62\x08\x5d\x5a\x74\xf5\xae\x81\x79\xea\x44\xb8\x33\x8c\x81\xc0\x61\x10\x69\xc1\x28\xac\x70\xaa\xc7\x8e\x70\x28\x4c\x85\x2a\x6c\xb2\x83\xaf\xd1\x68\x7b\xbd\x8d\x33\xf2\x4e\x7f\x47\xdf\x65\x30\x66\xe1\xb2\x3b\x0a\x57\x25\x9c\xd3\xee\xc4\x92\x51\x91\x6c\xc2\xe9\xdd\x11\x6e\x1d\x69\x2b\x3b\x9e\xd6\x66\xac\xca\xf9\x8e\xc0\xf9\x6c\xe7\xf3\xbf\xe1\xc7\x99\x2e\x0c\xf0\xe3\xf0\x60\xb2\x9e\x1a\xb1\x76\x43\xab\x49\x4c\x0c\xe1\x35\x2d\xd5\x79\x96\x59\xbd\x2d\x0e\x90\x53\x7c\x36\xcf\x05\xd2\xc7\x11\x8d\x1c\x6d\xbc\x60\x8f\x47\x56\x2b\xcc\x89\x17\xed\x80\xdd\xe7\x25\x59\x29\x59\xfa\x1b\x4f\x34\xcc\xbb\xcf\x74\xe3\x07\xfa\x9e\xf7\x74\xcd\x16\x8a\xe5\x12\xa2\x6f\x8d\x57\xab\x61\x6c\xe7\x55\x2f\x19\x90\x24\xe6\x48\xed\xa7\x03\x32\x49\x53\x9d\x3a\x12\x0c\xf4\x66\x63\xee\xce\x5c\xed\x13\xc2\x90\xfa\x97\x1a\xb6\xe2\x96\xc2\x65\xc3\xb2\xb7\x93\x63\x50\x13\x49\xa3\x88\x9b\x85\xb8\x10\x36\x90\xa2\x0e\x48\xa4\x85\x47\x83\xe7\x9d\xe9\xce\xcb\xc6\xc9\x8d\xa6\xb6\xbc\x37\x35\xa7\x14\xe1\x3d\x95\xec\x5f\x35\x13\x8f\x11\x49\x68\x96\xdd\xd3\xe4\x8b\x5f\x6f\x1a\xd7\xb4\x15\xa7\x57\xb7\x40\xc6\xb0\xec\x78\xbe\x6a\xb6\x3b\x7f\xb9\x1d\x46\x1b\xd9\x38\xe9\x20\xd3\x6d\xf9\x85\x15\x6e\x77\xd1\x65\x5a\x0b\x16\x1b\x83\x17\x68\x5d\x1b\x6a\xa3\x22\xda\xb4\x6b\x91\xf6\x87\xd1\xee\x8c\x46\xf7\xb0\x0f\xf1\x69\x58\xdf\x5a\x71\xc3\x1a\xd7\xcb\x90\x6f\x18\x77\x44\xa9\x0e\xf0\xb3\x3d\x36\xd2\x96\xee\x8f\x20\x5b\xac\xbc\x52\xec\x24\x87\x9f\x0e\xa6\x49\x70\xb2\xe1\x5b\x4f\x60\x73\xbf\x1d\x70\x9e\x1a\x9b\x3e\xc4\xbe\x63\x9e\x35\x20\x0e\xab\xf2\x60\x2e\xa3\xd6\x1f\x5e\xe3\xbb\x58\xdf\x49\x8a\x9b\xf6\x42\xf8\xff\x97\xfe\x21\x04\x84\xf7\x39\x65\x8a\xf2\xac\x57\x85\x75\xb2\x18\x02\xbb\x86\x3f\x0f\x87\x66\x85\x76\xdd\x4d\x1b\x5a\x6e\x4b\xb3\x1b\x13\xb4\x73\x7f\x10\x20\x9b\x93\x0d\x2e\x7c\xe0\xf4\xef\x8c\xde\x6e\xdc\x3c\x77\x0e\x1e\x51\x5b\xa3\x62\x78\x81\x95\xbb\x84\x77\xd9\x0d\xb0\x8b\x32\xcf\xb9\x92\x4e\xcc\xdb\x95\x70\x27\x6d\x53\x8b\x7b\x57\x58\x9f\x3f\xb1\xd4\xa3\xf7\x57\x6f\xd3\xc4\xa8\x59\x04\x28\x76\xd7\x79\x03\x34\x2b\x4d\xeb\x64\xbf\x78\xea\x3d\x9d\x7f\x3f\xed\x51\x5b\xdf\xea\xcc\x1e\x4d\xea\x11\x3a\xaf\xe7\xb3\x38\x50\x7d\x06\x36\x0e\xa7\xde\x34\x6d\x77\x07\xc5\xc9\x35\x04\x58\xbf\x3d\xce\x98\x04\x57\x36\x82\xd1\xd4\xbd\x89\xdc\xda\xe3\x11\xc5\xf6\xab\x7f\x13\xef\x21\x3a\xa8\x84\x0d\x3d\xe2\x48\xdc\xf0\x2c\x15\xee\x55\x75\xa0\x56\x2d\x27\x38\x6f\xe7\xa5\xbd\x66\x05\x13\x54\x31\x2b\xeb\x27\x95\x67\x20\xa5\x00\x23\x2b\x9c\x10\x47\xcd\xe4\x9f\xb2\x01\x16\x6d\x2b\xcb\x14\xe7\xf4\x0b\xb3\x72\xc6\x2c\xe3\xb4\x25\xd3\x31\x0b\x0e\x47\x30\x73\x81\x43\x69\x94\x65\xf6\xc0\xd2\xa3\x81\x8d\x3a\xd3\x20\xa1\x2f\xae\xe1\x72\x6f\x7a\x9f\xa2\x1d\x56\x8f\xb2\xb5\xca\x8f\x76\xdf\xdd\x3b\xb8\x8a\x7c\x7b\x34\xfa\x54\xf0\x6b\xf0\x6d\xc6\xd5\x23\x3f\x72\x63\xfc\x79\x51\xf0\x1c\xcf\x1d\x14\x0a\x83\x30\x95\xb6\x4b\xb9\x34\x49\x39\x5e\x3e\x3c\x12\x3d\xbc\x88\x7e\x31\x31\x8b\xf6\xaa\x1f\xd0\x3a\xa5\xa5\x9f\x7f\x86\x62\xd8\xfa\xf6\xd7\x0f\xca\xb1\x31\x1b\xfb\x80\xac\xc9\xe4\x21\x99\x36\xce\xf9\x2d\xf3\xf6\x2f\xb5\x31\xcb\xee\xf3\x40\x93\x2f\xd6\xcb\xfa\xdd\x7e\x4b\xe4\xa6\xdc\xa6\xe5\xb6\x88\x2f\x9a\x8d\x70\xb4\xae\xec\xd3\x76\x4f\x44\x1d\xa2\xb2\x33\x9c\x3b\xc4\x5d\xd7\xf5\xbf\x00\x00\x00\xff\xff\x4c\x19\x4f\x79\xd2\x21\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 8658, mode: os.FileMode(416), modTime: time.Unix(1461973440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
