// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461967783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x44\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x77\x91\x7f\xef\x50\x56\x12\xdb\x45\xb1\xd8\xa2\xbe\xc8\xe4\x3c\xcd\xbc\x37\xf3\x46\x93\x37\xd7\xcb\xab\xf5\xfd\xaf\x37\x50\xfb\x46\x4f\xa3\xc9\x9b\x24\x89\xae\x6c\xbb\x77\xaa\xaa\x3d\x8c\xdf\x8e\x2e\xe1\x83\xb5\x95\x46\x98\x1b\x99\xc2\x4c\x6b\xe8\x43\x04\x0e\x09\xdd\x23\x96\x69\x14\x7d\x54\x12\x0d\x61\x09\x5b\x53\xa2\x03\x5f\x23\xcc\x5a\x21\xf9\x31\x44\x2e\xe0\x37\x74\xa4\xac\x81\x71\xfa\x16\xbe\x0d\x80\x78\x08\xc5\xdf\x7d\x1f\xed\xed\x16\x1a\xb1\x07\x63\x3d\x6c\x09\x39\x81\x22\xd8\x28\x2e\x8a\x3b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x45\x86\x14\x69\x74\x3f\x24\xb0\x85\x17\x8c\x15\x8c\x6e\xf9\xb4\x39\x46\x81\xf0\x51\x04\xfc\xab\xbd\x6f\xdf\x67\x59\xd7\x75\xa9\xe8\x59\xa6\xd6\x55\x99\x3e\xa0\x28\xfb\x38\xbf\xba\x59\xac\x6e\x12\x66\x1a\x45\x9f\x8c\x46\x0a\x5a\xff\xdc\x2a\xc7\x02\x8b\x3d\x88\x96\x79\x48\x51\x30\x3b\x2d\x3a\xb0\x0e\x44\xe5\x90\x63\xde\x06\x9e\x9d\x53\x5e\x99\xea\x02\xc8\x6e\x7c\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf5\x27\x0d\x7a\x66\xc5\x4a\x8f\x01\xdc\x22\x61\x20\x9e\xad\x60\xbe\x8a\xe1\xc7\xd9\x6a\xbe\xba\x88\xee\xe6\xeb\x9f\x97\x9f\xd6\x70\x37\xbb\xbd\x9d\x2d\xd6\xf3\x9b\x15\x2c\x6f\xe1\x6a\xb9\xb8\x9e\xaf\xe7\xcb\x05\x9f\x7e\x82\xd9\xe2\x1e\x7e\x99\x2f\xae\x2f\x00\xb9\x3d\x5c\x04\x77\xad\x0b\xdc\x99\xa0\x0a\xad\x0b\x93\x5a\x21\x9e\x14\xdf\xd8\x03\x19\x6a\x51\xaa\x8d\x92\xac\xc8\x54\x5b\x51\x21\x54\xf6\x11\x9d\x61\x21\xd0\xa2\x6b\x14\x85\xe1\x11\x53\x2b\x23\xad\x1a\xe5\x85\xef\xcf\xff\x90\x93\x46\x49\xc2\x2e\x1a\xcc\x54\xa3\x28\xa7\xdc\xf3\x89\x57\x5e\xe3\xf4\x16\x5b\x4b\xca\x5b\xb7\x67\x38\xf9\x49\x76\xb8\x0e\x00\xad\xcc\x1f\xdc\x65\x9d\xc7\xe4\xf7\xdc\xf2\x1a\xd1\xc7\x50\x3b\xdc\xe4\x71\x98\x17\xf1\xc0\x1a\xb1\x93\xa5\x49\x0b\x6b\x3d\xf7\x4b\xb4\xe1\xc0\xae\xc8\x5e\x2e\xb2\x77\xe9\xbb\xf4\x32\x93\x44\xaf\x77\x69\xa3\x18\x45\x14\x43\xf6\xc5\x42\x19\x05\x5d\x32\x73\xf8\xa8\xb0\xa3\xe3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xac\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x7f\xb8\x60\x2b\xb0\x0f\x84\x4e\x48\x0a\x8d\xf9\x28\xee\xd3\x90\x74\x8a\xed\x4c\x4e\xbe\xca\x12\x0f\x62\x97\x56\xfd\x8e\x89\x56\x51\x2f\x29\xdc\xb1\x23\x0b\xca\xc2\x3c\xb4\x70\x0f\x94\x8d\xd2\x71\x3a\xbe\x7c\xbe\xe8\x75\x3d\x50\x3c\x9d\x64\x87\xa4\xff\x73\xfe\x84\x44\x10\xf0\x17\x9e\x15\x99\x64\x87\xa1\x4e\x0a\x5b\xf2\xc2\x56\x09\xaf\x43\x1e\x57\xca\xcf\xda\xd6\x09\x45\x78\x87\xc5\x41\x6b\xa9\x1e\x43\x3c\x34\xc9\x59\xad\xd1\xe5\xb1\xe6\xa9\xf7\x26\xe8\x11\x03\x46\x6a\x41\x94\xc7\x01\xc7\xbb\x8b\x6e\x88\x9d\x46\x9d\xed\x5e\xee\xcf\xdf\xd3\x49\x53\x26\xa3\xf1\x51\x9c\x11\xf5\xe8\x19\xe0\x71\xe7\x13\x36\xa7\x67\xa7\x4a\x2a\xf4\x16\xe3\xe9\x07\xe5\x93\x67\xc2\xc0\x8c\x59\xd5\xe8\x28\x7d\xc6\xf9\x5f\x58\x9c\x1c\x4e\x29\x41\xe8\x05\xba\xa4\x10\xee\xeb\xd8\x15\xaf\xbb\xa0\x90\xde\x4f\xb2\xe2\xbf\x54\x17\x9a\x35\x19\xe1\xf1\xf7\xd0\x9e\xd0\x6c\x87\x2d\x0a\x36\x24\x3f\xfb\x8f\x91\x3b\xaa\xf2\x75\x0c\xc5\xbf\xec\x44\xd8\xec\x6f\x7e\x08\x79\xf3\xcf\x9f\xc3\x23\x55\xe5\xd3\x53\x3c\x1d\x0e\x61\x45\x9e\x9e\x26\x99\xf8\xb2\x9e\x97\xbf\xc3\x9f\x73\xff\x9e\x57\x3e\xf7\x61\x30\x60\xef\xc7\xfe\x5b\xf3\x77\x00\x00\x00\xff\xff\xca\x27\x60\xc5\xc9\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1737, mode: os.FileMode(416), modTime: time.Unix(1461803931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x51\x53\xdb\x38\x10\x7e\xf7\xaf\xd8\xfa\x85\xbb\x19\x6c\x03\xed\xf4\x66\x7a\x09\x33\x39\xe0\xae\x99\xa3\xe1\x86\xd0\x63\xfa\x74\x23\xdb\x9b\x58\xc5\xb6\x5c\x49\x26\xe4\x28\xff\xfd\x56\xb2\x13\x12\xe3\x10\x97\x16\x8e\x17\x22\x69\xf5\xed\x7e\xbb\xab\xd5\x5a\xbd\x57\xc7\x67\x47\x17\x9f\xfe\x3a\x81\x44\x67\xe9\xa1\xd3\x7b\xe5\x79\xce\x91\x28\xe6\x92\x4f\x13\x0d\x07\x7b\xfb\x6f\xe1\x0f\x21\xa6\x29\xc2\x30\x8f\x7c\x18\xa4\x29\xd8\x25\x05\x12\x15\xca\x6b\x8c\x7d\xc7\x39\xe5\x11\xe6\x0a\x63\x28\xf3\x18\x25\xe8\x04\x61\x50\xb0\x88\xfe\xd5\x2b\xbb\xf0\x37\x4a\xc5\x45\x0e\x07\xfe\x1e\xfc\x64\x04\xdc\x7a\xc9\xfd\xf9\x57\x67\x2e\x4a\xc8\xd8\x1c\x72\xa1\xa1\x54\x48\x00\x5c\xc1\x84\x93\x52\xbc\x89\xb0\xd0\xc0\x73\x88\x44\x56\xa4\x9c\xe5\x11\xc2\x8c\xeb\xc4\x2a\xa9\x21\x7c\xe7\x53\x0d\x20\x42\xcd\x48\x96\x91\x74\x41\xa3\xc9\xaa\x14\x30\xed\x38\x40\x7f\x89\xd6\xc5\xbb\x20\x98\xcd\x66\x3e\xb3\x56\xfa\x42\x4e\x83\xb4\x92\x52\xc1\xe9\xf0\xe8\x64\x34\x3e\xf1\xc8\x52\xc7\xf9\x98\xa7\xa8\x0c\xd7\x2f\x25\x97\x44\x30\x9c\x03\x2b\xc8\x8e\x88\x85\x64\x5d\xca\x66\x20\x24\xb0\xa9\x44\x5a\xd3\xc2\xd8\x39\x93\x5c\xf3\x7c\xba\x0b\x4a\x4c\xf4\x8c\x49\x74\x62\xae\xb4\xe4\x61\xa9\xd7\x1c\xb4\xb0\x8a\x98\xae\x0a\x90\x8b\x58\x0e\xee\x60\x0c\xc3\xb1\x0b\xbf\x0d\xc6\xc3\xf1\xae\x73\x39\xbc\x78\x7f\xf6\xf1\x02\x2e\x07\xe7\xe7\x83\xd1\xc5\xf0\x64\x0c\x67\xe7\x70\x74\x36\x3a\x1e\x5e\x0c\xcf\x46\x34\xfa\x1d\x06\xa3\x4f\xf0\xe7\x70\x74\xbc\x0b\x48\xee\x21\x25\x78\x53\x48\x63\x3b\x19\xc8\x8d\xeb\x4c\xa4\xc6\x88\x6b\xca\x27\xa2\x32\x46\x15\x18\xf1\x09\x8f\x88\x51\x3e\x2d\xd9\x14\x61\x2a\xae\x51\xe6\x44\x04\x0a\x94\x19\x57\x26\x78\x8a\x4c\x8b\x9d\x94\x67\x5c\x33\x6d\xc7\x0f\xe8\xf8\x8e\xe7\x51\x16\xd5\xc9\x94\x20\x8b\x0f\xc9\xe7\x3d\xcd\x75\x8a\x87\xe7\x78\xcd\x71\x06\xc7\x48\x41\x4a\x55\x2f\xa8\x66\xcd\x7a\xca\xf3\x2b\x72\x72\xda\x77\x95\x9e\x93\xc7\x13\x44\xed\x42\x22\x71\xd2\x77\x4d\xb8\x14\xc5\x2b\x63\x37\x51\x9c\xfb\xa1\x10\x9a\xdc\xc5\x0a\x33\xa0\xa4\x08\x96\x13\xc1\x6b\xff\xb5\xff\x36\x88\x94\xba\x9f\xf3\x33\x4e\x52\x4a\xb9\x10\x6c\x55\x14\x28\x43\x2b\x0a\xa4\x35\x53\xad\x6e\xcb\xc8\x64\xc8\x59\x86\x7d\xd7\xac\x15\x42\xd2\xae\x48\xe4\x1a\x73\xdd\x77\x67\x3c\xd6\x49\x3f\xa6\x6d\x11\x7a\x76\xb0\x4b\x99\x40\x69\xc0\x52\x4f\x45\x2c\xc5\xfe\xbe\x6b\x61\x54\x24\x39\x65\xb3\x92\xd1\x3d\x2d\xf6\x99\xdd\xf8\x53\x7b\xc4\x58\xc1\x95\xa5\x64\xe6\x28\x21\x43\x15\x98\x70\xa4\x4c\x7e\x56\xc1\xbe\x7f\xe0\x1f\xbc\x5d\x4c\x58\x5e\x9f\x95\x7b\xd8\x0b\x2a\xd0\x1f\x8c\xef\x29\x66\x08\xfc\x8b\xdd\x94\x98\x58\x48\x36\x9b\x72\x6d\xf1\x55\x22\x66\xb1\x98\xe5\x04\xbb\xf8\x49\xf8\xaf\xfd\xbd\xc0\xa4\xfa\x72\xae\x85\x44\x2f\xa8\x72\xa6\x17\x8a\x98\xea\xc1\xd4\xa3\xd3\xd6\x77\x09\x77\x50\x14\x92\x71\x85\x97\x18\x56\xbe\x8c\xf9\xb5\x59\x37\x41\x90\x22\x4d\x51\x92\x18\xea\x2a\xc5\xac\x44\x2d\x13\xa5\x4c\xa9\xbe\x6b\xe4\xa8\x34\xa0\xac\xd7\xd6\x57\xa5\x98\x2d\xe7\x9b\xfb\x52\x2f\x8b\xbd\xfd\x83\x95\x75\x92\x48\xf6\x17\x02\x1a\x6f\xb4\x47\xb9\xaf\xe9\x20\x44\x2a\x4c\x4b\x74\x29\xd1\x0b\xa1\xb8\x16\x72\xfe\x0e\x6e\x6f\x0b\xa6\x93\xbb\x3b\x62\xb6\xbf\xa2\x82\x3c\x71\xbd\xb4\x64\x6d\xb0\x6e\x16\x18\x7f\xa0\xf4\x42\x26\xbf\xcd\xc2\xf0\xb0\x3e\x67\xef\x7a\x41\xf8\x04\xc5\x8f\x6b\x7b\xa0\xcc\x38\xde\xd4\x88\x47\xb4\xb5\x9b\xbd\xb7\x86\x74\x7b\x1b\x57\x56\xfb\xb2\x06\xbc\xbb\x7b\x01\xdb\xbf\x94\xa8\x28\x80\x3f\xd0\x78\x8b\xb8\xf8\x8f\xf2\x45\x58\xd8\xea\x7a\x8e\x93\x67\xa0\x61\xa0\x09\xf9\x05\x68\x5c\x30\x49\xe7\xf8\x59\x68\x68\x0b\xfd\x32\x34\x8e\xb1\x2a\x69\xdf\x7f\x24\x56\x25\x62\x42\x75\x0f\x1f\x32\x8b\xef\xb5\x99\x4a\xb3\xae\xe1\x05\x4a\xcd\x51\x42\xf7\x06\x3e\xb9\xd4\x98\x42\x2e\xb1\x40\xa6\x8d\x8e\x8c\xfa\x0b\xd3\x49\xc5\x7c\x32\xa9\x53\xef\xc8\x4e\xaa\x2d\x66\x19\xcf\x54\xdb\x7d\x73\x57\x3f\xf4\x44\x6b\xdc\x96\x7b\x16\x4e\xd5\xfc\xe9\x7b\x59\xa9\x13\x21\x4f\x32\x1a\x74\x81\xf8\xa5\x05\x42\x95\x59\xc6\xe4\xbc\xb1\xfd\xb9\xee\x08\xf2\xb1\xb9\xa3\xac\xaf\x53\x9c\xe8\xf7\xd4\xe2\x8d\x79\x4c\x0e\x58\xcc\xda\x76\xff\x7e\xfa\x09\x21\x5e\xde\xbd\xb6\xa7\xf7\x0c\xea\x5a\xc8\x6d\xa7\xbf\x08\xb8\x19\x6c\x0a\xb4\xe1\x6a\x84\xbc\x8a\xf0\xc6\x63\xd2\x4e\x97\x64\x78\x5e\x94\x1a\xf4\xbc\xa0\x46\x8e\x1a\xff\xe8\x2a\x14\x37\xd6\x94\x4c\xc4\xa6\x29\x34\xca\x7d\xea\x51\x8a\x94\xcd\x4d\x68\xaa\xf1\xfa\xe1\xb2\x18\x6b\x9a\x1f\x39\x6f\xdd\x1c\x61\x1a\xa2\xa6\xf2\x0d\xd4\x9a\xc7\x85\x1a\x5a\xeb\xbb\x7a\xf3\x64\x72\x4a\x13\xaa\xc9\xbb\xcd\x37\x20\x28\xeb\xe8\x93\xc3\xc2\xf1\x49\x05\xe5\x9b\x1e\xb8\x54\xd0\xef\xc3\x4e\xbd\xbe\x63\x1c\x61\xd7\x4c\xab\xf3\x20\xab\x37\xe1\x83\xd9\x92\x97\x59\x48\x71\xda\xa4\xa1\xcc\x23\x5b\x38\xe2\x1d\xf8\xfa\x15\x9a\xab\x12\x33\xfa\x08\x31\xfa\xd7\x94\x99\xca\x6e\x45\xd3\x44\x8d\x2c\xfe\x4a\x39\x6f\x09\xc0\xf7\x18\xc8\xe2\xd8\x1a\xf0\x62\x9c\x17\x0a\xdb\x19\xcb\xe7\x67\x7c\xef\xf4\x8e\xa0\x7b\xb0\x64\xd4\x81\x73\x23\x97\xba\x5a\xbe\x07\xd6\x31\x5b\xe3\xf4\x44\xf0\x9a\x74\x07\xa7\x6c\x51\xf0\x7f\x5c\xbd\x54\x53\x78\x5e\x0a\x32\x75\x48\x1f\x21\x53\xc9\xb6\xf4\x1c\x8f\xda\xc1\x52\x6a\x56\x73\xa6\xf1\x9f\x66\xa1\xa1\xff\xf4\xd5\x6b\xcb\xf4\xb2\xf9\x30\x33\x6a\xe9\xb5\x6a\x5c\xfb\xed\x71\x1a\x6f\x8c\x27\x6b\x79\x73\xdd\xd2\x9e\xac\xe8\x72\x61\xae\x6e\x64\x53\xfa\xea\xea\xb6\xa9\x61\x62\x29\xd3\x75\x37\xb2\xfa\x09\x60\x89\x4d\x12\x77\x77\x2b\xba\x2a\x52\x46\x19\xfb\x96\x56\xee\x5e\xf3\xab\x55\xd5\x2d\xb0\x2f\x71\xd5\xab\xa8\x54\x5b\xbe\xd1\x3a\xb7\x69\x9a\x1c\xc6\xe2\xd5\x74\x30\x6d\x0c\x05\x64\x73\xe4\x9b\x1f\xe0\x6d\xf4\x6a\x90\xb6\x0b\x7e\x53\x3e\x34\x4a\xe5\xd6\x3b\xbe\xb2\xbc\xf5\xa2\xad\xfe\x6e\x6f\x6b\x91\xda\x98\xd5\x0c\x6d\x2a\x7b\xd8\x0d\x74\xad\xc6\x36\x93\x1b\x8a\xaa\xee\xb1\xeb\x15\xfb\x06\xd2\xa9\xce\x96\x19\x56\x63\x55\x29\xd5\xef\xef\x98\x45\xaa\x58\xa7\x42\x5c\x29\xf3\x86\x1b\xc3\x85\x80\x0f\xd8\x15\x3b\xcf\x66\x1b\xa1\x69\x8d\x90\x47\x88\xb1\x82\x0f\x42\x22\x5c\x0a\x79\xb5\xad\x18\xb6\xe7\x53\xd5\xfa\x3c\x1a\x93\xf6\xec\x36\x9b\x43\x9e\xc7\x9e\x79\x6b\x5c\x22\x98\x41\xcb\xd5\xd5\xb1\x2e\x2f\x7f\xd6\x3f\x9c\xc6\x73\x57\xf3\x85\xb0\xf9\x76\x65\x1e\xad\xec\x1b\x96\x7d\xfe\xfc\x2f\x00\x00\xff\xff\x1b\xbd\x4d\x41\x5c\x17\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 5980, mode: os.FileMode(416), modTime: time.Unix(1461967415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\xdf\x4f\xdb\x30\x10\xc7\xdf\xfd\x57\x9c\xca\x0b\xa0\x26\x05\x56\x8d\xad\x3c\x75\xc0\xb6\x68\xa8\x95\x68\x19\xe2\x69\x72\x9c\x4b\x62\xe1\xd8\xc1\x76\x08\xdd\xb4\xff\x7d\xe7\xa4\x9d\x60\x5b\xb6\x25\x0f\x55\x7c\x9f\xfb\xfa\x7b\x3f\x3a\x39\x64\xe7\xa6\xde\x58\x59\x94\x1e\x4e\x8e\x8e\x5f\xc3\x07\x63\x0a\x85\x90\x68\x11\xc3\x5c\x29\xe8\x42\x0e\x2c\x3a\xb4\x8f\x98\xc5\x8c\x5d\x49\x81\xda\x61\x06\x8d\xce\xd0\x82\x2f\x11\xe6\x35\x17\xf4\xb3\x8d\x8c\xe1\x33\x5a\x27\x8d\x86\x93\xf8\x08\xf6\x03\x30\xda\x86\x46\x07\x67\x6c\x63\x1a\xa8\xf8\x06\xb4\xf1\xd0\x38\x24\x01\xe9\x20\x97\x74\x29\x3e\x09\xac\x3d\x48\x0d\xc2\x54\xb5\x92\x5c\x0b\x84\x56\xfa\xb2\xbb\x64\x2b\x11\xb3\xbb\xad\x80\x49\x3d\x27\x96\x13\x5d\xd3\x57\xfe\x9c\x02\xee\x19\x03\x7a\x4a\xef\xeb\xd9\x64\xd2\xb6\x6d\xcc\x3b\x97\xb1\xb1\xc5\x44\xf5\x94\x9b\x5c\x25\xe7\x97\x8b\xd5\x65\x44\x4e\x19\xbb\xd1\x0a\x5d\xa8\xf5\xa1\x91\x96\x0a\x4c\x37\xc0\x6b\xf2\x21\x78\x4a\xee\x14\x6f\xc1\x58\xe0\x85\x45\x8a\x79\x13\x7c\xb6\x56\x7a\xa9\x8b\x31\x38\x93\xfb\x96\x5b\x64\x99\x74\xde\xca\xb4\xf1\x2f\x1a\xb4\x73\x45\x95\x3e\x07\xa8\x45\x5c\xc3\x68\xbe\x82\x64\x35\x82\x77\xf3\x55\xb2\x1a\xb3\xdb\x64\xfd\x71\x79\xb3\x86\xdb\xf9\xf5\xf5\x7c\xb1\x4e\x2e\x57\xb0\xbc\x86\xf3\xe5\xe2\x22\x59\x27\xcb\x05\x7d\xbd\x87\xf9\xe2\x0e\x3e\x25\x8b\x8b\x31\x20\xb5\x87\x2e\xc1\xa7\xda\x06\xef\x64\x50\x86\xd6\x85\x49\xad\x10\x5f\x5c\x9e\x9b\xde\x8c\xab\x51\xc8\x5c\x0a\xaa\x48\x17\x0d\x2f\x10\x0a\xf3\x88\x56\x53\x21\x50\xa3\xad\xa4\x0b\xc3\x73\x64\x2d\x63\x4a\x56\xd2\x73\xdf\x7d\xff\x56\x4e\xcc\x0e\x27\x2c\xe6\xca\x53\x32\xf7\xf8\xc5\x9a\x76\xa6\x7d\x19\x89\x52\xaa\x6c\x1f\x1f\x51\x1f\x7c\xa3\x21\xa4\x5c\xdc\x17\xd6\x50\x7a\x24\x8c\x32\x76\x06\x7b\xf9\x34\xbc\x67\xec\xfb\x70\xba\xc9\xb2\xc1\xec\xee\x09\xd9\x2c\x16\x2e\x55\x0d\x42\x20\xfb\xf0\xde\xf4\xf4\xcd\x29\x66\x7d\xb4\x44\x4e\x9e\xa3\x94\x5b\xf8\xa3\xd6\x1e\xbe\xc2\xb7\x41\x0a\x68\xa3\x6c\x21\x75\xe4\x4d\x3d\x83\xe3\x93\xfa\xe9\xd9\x59\x6a\xbc\x37\xd5\xee\x38\xe8\x66\xe8\x44\xa7\xd8\x96\xd2\x63\xe4\x68\xb3\x70\x06\x34\x82\x3e\x1c\xb6\x39\xca\x64\x9e\x77\x4c\xcd\xb3\x8c\x7a\x1b\x75\x7f\xa5\x19\x1c\xf5\xda\xbb\x53\x85\xf9\xee\xb0\x53\xa6\xac\xa8\xb7\x3d\x64\x79\x1a\xde\x6d\xf5\xa6\xaa\x50\xfb\xff\x4f\x50\x85\xaf\x06\xb1\x3c\xdf\x61\xba\x6a\x07\xa8\xc0\xec\x28\x43\xbb\x11\xd6\x78\x80\xfc\x39\x63\x16\x37\x5a\x94\xb4\x6c\x5b\xf6\xd7\xa6\x45\xad\xe5\x75\x0f\x52\x53\x06\x05\x39\x19\xe4\xd3\xb3\xbf\x0b\x58\xac\x68\x99\x07\x3d\x91\xc0\xbf\x24\x52\x65\xc4\xfd\x43\x63\x7c\xbf\x55\xb9\xa1\xfe\x3a\xf9\x95\xb0\xe3\x69\x3f\xa5\x1f\x01\x00\x00\xff\xff\x53\x15\x02\x7f\x36\x05\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 1334, mode: os.FileMode(416), modTime: time.Unix(1461806702, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\x51\x8f\xe3\x34\x10\x7e\xcf\xaf\x98\x0b\x12\x02\x69\x93\x5c\xf7\xd0\x0a\x2d\x4d\x51\xe9\x2e\x50\x71\x6a\xd1\xb6\xc7\x6a\x9f\x90\xe3\x4c\x13\x2f\x8e\x6d\x6c\x77\xd3\xb2\xea\x7f\x67\x9c\x74\x7b\x6d\x39\x84\x40\xe8\x5e\xae\x2f\xad\x3d\x63\xcf\xf7\x7d\xf3\x79\x3a\x7c\x75\x33\x9f\x2c\x1f\x7e\xbe\x85\xda\x37\x72\x14\x0d\x5f\x25\x49\x34\xd1\x66\x6b\x45\x55\x7b\xb8\x7c\x3d\xb8\x82\x1f\xb4\xae\x24\xc2\x54\xf1\x14\xc6\x52\x42\x17\x72\x60\xd1\xa1\x7d\xc2\x32\x8d\xa2\xb7\x82\xa3\x72\x58\xc2\x5a\x95\x68\xc1\xd7\x08\x63\xc3\x38\x7d\xed\x23\x17\xf0\x0b\x5a\x27\xb4\x82\xcb\xf4\x35\x7c\x11\x12\xe2\x7d\x28\xfe\xf2\x9b\x68\xab\xd7\xd0\xb0\x2d\x28\xed\x61\xed\x90\x2e\x10\x0e\x56\x82\x8a\xe2\x86\xa3\xf1\x20\x14\x70\xdd\x18\x29\x98\xe2\x08\xad\xf0\x75\x57\x64\x7f\x45\x1a\x3d\xec\x2f\xd0\x85\x67\x94\xcb\x28\xdb\xd0\x6a\x75\x9c\x05\xcc\x47\x11\xd0\xa7\xf6\xde\x5c\x67\x59\xdb\xb6\x29\xeb\x50\xa6\xda\x56\x99\xec\xb3\x5c\xf6\x76\x3a\xb9\x9d\x2d\x6e\x13\x42\x1a\x45\xef\x94\x44\x17\xb8\xfe\xbe\x16\x96\x08\x16\x5b\x60\x86\x70\x70\x56\x10\x3a\xc9\x5a\xd0\x16\x58\x65\x91\x62\x5e\x07\x9c\xad\x15\x5e\xa8\xea\x02\x9c\x5e\xf9\x96\x59\x8c\x4a\xe1\xbc\x15\xc5\xda\x9f\x08\xf4\x82\x8a\x98\x1e\x27\x90\x44\x4c\x41\x3c\x5e\xc0\x74\x11\xc3\x77\xe3\xc5\x74\x71\x11\xdd\x4f\x97\x3f\xce\xdf\x2d\xe1\x7e\x7c\x77\x37\x9e\x2d\xa7\xb7\x0b\x98\xdf\xc1\x64\x3e\xbb\x99\x2e\xa7\xf3\x19\xad\xbe\x87\xf1\xec\x01\x7e\x9a\xce\x6e\x2e\x00\x49\x1e\x2a\x82\x1b\x63\x03\x76\x02\x28\x82\x74\xa1\x53\x0b\xc4\x93\xe2\x2b\xdd\x83\x71\x06\xb9\x58\x09\x4e\x8c\x54\xb5\x66\x15\x42\xa5\x9f\xd0\x2a\x22\x02\x06\x6d\x23\x5c\x68\x9e\x23\x68\x65\x24\x45\x23\x3c\xf3\xdd\xfa\x2f\x74\xd2\x28\x49\xc8\x45\x7b\x33\xd5\xc8\xca\x11\x69\x3e\xf4\xc2\x4b\x1c\xdd\xe1\x93\xc0\x96\x52\x9d\x1f\x66\xfd\x56\x08\x4a\xa1\x7e\x23\x85\x65\x1e\x3b\xbf\x25\xb9\x6b\x44\x1f\x43\x6d\x71\x95\xc7\xa1\x57\x8e\x9a\xd5\xb0\x0d\x2f\x55\x5a\x68\xed\x49\x2b\x66\xc2\x82\x1c\x91\x1d\x36\xb2\x37\xe9\x9b\xf4\x2a\xe3\xce\xbd\xdf\x4b\x1b\x41\x59\xce\xc5\x90\xfd\x63\xa1\xcc\x05\x4e\x3c\xb3\x1d\x46\x77\x7c\xac\x41\xcf\x40\xb1\x06\xf3\x38\xc4\x8c\xb6\x74\x8a\x6b\xe5\x51\xf9\x3c\x6e\x45\xe9\xeb\xbc\xa4\x63\x1c\x93\x6e\x71\x41\x36\x20\x0f\x30\x99\x38\xce\x24\xe6\x83\xb8\xbb\xc6\x71\x2b\xc8\xca\xce\xf2\xf7\xb4\xd8\x23\xdb\xa4\x55\xf7\xbe\x98\x11\xae\xa3\x14\xf6\xc8\x8d\x85\xcb\x42\x2f\x24\xb3\x8f\x2e\x1b\xa4\x97\xe9\xe5\xd5\xcb\x46\xc7\xeb\xd1\xc5\xa3\x61\xd6\x5f\xfa\x3f\xdf\x9f\x38\x16\x08\xfc\x81\x67\x45\x86\x59\xdf\xd0\x61\xa1\x4b\x7a\xac\x55\x42\x4f\x21\x8f\x2b\xe1\xc7\xc6\x58\x26\x1c\xde\x63\xd1\x73\x2d\xc5\x53\x88\x07\x91\xac\x96\x12\x6d\x1e\x4b\xea\x7a\x6f\x00\xd7\xe5\xec\xb3\xb8\x64\xce\xe5\x71\xc8\xa4\x97\x8b\x76\x1f\x3b\x8d\x5a\xdd\x1e\xf6\xcf\xcf\xc9\xa4\x29\x93\xc1\xe5\x51\x9c\x32\xea\xc1\x4b\x82\xc7\x8d\x4f\xc8\x9a\x9e\x7c\xca\x5d\x21\xd7\x18\x93\x0f\x8d\x76\xc2\x6b\xbb\xbd\x86\xe7\x67\xc3\x7c\xbd\xdb\x11\xb7\xc1\x51\x89\x8c\x6a\x1c\x90\x9c\x2c\x4e\x61\x41\x50\x04\x6d\x52\x30\xfb\xef\x10\x16\xa3\xb9\x41\x05\x7b\x45\xae\x87\x59\xf1\x5f\xaa\x33\x49\xbc\x14\xf3\xf8\x6b\x90\x28\x48\x6e\xd1\x20\x23\x5b\xf6\x3e\x0e\x03\x49\x53\x9d\x53\xe1\xff\x06\xe2\x57\xf1\xe8\xf9\xb9\x3f\x97\x7a\xd1\x20\xbd\x88\xc6\x04\x65\x8e\x00\x7c\xf0\xe0\xd7\xa7\xd4\xd8\x07\x9f\x54\x1a\x66\xc2\x67\xdf\x12\x3e\x9d\x87\x32\x46\xef\x76\x9f\xf7\xa1\xfc\x50\x36\x7c\x85\x49\xb3\xdb\x1d\x61\x71\xeb\xa6\x61\x76\x1b\x90\xb0\x8f\xdb\xa2\x89\xd4\xe1\x5f\xed\x23\x34\x89\x77\x95\x3e\xa1\x36\x1d\x7e\xee\x7f\x9c\x4f\xb0\xf3\x79\x7c\x3e\x89\xc2\x08\xea\x26\x52\xf7\x4f\xf3\x67\x00\x00\x00\xff\xff\x4a\x6d\x21\x18\xc7\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2247, mode: os.FileMode(416), modTime: time.Unix(1461803957, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x5b\x6f\xdb\x38\x16\x7e\xd7\xaf\x20\x84\xa2\x91\x1b\x5b\x4e\x8a\xc5\x60\xb1\x46\x76\x27\x9b\xb4\x33\xc6\x66\x93\x41\x9c\x6e\x31\xc8\x06\x85\x22\xd1\x36\x31\xba\x0d\x49\xc5\xc9\x0e\xf2\xdf\xf7\x1c\x92\x92\x48\x49\x8e\x9d\xb6\x0f\xd3\x87\xc6\xe2\xb9\xf0\x3b\x57\xf2\x70\xfa\xce\x3b\x2b\xca\x27\xce\x56\x6b\x49\xde\x1f\x1d\xff\x40\x7e\x2a\x8a\x55\x4a\xc9\x3c\x8f\x43\x72\x9a\xa6\x44\x91\x04\xe1\x54\x50\xfe\x40\x93\xd0\xf3\x2e\x58\x4c\x73\x41\x13\x52\xe5\x09\xe5\x44\xae\x29\x39\x2d\xa3\x18\xfe\x18\xca\x98\xfc\x87\x72\xc1\x8a\x9c\xbc\x0f\x8f\x48\x80\x0c\xbe\x21\xf9\xa3\x99\xf7\x54\x54\x24\x8b\x9e\x48\x5e\x48\x52\x09\x0a\x0a\x98\x20\x4b\x06\x9b\xd2\xc7\x98\x96\x92\xb0\x9c\xc4\x45\x56\xa6\x2c\xca\x63\x4a\x36\x4c\xae\xd5\x26\x46\x45\xe8\xfd\x6a\x14\x14\xf7\x32\x02\xde\x08\xb8\x4b\xf8\x5a\xda\x5c\x24\x92\x9e\x47\xe0\xdf\x5a\xca\xf2\x6f\xd3\xe9\x66\xb3\x09\x23\x85\x32\x2c\xf8\x6a\x9a\x6a\x2e\x31\xbd\x98\x9f\x7d\xb8\x5c\x7c\x98\x00\x52\xcf\xfb\x94\xa7\x54\xa0\xad\xbf\x57\x8c\x83\x81\xf7\x4f\x24\x2a\x01\x47\x1c\xdd\x03\xba\x34\xda\x90\x82\x93\x68\xc5\x29\xd0\x64\x81\x38\x37\x9c\x49\x96\xaf\xc6\x44\x14\x4b\xb9\x89\x38\xf5\x12\x26\x24\x67\xf7\x95\x74\x1c\x54\xa3\x02\x4b\x6d\x06\x70\x51\x94\x13\xff\x74\x41\xe6\x0b\x9f\xfc\xf3\x74\x31\x5f\x8c\xbd\xcf\xf3\x9b\x9f\xaf\x3e\xdd\x90\xcf\xa7\xd7\xd7\xa7\x97\x37\xf3\x0f\x0b\x72\x75\x4d\xce\xae\x2e\xcf\xe7\x37\xf3\xab\x4b\xf8\xfa\x48\x4e\x2f\x7f\x25\xff\x9a\x5f\x9e\x8f\x09\x05\xf7\xc0\x26\xf4\xb1\xe4\x88\x1d\x00\x32\x74\x1d\x46\x6a\x41\xa9\xb3\xf9\xb2\xd0\x60\x44\x49\x63\xb6\x64\x31\x58\x94\xaf\xaa\x68\x45\xc9\xaa\x78\xa0\x3c\x07\x43\x48\x49\x79\xc6\x04\x06\x4f\x00\xb4\xc4\x4b\x59\xc6\x64\x24\xd5\x77\xcf\x9c\xd0\x7b\x37\xf5\xbc\x87\x88\x93\x15\x93\xa7\x65\xc9\x23\x26\xe8\x67\x7a\x7f\x82\x7a\xd3\x88\x87\x59\x91\x54\x29\x0d\x7c\x97\xec\x8f\xc9\xad\x9f\xaf\x16\x51\x0e\xce\xfb\x1f\xf5\xef\x20\x29\xbc\xe9\x94\xfc\x44\x25\x04\x93\xd3\xb2\x10\x4c\x16\x1c\x32\x24\xca\x00\x35\x2f\x32\xb5\xe9\xb2\x82\x74\x2c\x23\xb9\x0e\xbd\x65\x95\xc7\x88\x89\xac\xa8\xbc\x88\x84\xfc\x05\x56\x3f\xa4\x34\xa3\xb9\x0c\x90\x63\x44\xfe\x80\xe0\x23\x30\x91\x46\x62\x3d\x07\xe0\x8f\xe4\x44\x0b\xc3\x82\x54\x0b\x57\xcb\xc0\x9f\x62\x42\x12\xc2\x96\x24\xb0\x38\xff\x4e\x8e\xb4\x06\x02\x68\x64\xc5\x73\x2d\x29\xaa\x7b\x0c\x5d\xbe\xb2\x78\x0f\x8f\xc7\x46\x2d\xcd\x57\xb0\x31\x6a\x7b\xf6\x1c\xb9\x99\xf7\xec\x98\xf7\xc0\xe8\x86\x88\x2a\xcb\x22\x30\xd1\xb5\x2e\xa1\x22\xe6\xac\x44\xd3\x5c\x23\x17\x9a\x3d\x40\x86\xd6\x38\x88\x78\x95\x4a\x30\x0c\x97\x67\x66\x31\xa7\x9b\x94\xe5\xb4\xb6\x19\x49\x21\xab\xed\xfd\x6f\xde\x1a\xec\x30\x3a\x26\x5b\x5a\x2d\xa3\x8f\xc6\x8e\xee\xc6\x54\xd4\xa5\x65\x8c\x13\x40\xd9\x5f\xfb\xda\x0c\x8b\xa3\x0f\xd8\x3a\x0e\xd3\x5c\x8d\xcb\xd8\x03\xc5\x02\x97\x2c\xa3\x42\x46\x59\x49\x22\xa1\x53\x98\xc6\x45\x9e\x88\xd6\x7d\x55\xce\x1e\x09\x64\x4e\xbc\x1e\xd7\xaa\x70\x79\x5d\x65\x51\x3e\x59\x72\x46\xf3\x24\x7d\x22\x0f\xba\x2f\x59\xbe\xad\x49\x37\xf5\x0e\x41\xb3\x97\xb6\xc0\x28\x03\xcb\xc9\x79\x24\x29\xa4\x17\x17\xe0\x00\x69\xf3\xbd\x23\xc7\x47\x47\x47\xa3\x50\x16\x17\x45\x1c\xa5\x74\xa1\x0d\x1c\x29\x33\x9a\xad\x94\xe4\xa7\x1c\x2a\x8f\x26\xe7\x6c\xb9\x0c\x12\xf8\xaf\x0d\x26\x76\x40\x5c\x16\xe8\x79\xf8\x1b\x0a\x28\x63\x89\x21\xc3\x2f\x32\x99\x40\x11\x11\x1d\xbd\x9a\x1d\x59\x6f\xef\x70\x05\x4b\x3b\x50\xcb\xd8\x95\x1a\x55\x75\x10\x14\x73\x58\x56\x62\xad\xf1\x7f\x34\x0c\x41\xc3\x79\xbb\xbc\x1b\x75\x63\xa1\xa4\x66\xd8\x46\x5d\x1b\x7a\xd2\xf5\x36\x35\xae\x0b\xc8\x11\xc4\x56\xd3\x5b\x53\x34\xfe\x96\xf3\x12\x2a\xbc\xe6\x54\x52\xb7\x47\x77\x35\x37\xb1\x99\xf9\x5a\x7c\x34\xfc\x86\x5d\x89\xde\x36\xbf\x4c\xee\x4d\x8e\xef\x5a\xa1\x74\x5f\xa1\xf7\xae\xd0\x65\x95\xdd\x43\xa7\x3b\x21\x47\x0e\x80\xa1\xe5\xd4\x98\x7a\x6b\x34\x34\x81\x60\x75\x20\x94\x59\xb5\x87\xb4\x90\xa4\x8f\xd2\x31\x9a\x19\x69\x5d\x4c\x48\x0e\x21\xb5\xb8\x14\x9f\xa1\xbb\x07\xfe\x64\x32\x01\x67\xb4\x3a\x48\xc7\x32\x2d\xd0\x14\xd6\x5f\x46\xb5\xb6\x67\x42\x53\x3c\x75\x86\x94\x1e\x1e\x1e\x76\x94\xf2\x6f\x57\xfa\xe3\x8f\x1d\x9d\x2a\xd0\x50\xa4\x68\xe7\x2f\xc0\x37\xa0\x78\xac\x57\x9a\x1e\x35\xf6\x47\xcd\x5e\xc6\x5f\xc5\x76\x71\x57\xf6\xd0\x1f\x19\x75\x4e\x9b\xef\xab\xcc\x81\xe7\xc2\x0a\x69\x53\xd6\x36\xd8\x8e\x4c\x01\x47\x21\x9c\xda\x67\x45\x95\x23\x10\x57\xc5\xa4\x4d\x9c\x99\x1d\xa6\x66\x07\x87\x7d\x66\x3b\xbd\x0f\xa2\x35\xd8\x82\x80\x0e\x77\x20\x58\x3d\xdb\x6c\x87\xc9\xa4\xcb\xdc\x5a\x25\xba\x79\x41\x1d\xa2\x52\x97\x62\x41\x1c\x77\x08\x7c\x1b\xc1\x37\x20\xfc\x1e\x61\xf1\x1b\x2b\x4b\xb8\xd6\xf8\xe4\xd0\x75\x16\x64\x1a\x74\xe8\x78\x0d\xf7\x02\x20\x2b\x98\x4e\x44\x9e\xf7\x48\xad\x49\xa7\x02\x5a\x5b\x1d\xf3\x5a\x7b\x2c\x0b\x88\xcf\x69\x06\x77\x1c\xc0\xdc\xcd\x9f\xe3\x91\x0d\xa4\x91\x3e\x3c\xdc\xab\x86\xbe\x09\x53\x94\x24\xbb\x11\xf1\xd7\x21\xea\xf6\x89\xd7\x21\x6a\x62\xf4\x15\x7e\x1a\x86\xea\xb5\xff\x63\x09\x59\x17\x1c\xc8\x77\xb8\xd8\xa8\xb3\xa4\x5d\x0c\xac\xc6\x36\xb6\x1b\x92\x75\x14\xb0\x04\x44\x7d\x6c\x9e\x98\x67\xfa\x68\xd3\x7d\x7c\x66\x5f\xd9\xd0\x5e\x94\x0e\xac\x3d\xc7\x20\x3c\xd6\x4e\x31\x87\x9d\x7d\xb8\xbd\x06\x8e\xf1\x31\xc6\xc0\xe2\x71\x42\x11\xc1\xe5\x92\xbc\x7d\x6b\x8b\x39\xf4\xfb\xa9\x1d\x2b\xb7\xa3\x3b\x3a\x9b\x18\xbc\x6f\x22\xe0\xb6\x6a\xbe\x83\xbb\x83\x92\x9c\x9c\x0c\xd9\x62\xf9\xce\xff\x77\x91\xa8\x7b\x8a\x2a\x65\x4b\xb4\x93\x82\x7d\xc1\x6b\x8a\x97\xf6\x9e\x9c\xea\x00\x30\x32\xe1\x32\x1f\x50\xe7\x75\xf2\xfa\x25\x9f\xb6\x78\xeb\x4d\xcf\x69\x4a\x65\x7f\xd3\x01\x5f\x74\x70\xd7\x0a\x4e\xb1\x12\xbb\xe0\x86\xc4\x7b\x39\xb3\xa3\xa2\x00\xbb\xac\x84\x2e\xa6\x1a\x37\xce\xbb\xa1\x7d\x32\x74\x0e\x0e\x45\xb7\x8f\x05\x3e\x40\xd7\x8a\x81\xa8\x7f\x58\x14\x73\xb9\xc0\x3f\xfd\x14\x1f\x2e\x88\xc4\x18\x21\x1c\x88\x6e\xad\x5a\x5f\xd6\x66\xaa\x16\x59\x62\xad\x34\xba\xcc\x35\x56\xfd\x76\xe8\x70\xbd\x83\xe1\x1d\x10\xf2\x8a\x6a\x84\x80\xd1\x9d\x10\x43\xb8\xdd\x4b\x5e\xa4\x29\xe5\x81\x9f\xc2\xc0\x7c\x8d\x43\x21\x34\xa5\xda\x90\xe0\x8d\x80\xa1\x9f\x8e\xdf\xe0\x78\xaf\x51\xab\x9f\x21\xd4\x30\x4c\x75\x51\xc9\xa6\x6a\x8e\xf4\x47\x10\xc5\x38\x86\xc9\x58\x9f\x7b\x8d\x3c\xcc\x19\x25\xcc\xb4\x98\xfc\x5a\x55\xd8\xcc\x9d\x4c\x61\x2f\x79\x81\x62\x17\xf5\xe6\xd7\x46\xa0\x95\x9c\x3d\x8f\x3a\x97\xe3\x9d\x22\xd6\x3d\x59\x6d\xb7\xf5\xe2\xd8\x95\xd0\x32\x38\x4d\xea\x49\x4a\x11\xe1\xda\x18\xea\x01\xb3\xce\x66\x50\xd9\x36\x7b\xc4\x10\xd8\xbc\x18\xea\x6d\x03\xf3\xc8\xca\x70\x6b\x18\x03\x85\xfd\x24\x52\x8a\x51\x59\x6e\x75\x8f\x2d\xe9\x90\xeb\x0e\x95\x9b\x62\x87\x58\xa3\xd3\x76\x46\x1b\x67\xe4\xad\xf1\x1e\xbf\x49\x61\xcc\xc2\x65\x7b\x14\x2e\x0b\xd8\xa7\xa1\x84\x82\x46\x3c\x5e\x07\xa3\xdb\x03\x24\x1d\x28\x2f\x5b\x91\x56\x6e\x2c\x8b\xd9\x96\xc4\xf9\x62\xe6\xf3\x7f\xe0\xc7\x89\x6a\x0c\xf0\x63\xff\x64\x32\x91\x1a\xf0\x76\xcd\xab\x58\x74\x0e\xf5\x21\x80\x8a\xfc\x8b\x7e\x29\x10\x5f\x0b\x01\x75\x18\x47\x76\xd3\x59\x2d\x6e\x49\xe8\x3e\x98\x38\x2d\x04\x4d\xbe\x15\x8e\xd6\xf2\x15\x80\xb6\x56\xd8\x16\x21\xa7\xc6\xea\xdd\x5e\x53\x65\x28\x25\x74\xd3\xb3\xab\xa7\x5e\x9e\xd9\x83\x5c\xf3\x2e\xd1\xe5\xfd\xbd\x02\x42\xd8\xd0\x6d\x21\xec\xa4\x5b\xf8\x7b\x4d\x96\xd4\x36\xd8\x65\x8d\x0b\x41\x0d\x67\xdc\x82\x18\x2b\xd5\xe3\xde\x7b\xd1\x96\xda\x56\x7a\x87\xaa\x7b\x97\x7e\x53\x1b\x4e\xe5\x3b\x4e\xb3\x1d\xa5\xcf\x24\xcb\x4f\x2f\xbd\xb8\xcc\xdc\xd3\xc7\x7a\xd9\xaa\x8f\x3d\xf3\x6c\x76\x52\x83\xd8\xaf\xa9\x80\x47\xb4\x59\xdf\xbd\xa5\xb4\x69\xb6\x95\x15\x89\xa6\xff\xfc\xf9\x3a\x8d\x86\xf7\x25\xa1\x32\x62\x69\xa7\xb8\xf1\xd2\xf6\x56\x33\x98\x35\xfc\xb9\x3f\x34\xa3\xb4\x2d\xf6\x26\xb5\x5e\x6e\x38\x35\x26\xb8\x3d\x7c\x27\x40\xa6\x96\x6a\x5c\xf8\x9e\xd6\x16\xe0\xac\x4f\x0d\xeb\xd7\xb5\xde\x9b\x5d\xe3\x54\x4c\x2f\xf0\xb2\x18\x0d\x89\x6b\x60\x67\x45\x06\x43\xb0\xb0\x72\xde\xac\x04\x5b\x79\xeb\x4a\xed\xf4\xbd\xae\x7c\x6c\xb8\xeb\xe7\x3d\xa7\xab\x75\x88\x3a\x47\xf5\x22\x40\x31\x54\xeb\xc9\x49\xaf\xd4\x27\xb5\xf9\x62\x89\xf3\x52\xfb\xc3\xa8\xc3\x6d\x62\xab\x2a\x7b\xb0\xa8\x07\xf8\x9c\x36\x64\x70\xa0\xf9\x14\x7c\x1c\x8c\x9c\xe1\xcd\x50\x7b\xcd\xc9\x76\x04\x78\xbf\xd9\x4e\xbb\x04\x57\xd6\x9c\x46\x89\x7d\x08\xd8\xbd\xc7\x61\x0a\xcd\x57\xb7\x4b\xef\x60\xda\xab\x85\xf5\x23\x62\x69\x5c\xb3\x34\xe1\x34\x6f\x03\xb4\xa7\x55\x8d\x24\x04\x6f\xeb\x40\xb2\xa2\x39\xe5\x91\xa4\x46\xd7\xcf\x32\x4b\x41\x4b\x0e\x4e\x96\x38\x90\x0c\xba\xc9\xdd\x65\x0d\x22\xca\x57\x46\x28\xcc\xa2\xdf\xa8\xd1\x33\xe4\x19\xeb\xd0\x1a\x0d\x79\xb0\x7f\xe3\xd7\x13\x29\xb4\x46\x51\xa4\x0f\x34\x39\xe8\xf9\xa8\x75\x0d\x32\xba\xea\x6a\x29\x7b\x6c\x75\x39\x9a\xd9\xe8\x20\x5d\xc9\xec\x60\xeb\xcc\xba\x4d\x2a\xcf\x36\x07\x83\x93\xe9\x1f\xde\xcb\x82\xcb\x27\x76\x60\xe7\xf8\xeb\xb2\xe0\x35\x91\xdb\x2b\x15\x7a\x69\x2a\x02\xdd\x6c\xce\x75\x51\x0e\xb7\x0f\x87\x45\xdd\x95\x79\xb7\x99\xe8\x45\x73\xd4\xf7\x78\xad\xd6\xd2\xbf\x23\x21\x47\xff\x5a\xd4\x5d\xdf\xab\xc6\x86\x7c\xec\x02\x32\x2e\x13\xfb\x54\xda\xb0\xe4\x4b\xee\xed\x1e\x6a\x43\x9e\xdd\x15\x81\xba\x5e\x4c\x94\xd5\x33\xf1\x86\x88\x75\xb1\x49\x8a\x4d\x1e\x9e\xd5\x84\x60\xb0\xaf\xec\xb2\x76\x47\x46\xed\x63\x72\xe7\xbe\x68\x98\xdb\x5b\xd7\xff\x03\x00\x00\xff\xff\x4e\x9b\xaf\xf7\x41\x20\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 8257, mode: os.FileMode(416), modTime: time.Unix(1461967771, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
