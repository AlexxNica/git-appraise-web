// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461797081, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x58\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x63\x91\x7f\xef\x50\x56\x12\x3b\x45\xb1\x48\x7d\x91\x87\xf3\x34\xf3\xe6\xcd\xa3\xa6\xef\xae\x56\x97\x9b\xbb\xdf\xaf\xa1\xf6\x8d\x9e\x45\xd3\x77\x49\x12\x5d\xda\xf6\xe0\x54\x55\x7b\x98\xbc\x1f\x5f\xc0\x27\x6b\x2b\x8d\xb0\x30\x32\x85\xb9\xd6\xd0\xa7\x08\x1c\x12\xba\x07\x2c\xd3\x28\xfa\xac\x24\x1a\xc2\x12\x76\xa6\x44\x07\xbe\x46\x98\xb7\x42\xf2\x63\xc8\x8c\xe0\x0f\x74\xa4\xac\x81\x49\xfa\x1e\xbe\x0f\x80\x78\x48\xc5\x3f\xfc\x18\x1d\xec\x0e\x1a\x71\x00\x63\x3d\xec\x08\xb9\x80\x22\xd8\x2a\x6e\x8a\x7b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x4d\x86\x12\x69\x74\x37\x14\xb0\x85\x17\x8c\x15\x8c\x6e\x39\xda\x9e\xa2\x40\xf8\x28\x02\xfe\xd5\xde\xb7\x1f\xb3\xac\xeb\xba\x54\xf4\x2c\x53\xeb\xaa\x4c\x1f\x51\x94\x7d\x5e\x5c\x5e\x2f\xd7\xd7\x09\x33\x8d\xa2\x2f\x46\x23\x85\x59\xff\xde\x29\xc7\x03\x16\x07\x10\x2d\xf3\x90\xa2\x60\x76\x5a\x74\x60\x1d\x88\xca\x21\xe7\xbc\x0d\x3c\x3b\xa7\xbc\x32\xd5\x08\xc8\x6e\x7d\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf3\x67\x02\x3d\xb1\xe2\x49\x4f\x01\x2c\x91\x30\x10\xcf\xd7\xb0\x58\xc7\xf0\xf3\x7c\xbd\x58\x8f\xa2\xdb\xc5\xe6\xd7\xd5\x97\x0d\xdc\xce\x6f\x6e\xe6\xcb\xcd\xe2\x7a\x0d\xab\x1b\xb8\x5c\x2d\xaf\x16\x9b\xc5\x6a\xc9\xd1\x2f\x30\x5f\xde\xc1\x6f\x8b\xe5\xd5\x08\x90\xe5\xe1\x26\xb8\x6f\x5d\xe0\xce\x04\x55\x90\x2e\x6c\x6a\x8d\x78\xd6\x7c\x6b\x8f\x64\xa8\x45\xa9\xb6\x4a\xf2\x44\xa6\xda\x89\x0a\xa1\xb2\x0f\xe8\x0c\x0f\x02\x2d\xba\x46\x51\x58\x1e\x31\xb5\x32\xd2\xaa\x51\x5e\xf8\x3e\xfe\xd7\x38\x69\x94\x24\xec\xa2\xc1\x4c\x35\x8a\x72\xc6\x9a\x4f\xbd\xf2\x1a\x67\x37\xd8\x5a\x52\xde\xba\x03\xc3\xc9\x4f\xb3\xe3\x71\x00\x68\x65\xfe\x62\x95\x75\x1e\x93\x3f\xb0\xe4\x35\xa2\x8f\xa1\x76\xb8\xcd\xe3\xb0\x2f\xe2\x85\x35\x62\x2f\x4b\x93\x16\xd6\x7a\xd6\x4b\xb4\x21\x60\x57\x64\xcf\x07\xd9\x87\xf4\x43\x7a\x91\x49\xa2\x97\xb3\xb4\x51\x8c\x22\x8a\x21\xfb\x66\xa3\x8c\xc2\x5c\x32\x73\xf8\xa0\xb0\xa3\xd3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xae\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x1f\x8c\xd8\x0a\xec\x03\xa1\x13\x92\x42\x63\x3e\x8e\xfb\x32\x24\x9d\x62\x3b\x93\x93\x2f\x63\x89\x7b\xb1\x4f\xab\xfe\x8e\x89\x56\x51\x3f\x52\x38\x63\x47\x16\x94\x85\x7d\x68\xe1\xee\x29\x1b\xa7\x93\x74\x72\xf1\x74\xd0\xcf\x75\x4f\xf1\x6c\x9a\x1d\x8b\xb2\xdc\xd9\x51\xef\x69\x61\x4b\xbe\x4b\x55\xc2\x4e\xcd\xe3\x4a\xf9\x79\xdb\x3a\xa1\x08\x6f\xb1\x38\xd2\x28\xd5\x43\xc8\x07\xfe\xce\x6a\x8d\x2e\x8f\x35\x2f\xa4\xdf\x4f\x8f\x18\x30\x52\x0b\xa2\x3c\x0e\x38\xbe\x56\xe8\x86\xdc\x79\xd6\xd9\xee\xf9\xfc\xf5\x7b\x3a\x69\xca\x64\x3c\x39\xc9\x33\xa2\x1e\x3f\x01\x3c\xee\x7d\xc2\xbe\xf1\x6c\x22\x49\x85\xde\x61\x3c\xfb\xa4\x7c\xf2\x44\x18\x98\x31\x4f\x35\x3e\x29\x9f\x71\xfd\x67\x16\x67\xc1\x39\x25\x08\x5a\xa0\x4b\x0a\xe1\xde\xc6\xae\x78\xb1\xa9\x42\xfa\x38\xcd\x8a\xff\xd3\x5d\x68\x9e\xc9\x08\x8f\x7f\x06\x79\x82\xd8\x0e\x5b\x14\xec\x15\x7e\xf6\xdf\x09\x77\xd2\xe5\x6d\x0c\xc5\x7f\xd8\x35\x5c\xba\xef\x7e\x0a\x75\xf3\xaf\x5f\xc3\x23\x55\xe5\xe3\x63\x3c\x1b\x82\xe0\xde\xc7\xc7\x69\x26\xbe\x3d\xcf\xf3\xdf\xe1\xcf\x6b\xeb\xbe\xee\xfc\xda\x87\xc1\x80\xbd\x1f\xfb\xcf\xc0\x3f\x01\x00\x00\xff\xff\x70\x50\xec\xfd\x64\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1636, mode: os.FileMode(416), modTime: time.Unix(1461393701, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x51\x6f\xdb\x36\x10\x7e\xd7\xaf\xb8\xea\xa5\x1b\x10\x4b\x49\x3a\x14\x43\x66\x07\xf0\x92\x6c\x33\x56\x38\x43\xec\xae\xe8\xd3\x40\x49\x67\x89\xad\x24\xaa\x24\x15\xc7\x48\xf3\xdf\x77\xa4\x64\x47\x92\x1d\xdb\x4d\x17\x2f\x2f\x8e\xc8\xd3\x7d\xdf\x7d\x77\x24\x8f\xea\xbf\xba\xbc\xbe\x98\x7e\xfc\xeb\x0a\x12\x9d\xa5\xe7\x4e\xff\x55\xaf\xe7\x5c\x88\x62\x21\x79\x9c\x68\x38\x3d\x3e\x79\x0b\xbf\x0b\x11\xa7\x08\xa3\x3c\xf4\x60\x98\xa6\x60\xa7\x14\x48\x54\x28\x6f\x31\xf2\x1c\xe7\x1d\x0f\x31\x57\x18\x41\x99\x47\x28\x41\x27\x08\xc3\x82\x85\xf4\x53\xcf\x1c\xc1\xdf\x28\x15\x17\x39\x9c\x7a\xc7\xf0\x83\x31\x70\xeb\x29\xf7\xc7\x5f\x9c\x85\x28\x21\x63\x0b\xc8\x85\x86\x52\x21\x39\xe0\x0a\x66\x9c\x40\xf1\x2e\xc4\x42\x03\xcf\x21\x14\x59\x91\x72\x96\x87\x08\x73\xae\x13\x0b\x52\xbb\xf0\x9c\x8f\xb5\x03\x11\x68\x46\xb6\x8c\xac\x0b\x7a\x9a\x35\xad\x80\x69\xc7\x01\xfa\x4b\xb4\x2e\xce\x7c\x7f\x3e\x9f\x7b\xcc\xb2\xf4\x84\x8c\xfd\xb4\xb2\x52\xfe\xbb\xd1\xc5\xd5\x78\x72\xd5\x23\xa6\x8e\xf3\x3e\x4f\x51\x99\x58\xbf\x94\x5c\x52\x80\xc1\x02\x58\x41\x3c\x42\x16\x10\xbb\x94\xcd\x41\x48\x60\xb1\x44\x9a\xd3\xc2\xf0\x9c\x4b\xae\x79\x1e\x1f\x81\x12\x33\x3d\x67\x12\x9d\x88\x2b\x2d\x79\x50\xea\x96\x40\x4b\x56\x14\x69\xd3\x80\x24\x62\x39\xb8\xc3\x09\x8c\x26\x2e\xfc\x3a\x9c\x8c\x26\x47\xce\x87\xd1\xf4\x8f\xeb\xf7\x53\xf8\x30\xbc\xb9\x19\x8e\xa7\xa3\xab\x09\x5c\xdf\xc0\xc5\xf5\xf8\x72\x34\x1d\x5d\x8f\xe9\xe9\x37\x18\x8e\x3f\xc2\x9f\xa3\xf1\xe5\x11\x20\xc9\x43\x20\x78\x57\x48\xc3\x9d\x08\x72\x23\x9d\xc9\xd4\x04\xb1\x05\x3e\x13\x15\x19\x55\x60\xc8\x67\x3c\xa4\x88\xf2\xb8\x64\x31\x42\x2c\x6e\x51\xe6\x14\x08\x14\x28\x33\xae\x4c\xf2\x14\x51\x8b\x9c\x94\x67\x5c\x33\x6d\x9f\xd7\xc2\xf1\x9c\x5e\x8f\xaa\xa8\x2e\xa6\x04\x59\x74\x4e\x9a\xf7\x35\xd7\x29\x9e\xdf\xe0\x2d\xc7\x39\x5c\x22\x25\x29\x55\x7d\xbf\x1a\x35\xf3\x29\xcf\x3f\x93\xc8\xe9\xc0\x55\x7a\x41\x8a\x27\x88\xda\x85\x44\xe2\x6c\xe0\x9a\x74\x29\xca\x57\xc6\xee\xc2\x28\xf7\x02\x21\x34\xc9\xc5\x0a\xf3\x40\x45\xe1\xaf\x06\xfc\x37\xde\x1b\xef\xad\x1f\x2a\xf5\x38\xe6\x65\x9c\xac\x94\x72\xc1\xdf\x09\xe4\x2b\x13\x56\xe8\x4b\x4b\x53\x35\x5f\x53\xa1\xe4\x54\x86\x4a\x86\x8f\x7c\xd8\x27\x76\xe7\xc5\x76\x6d\xb0\x82\x2b\xcb\xc5\x8c\x51\x25\x05\xca\x37\x3a\xa6\x4c\x7e\x52\xfe\x89\x77\xea\x9d\xbe\x5d\x0e\x58\x42\x9f\x94\x7b\xde\xf7\x2b\xa7\x24\x93\x5f\xe9\xd4\x0f\x44\x44\x6b\x20\xee\x51\x85\x0d\xdc\x98\xeb\x61\x51\x48\xc6\x15\x7e\xc0\xc0\xb5\x34\x22\x7e\x6b\xe6\x43\x91\x6b\x29\xd2\x14\x25\x99\xa1\xae\x64\xb5\x16\xb5\x4d\x98\x32\xa5\x06\xae\xb1\xa3\xe5\x80\xb2\x9e\x6b\xcf\x4a\x31\x5f\x8d\x77\xdf\x4b\x7b\x59\xd4\x3b\x39\x6d\xcc\x93\x45\x72\xb2\x34\xd0\x78\xa7\x7b\x94\x6f\x4d\xc9\x0f\x55\x90\x96\xe8\x52\x72\x0b\xa1\xb8\x16\x72\x71\x06\xf7\xf7\x05\xd3\xc9\xc3\x03\x45\x76\xd2\x80\xf0\x09\x63\xc5\xa4\xf5\xd0\xa6\x05\x46\x0f\x94\xbd\x80\xc9\x6f\x63\x18\x9c\xd7\xb5\x75\xd6\xf7\x83\x67\x00\x6f\x47\x5b\x03\x33\xc2\x9b\x75\xb1\x05\x6d\x33\xed\xe3\x96\xa7\xfb\xfb\xa8\x62\xed\xc9\xda\xe1\xc3\xc3\x01\xb8\x7f\x29\x51\x51\x02\xff\x43\xf2\xd6\xe3\xf2\x17\xe5\x41\xa2\xb0\x3b\xca\x0d\xce\x5e\x20\x0c\xe3\x9a\x3c\x1f\x20\x8c\x29\x93\xb4\x8e\x5f\x24\x0c\x6d\x5d\x1f\x26\x8c\x4b\xac\xb6\xb4\xef\x5f\x12\x4d\x8b\x88\xbc\xba\xe7\xeb\x91\x45\x8f\x68\x66\xa7\x69\x23\x1c\x62\xab\xe1\xb3\x6d\xe9\x7a\x12\x75\xb5\x2b\xdb\x0e\xa7\x17\x91\x1b\xd7\xec\xea\x12\x0b\x64\x7a\xe0\xda\xbe\x87\x1a\x09\x33\xe1\x99\x07\xf5\x04\xb3\x76\x82\xf6\x61\x4d\x36\x3c\x2f\x4a\x0d\x7a\x51\x20\x19\x25\x18\x7e\x0e\xc4\x9d\x85\xcf\x44\x64\x8e\x45\x03\xe8\x51\x43\x52\xa4\x6c\x61\x54\xaf\x9e\xdb\x52\x5b\x1f\x2d\xe4\x2d\xea\xef\x17\xbc\x4a\xc4\xbc\x0b\xfe\x44\x68\x26\xec\xa6\x5e\x74\xa4\x5b\xbd\xea\x97\x67\xb3\x77\x34\xa0\xba\x71\x6f\xd2\x06\x04\x75\x32\xd4\x74\x59\x77\x7c\x56\xb9\xf2\x4c\x17\x50\x2a\x18\x0c\xe0\x75\x3d\xff\xda\x08\x61\xe7\xcc\xc1\xb7\x56\x6c\x4f\xf9\x07\xf3\x4a\x5e\x66\x01\x1d\xc0\x4f\x21\x94\x79\x98\x50\x67\x40\x18\xf0\xf5\x2b\x74\x67\x25\x66\xd4\x86\x19\xfc\x16\x98\x59\xe7\xd6\x34\x4d\xd4\xd8\xfa\x6f\x2c\xee\x0d\x09\xf8\x1e\x82\x2c\x8a\x2c\x81\x83\xc5\xbc\x04\xdc\x1c\xb1\x7c\xf9\x88\x1f\x45\xdf\xd3\xe9\x31\xac\x22\xda\x23\xe6\x4e\x2d\xed\xcb\xfc\x18\xac\x30\x3b\xf3\xf4\x4c\xe7\x75\xd0\x7b\x88\xb2\x03\xe0\x7f\xd8\x88\x2f\x68\x4f\xe1\x79\x29\x88\xea\x88\x5a\xd2\x58\xb2\x1d\x27\xd0\x56\x1e\x2c\xa5\xd6\x25\x67\x1a\xff\xe9\x6e\x34\xf4\x2b\xa4\xbd\x8b\x3e\x1e\x45\x66\x44\xad\x54\xab\x9e\x6b\xdd\xb6\x87\xf1\x93\x51\xb2\xb6\xd7\x3c\xa3\x03\x8d\x65\xc5\xfa\x39\xb6\xfd\x45\xba\xa8\xe5\xeb\xfb\xd1\xc6\x97\x3a\x14\x4b\x99\xb6\x65\x64\xf5\x25\x68\xe5\x9b\x2c\x1e\x1e\x1a\x58\x55\x50\x06\x8c\x7d\xcb\xc1\xfe\x88\xfc\xaa\x09\xbd\xc1\xed\x21\x4e\x6c\x15\x96\x6a\x47\xc7\xbe\xb5\x1f\x6a\x96\x83\x26\xc1\x58\xd4\x2c\x07\xba\x01\x66\x94\x90\xa7\x33\xdf\xbd\x8e\x6d\x82\xd8\xb9\x5a\xa9\x00\xa6\xcb\x82\x39\xdb\x6f\x81\xff\x6c\x04\xaf\xf8\x2e\x49\x6e\x29\xba\x0d\xbb\xe9\x73\x48\x0e\x4b\x9d\x08\xf9\x1d\x0c\x99\x75\xf0\x2c\x7a\xfd\x42\xe2\xba\xc3\x4e\x1b\x63\x6c\xf6\xdc\xae\x56\xff\xd6\xff\x74\xbf\x09\x74\x3f\x1d\x74\x2f\xf8\xe6\x66\x6f\x2f\xfa\xf6\xbb\xc8\xbf\x01\x00\x00\xff\xff\xc5\x02\x73\x5e\x75\x13\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 4981, mode: os.FileMode(416), modTime: time.Unix(1461795107, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\xd1\x4f\xdb\x3e\x10\x7e\xf7\x5f\x71\x2a\x2f\x80\x9a\x14\xf8\x55\x3f\xb6\xf2\xd4\x01\xdb\xa2\xa1\x56\x22\x65\x88\xa7\xc9\x71\x2e\x89\x35\xd7\xf6\x6c\x87\x50\x4d\xfb\xdf\x77\x4e\x5a\x0d\x36\x8a\xfb\x50\xd9\xf7\xdd\x77\xdf\x7d\x77\x99\x1c\xb3\x4b\x63\x37\x4e\xd6\x4d\x80\xb3\x93\xd3\xff\xe1\x93\x31\xb5\x42\xc8\xb4\x48\x61\xae\x14\xf4\x21\x0f\x0e\x3d\xba\x47\x2c\x53\xc6\x6e\xa4\x40\xed\xb1\x84\x56\x97\xe8\x20\x34\x08\x73\xcb\x05\xfd\x6d\x23\x63\xf8\x8a\xce\x4b\xa3\xe1\x2c\x3d\x81\xc3\x08\x18\x6d\x43\xa3\xa3\x0b\xb6\x31\x2d\xac\xf9\x06\xb4\x09\xd0\x7a\x24\x02\xe9\xa1\x92\x54\x14\x9f\x04\xda\x00\x52\x83\x30\x6b\xab\x24\xd7\x02\xa1\x93\xa1\xe9\x8b\x6c\x29\x52\xf6\xb0\x25\x30\x45\xe0\x84\xe5\x84\xb6\x74\xab\x9e\xa3\x80\x07\xc6\x80\x4e\x13\x82\x9d\x4d\x26\x5d\xd7\xa5\xbc\x57\x99\x1a\x57\x4f\xd4\x80\xf2\x93\x9b\xec\xf2\x7a\x91\x5f\x27\xa4\x94\xb1\x3b\xad\xd0\xc7\x5e\x7f\xb4\xd2\x51\x83\xc5\x06\xb8\x25\x1d\x82\x17\xa4\x4e\xf1\x0e\x8c\x03\x5e\x3b\xa4\x58\x30\x51\x67\xe7\x64\x90\xba\x1e\x83\x37\x55\xe8\xb8\x43\x56\x4a\x1f\x9c\x2c\xda\xf0\xc2\xa0\x9d\x2a\xea\xf4\x39\x80\x2c\xe2\x1a\x46\xf3\x1c\xb2\x7c\x04\x1f\xe6\x79\x96\x8f\xd9\x7d\xb6\xfa\xbc\xbc\x5b\xc1\xfd\xfc\xf6\x76\xbe\x58\x65\xd7\x39\x2c\x6f\xe1\x72\xb9\xb8\xca\x56\xd9\x72\x41\xb7\x8f\x30\x5f\x3c\xc0\x97\x6c\x71\x35\x06\x24\x7b\xa8\x08\x3e\x59\x17\xb5\x93\x40\x19\xad\x8b\x93\xca\x11\x5f\x14\xaf\xcc\x20\xc6\x5b\x14\xb2\x92\x82\x3a\xd2\x75\xcb\x6b\x84\xda\x3c\xa2\xd3\xd4\x08\x58\x74\x6b\xe9\xe3\xf0\x3c\x49\x2b\x99\x92\x6b\x19\x78\xe8\xef\xff\xb4\x93\xb2\xe3\x09\x4b\xb9\x0a\x94\xcc\x03\x7e\x73\xa6\x9b\xe9\xd0\x24\xa2\x91\xaa\x3c\xc4\x47\xd4\x47\x3f\x69\x08\x05\x17\xdf\x6b\x67\x28\x3d\x11\x46\x19\x37\x83\x83\x6a\x1a\x7f\x17\xec\xd7\xfe\x74\x53\x96\x7b\xb3\xfb\x13\xb3\x59\x2a\x7c\xa1\x5a\x84\x88\x1c\xc2\x07\xd3\xf3\x77\xe7\x58\x0e\xd1\x06\x39\x69\x4e\x0a\xee\xe0\x55\xae\x03\xfc\x0f\xdf\x47\x2a\xa0\x8d\x72\xb5\xd4\x49\x30\x76\x06\xa7\x67\xf6\xe9\xd9\x5b\x61\x42\x30\xeb\xdd\x73\xe4\x2d\xd1\x8b\x9e\xb1\x6b\x64\xc0\xc4\xd3\x66\xe1\x0c\x68\x04\x43\x38\x6e\x73\x52\xca\xaa\xea\x31\x96\x97\x25\x79\x9b\xf4\x9f\xd2\x0c\x4e\x06\xee\xdd\xab\xc2\x6a\xf7\x18\x53\x0d\xf9\x1d\x57\xe3\x75\xb9\x7f\x7c\x63\x69\xab\x45\x43\x03\xdc\x62\xff\x16\x92\x74\x8e\xdb\x01\x48\x85\xf6\x12\xf2\x69\x55\xf1\xe9\xc5\xdb\x04\x0e\xd7\xb4\x20\x7b\x35\x11\xc1\xdb\x14\xbf\x03\x00\x00\xff\xff\xd3\x53\x4f\xc6\x66\x04\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 1126, mode: os.FileMode(416), modTime: time.Unix(1461791035, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\x55\xa0\x68\x81\x48\x5a\x7b\x8b\xa0\x48\x6d\x17\xae\x93\xb6\x46\x17\x76\x11\x7b\x1b\xe4\x54\x50\xd4\x58\x62\x4a\x89\x2c\x87\x8e\x6d\x04\xfe\xf7\x0e\x65\xc5\x6b\xa7\x5b\x14\xed\x21\x97\xcd\xc5\x22\xe7\x91\xef\xcd\x9b\xe1\x64\xf0\xe6\x7a\x3e\x59\xde\xff\x7a\x03\x95\xaf\xf5\x28\x1a\xbc\x49\x92\x68\x62\xec\xce\xa9\xb2\xf2\xd0\x7f\xdb\xbb\x84\x9f\x8c\x29\x35\xc2\xb4\x91\x29\x8c\xb5\x86\x36\x44\xe0\x90\xd0\x3d\x62\x91\x46\xd1\x7b\x25\xb1\x21\x2c\x60\xdd\x14\xe8\xc0\x57\x08\x63\x2b\x24\xff\x74\x91\x0b\xf8\x0d\x1d\x29\xd3\x40\x3f\x7d\x0b\x5f\x05\x40\xdc\x85\xe2\xaf\xbf\x8b\x76\x66\x0d\xb5\xd8\x41\x63\x3c\xac\x09\xf9\x02\x45\xb0\x52\x4c\x8a\x5b\x89\xd6\x83\x6a\x40\x9a\xda\x6a\x25\x1a\x89\xb0\x51\xbe\x6a\x49\xba\x2b\xd2\xe8\xbe\xbb\xc0\xe4\x5e\x30\x56\x30\xda\xf2\x6a\x75\x8a\x02\xe1\xa3\x08\xf8\xaf\xf2\xde\x5e\x65\xd9\x66\xb3\x49\x45\xab\x32\x35\xae\xcc\xf4\x01\x45\xd9\xfb\xe9\xe4\x66\xb6\xb8\x49\x58\x69\x14\x7d\x68\x34\x52\xc8\xf5\xcf\xb5\x72\x9c\x60\xbe\x03\x61\x59\x87\x14\x39\xab\xd3\x62\x03\xc6\x81\x28\x1d\x72\xcc\x9b\xa0\x73\xe3\x94\x57\x4d\x79\x01\x64\x56\x7e\x23\x1c\x46\x85\x22\xef\x54\xbe\xf6\x67\x06\x3d\xab\xe2\x4c\x4f\x01\x6c\x91\x68\x20\x1e\x2f\x60\xba\x88\xe1\x87\xf1\x62\xba\xb8\x88\xee\xa6\xcb\x9f\xe7\x1f\x96\x70\x37\xbe\xbd\x1d\xcf\x96\xd3\x9b\x05\xcc\x6f\x61\x32\x9f\x5d\x4f\x97\xd3\xf9\x8c\x57\x3f\xc2\x78\x76\x0f\xbf\x4c\x67\xd7\x17\x80\x6c\x0f\x93\xe0\xd6\xba\xa0\x9d\x05\xaa\x60\x5d\xa8\xd4\x02\xf1\x8c\x7c\x65\x0e\x62\xc8\xa2\x54\x2b\x25\x39\xa3\xa6\x5c\x8b\x12\xa1\x34\x8f\xe8\x1a\x4e\x04\x2c\xba\x5a\x51\x28\x1e\xb1\xb4\x22\xd2\xaa\x56\x5e\xf8\x76\xfd\xb7\x74\xd2\x28\x49\xb8\x8b\xba\x66\xaa\x50\x14\x23\xf6\x7c\xe0\x95\xd7\x38\xba\xc5\x47\x85\x1b\x86\x92\x1f\x64\x87\xad\x10\xd4\xaa\xf9\x83\x1d\xd6\xc3\x98\xfc\x8e\xed\xae\x10\x7d\x0c\x95\xc3\xd5\x30\x0e\xb5\x22\x2e\x56\x2d\xb6\xb2\x68\xd2\xdc\x18\xcf\x5e\x09\x1b\x16\xdc\x11\xd9\x71\x23\x7b\x97\xbe\x4b\x2f\x33\x49\xf4\x71\x2f\xad\x15\xa3\x88\x62\xc8\xfe\x95\x28\xa3\x90\x93\xcc\x5c\xab\x91\x4e\x8f\x91\x74\x8a\x7b\x90\x9c\xfc\xa8\x47\x3c\x88\x6d\x5a\xb6\x0f\x43\x58\x45\xad\x96\xb0\xc7\x6d\x94\x53\x16\x4c\xd4\xc2\x3d\x50\xd6\x4b\xfb\x69\xff\xf2\x79\xa3\x15\xf4\x40\xf1\x68\x90\x1d\x2e\x65\x8f\xb2\x83\x49\x83\xdc\x14\xfc\x00\xca\x84\xdb\x6b\x18\x97\xca\x8f\xad\x75\x42\x11\xde\x61\x1e\xb7\x32\x0a\xf5\x18\xe2\xd2\x34\xde\x19\xad\xd1\x0d\x63\xcd\x4e\x1e\x4c\xa5\x16\xd3\xa1\xa4\x16\x44\xc3\x38\x20\xf9\x35\xa0\xeb\x62\xe7\x51\x67\x36\xc7\xfd\x97\xe7\x74\x52\x17\x49\xaf\x7f\x12\x67\x44\xd5\x7b\x06\x78\xdc\xfa\x84\xcb\xed\xb9\xf6\x92\x72\xbd\xc6\x98\x6b\x6b\x0d\x29\x6f\xdc\xee\x0a\x9e\x9e\xac\xf0\xd5\x7e\xcf\xb9\xf5\x4e\x28\x32\xe6\x38\x2a\x39\x5b\x9c\xcb\x82\xe0\x08\xba\x24\x17\xee\xbf\x29\xcc\x47\x73\x8b\x0d\x74\x8e\x5c\x0d\xb2\xfc\xff\xb0\x0b\xcd\x79\x35\xc2\xe3\xef\xc1\xa2\x60\xb9\x43\x8b\xc2\x73\xf4\xd0\xbf\xfc\xc8\x0d\xf3\x9c\x1b\xff\x0f\x12\xbf\x89\x47\x4f\x4f\x87\x73\xa9\x57\x35\x72\x97\xd5\x36\x38\x73\x22\xe0\x93\x07\xbf\x3d\x4f\x4d\x7c\xb2\x4d\xd3\xf0\xce\xbe\xf8\x9e\xf5\x99\x61\xa0\xb1\x66\xbf\xff\xf2\x10\x1a\x1e\x69\xc3\x4f\x78\xbd\xfb\xfd\x89\x16\x5a\xd7\xb5\x70\xbb\xa0\x44\xbc\x6e\x89\x26\xda\x84\xff\x14\xaf\x50\x24\xd9\x32\x7d\x46\x65\x3a\x7e\x76\x1f\x2f\x87\xd7\xcb\x19\xf7\x72\x12\x85\x11\xd4\x4e\xa4\x76\x7a\xff\x15\x00\x00\xff\xff\xa8\xb3\x6b\x1b\x1b\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2075, mode: os.FileMode(416), modTime: time.Unix(1461397271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xed\x6f\xdb\xb8\x19\xff\xae\xbf\x82\x10\x8a\x9e\xdc\xc8\x72\x52\x0c\xc3\x30\x23\xdb\x79\x49\x7b\x33\x96\x25\x87\x38\x5d\x71\xc8\x82\x42\x91\x68\x9b\x98\x2c\xe9\x48\x2a\x4e\x30\xe4\x7f\xdf\xf3\xf0\x45\x22\x25\xfb\xec\xb6\xf7\x61\xfd\xd0\x58\x7c\x5e\xf8\x7b\x5e\xc9\x87\x93\x77\xc1\x45\x55\xbf\x70\xb6\x5a\x4b\xf2\xfe\xf4\xec\x8f\xe4\xa7\xaa\x5a\x15\x94\xcc\xcb\x2c\x21\xb3\xa2\x20\x8a\x24\x08\xa7\x82\xf2\x27\x9a\x27\x41\x70\xc5\x32\x5a\x0a\x9a\x93\xa6\xcc\x29\x27\x72\x4d\xc9\xac\x4e\x33\xf8\x63\x28\x31\xf9\x17\xe5\x82\x55\x25\x79\x9f\x9c\x92\x08\x19\x42\x43\x0a\x47\xd3\xe0\xa5\x6a\xc8\x26\x7d\x21\x65\x25\x49\x23\x28\x28\x60\x82\x2c\x19\x6c\x4a\x9f\x33\x5a\x4b\xc2\x4a\x92\x55\x9b\xba\x60\x69\x99\x51\xb2\x65\x72\xad\x36\x31\x2a\x92\xe0\x17\xa3\xa0\x7a\x94\x29\xf0\xa6\xc0\x5d\xc3\xd7\xd2\xe5\x22\xa9\x0c\x02\x02\xff\xd6\x52\xd6\x7f\x9e\x4c\xb6\xdb\x6d\x92\x2a\x94\x49\xc5\x57\x93\x42\x73\x89\xc9\xd5\xfc\xe2\xc3\xf5\xe2\xc3\x18\x90\x06\xc1\xa7\xb2\xa0\x02\x6d\xfd\xb5\x61\x1c\x0c\x7c\x7c\x21\x69\x0d\x38\xb2\xf4\x11\xd0\x15\xe9\x96\x54\x9c\xa4\x2b\x4e\x81\x26\x2b\xc4\xb9\xe5\x4c\xb2\x72\x15\x13\x51\x2d\xe5\x36\xe5\x34\xc8\x99\x90\x9c\x3d\x36\xd2\x73\x90\x45\x05\x96\xba\x0c\xe0\xa2\xb4\x24\xe1\x6c\x41\xe6\x8b\x90\xfc\x6d\xb6\x98\x2f\xe2\xe0\xf3\xfc\xee\xef\x37\x9f\xee\xc8\xe7\xd9\xed\xed\xec\xfa\x6e\xfe\x61\x41\x6e\x6e\xc9\xc5\xcd\xf5\xe5\xfc\x6e\x7e\x73\x0d\x5f\x1f\xc9\xec\xfa\x17\xf2\x8f\xf9\xf5\x65\x4c\x28\xb8\x07\x36\xa1\xcf\x35\x47\xec\x00\x90\xa1\xeb\x30\x52\x0b\x4a\xbd\xcd\x97\x95\x06\x23\x6a\x9a\xb1\x25\xcb\xc0\xa2\x72\xd5\xa4\x2b\x4a\x56\xd5\x13\xe5\x25\x18\x42\x6a\xca\x37\x4c\x60\xf0\x04\x40\xcb\x83\x82\x6d\x98\x4c\xa5\xfa\x1e\x98\x93\x04\xef\x26\x41\xf0\x94\x72\xb2\x62\x72\x56\xd7\x3c\x65\x82\x7e\xa6\x8f\xe7\xa8\xb7\x48\x79\xb2\xa9\xf2\xa6\xa0\x51\xe8\x93\xc3\x98\xdc\x3f\x40\x22\x04\x93\x09\xf9\x89\x4a\x08\x20\xa7\x75\x25\x98\xac\x38\x64\x45\xba\x01\xa4\xbc\xda\xa8\x8d\x96\x0d\xa4\x60\x9d\xca\x75\x12\x2c\x9b\x32\x43\x1c\x64\x45\xe5\x55\x2a\xe4\xcf\xb0\xfa\xa1\xa0\x1b\x5a\xca\x08\x39\x46\xe4\xbf\x10\x70\x04\x23\x8a\x54\xac\xe7\x00\xf6\x99\x9c\x6b\x61\x58\x90\x6a\xe1\x66\x19\x85\x13\x4c\x42\x42\xd8\x92\x44\x0e\xe7\x5f\xc8\xa9\xd6\x40\x00\x8d\x6c\x78\xa9\x25\x45\xf3\x88\xe1\x2a\x57\x0e\xef\xc9\x59\x6c\xd4\xd2\x72\x05\x1b\xa3\xb6\xd7\xc0\x93\x9b\x06\xaf\x9e\x79\x4f\x8c\x6e\x89\x68\x36\x9b\x14\x4c\xf4\xad\xcb\xa9\xc8\x38\xab\xd1\x34\xdf\xc8\x85\x66\x8f\x90\xa1\x33\x0e\xa2\xdc\x14\x12\x0c\xc3\xe5\xa9\x59\x2c\xe9\xb6\x60\x25\xb5\x36\x23\x29\x61\xd6\xde\x7f\x97\x9d\xc1\x1e\xa3\x67\xb2\xa3\xd5\x31\xfa\x34\xf6\x74\xb7\xa6\xa2\x2e\x2d\x63\x9c\x00\xca\xfe\x34\xd4\x66\x58\x3c\x7d\xc0\xd6\x73\x98\xe6\x6a\x5d\xc6\x9e\x28\x16\xb5\x64\x1b\x2a\x64\xba\xa9\x49\x2a\x74\xda\xd2\xac\x2a\x73\xd1\xb9\xaf\x29\xd9\x33\x81\xcc\xc9\xd6\xb1\x55\x85\xcb\xeb\x66\x93\x96\xe3\x25\x67\xb4\xcc\x8b\x17\xf2\xa4\x7b\x91\xe3\x5b\x4b\xba\xb3\x3b\x44\xed\x5e\xda\x02\xa3\x0c\x2c\x27\x97\xa9\xa4\x90\x5e\x5c\x80\x03\xa4\xcb\xf7\x8e\x9c\x9d\x9e\x9e\x8e\x12\x59\x2d\xb4\x69\x23\x65\x40\xbb\x89\x92\xf9\x54\x42\x9d\xd1\xfc\x92\x2d\x97\x51\x0e\xff\x75\x61\xc4\x7e\x87\xcb\x02\x7d\x0e\x7f\x13\x01\x45\x2b\x31\x58\xf8\x45\xc6\x63\x28\x19\xa2\xe3\x66\xd9\x91\xf5\xfe\x01\x57\xb0\x90\x23\xb5\x8c\x3d\xa8\x55\x65\xdd\xaf\x98\x93\xba\x11\x6b\x8d\xfc\xa3\x61\x88\x5a\xce\xfb\xe5\xc3\xa8\x1f\x05\x25\x35\xc5\xa6\xe9\xdb\x30\x90\xb6\xdb\x58\x5c\x57\x90\x1d\x88\xcd\xd2\x3b\x53\x34\xfe\x8e\xf3\x1a\x6a\xdb\x72\x2a\xa9\xfb\xd3\x07\xcb\x4d\x5c\x66\xbe\x16\x1f\x0d\xbf\x61\x57\xa2\xf7\xed\x2f\x93\x75\xe3\xb3\x87\x4e\xa8\x38\x56\xe8\xbd\x2f\x74\xdd\x6c\x1e\xa1\xaf\x9d\x93\x53\x0f\xc0\xae\xe5\xc2\x98\x7a\x6f\x34\xb4\x81\x60\x36\x10\xca\x2c\xeb\x21\x2d\x24\xe9\xb3\xf4\x8c\x66\x46\x5a\x97\x11\x92\x13\x48\x2a\x2e\xc5\x67\xe8\xe5\x51\x38\x1e\x8f\xc1\x19\x9d\x0e\xd2\xb3\x4c\x0b\xb4\x25\xf5\x87\x91\xd5\xf6\x4a\x68\x81\x67\xcc\x2e\xa5\x27\x27\x27\x3d\xa5\xfc\xfb\x95\xfe\xf8\x63\x4f\xa7\x0a\x34\x94\x27\xda\xf9\x33\xf0\xed\x50\x1c\xeb\x95\xb6\x3b\xc5\xe1\xa8\xdd\xcb\xf8\xab\xda\x2f\xee\xcb\x9e\x84\x23\xa3\xce\x6b\xf0\x43\x95\x25\xf0\x5c\x39\x21\x6d\x0b\xda\x05\xdb\x93\xa9\xe0\xe0\x83\x33\xfa\xa2\x6a\x4a\x04\xe2\xab\x18\x77\x89\x33\x75\xc3\xd4\xee\xe0\xb1\x4f\x5d\xa7\x0f\x41\x74\x06\x3b\x10\xd0\xe1\x1e\x04\xa7\x5b\x9b\xed\x30\x99\x74\x99\x3b\xab\x44\xb7\x2d\xa8\x43\x54\xea\x53\x1c\x88\x71\x8f\xc0\xf7\x11\x42\x03\x22\x1c\x10\x16\xff\x61\x75\x0d\x97\x98\x90\x9c\xf8\xce\x82\x4c\x83\xde\x9c\xad\xe1\x16\x00\x64\x05\xd3\x8b\xc8\xeb\x11\xa9\x35\xee\x55\x40\x67\xab\x67\x5e\x67\x8f\x63\x01\x09\x39\xdd\xc0\x8d\x06\x30\xf7\xf3\xe7\x6c\xe4\x02\x69\xa5\x4f\x4e\x8e\xaa\xa1\xef\xc2\x94\xe6\xf9\x61\x44\xfc\xeb\x10\xf5\xfb\xc4\xd7\x21\x6a\x63\xf4\x0d\x7e\xda\x0d\x35\xe8\xfe\xc7\x12\x72\xae\x36\x90\xef\x70\xa5\x51\x67\x49\xb7\x18\x39\x8d\x2d\x76\x1b\x92\x73\x14\xb0\x1c\x44\x43\x6c\x9e\x98\x67\xfa\x68\xd3\x7d\x7c\xea\x5e\xd6\xd0\x5e\x94\x8e\x9c\x3d\x63\x10\x8e\xb5\x53\xcc\x61\xe7\x1e\x6e\x5f\x03\xc7\xf8\x18\x63\xe0\xf0\x78\xa1\x48\xe1\x5a\x49\xde\xbe\x75\xc5\x3c\xfa\xe3\xc4\x8d\x95\xdf\xd1\x3d\x9d\x6d\x0c\xde\xb7\x11\xf0\x5b\x35\x3f\xc0\xdd\x43\x49\xce\xcf\x77\xd9\xe2\xf8\x2e\xfc\x67\x95\xab\x7b\x8a\x2a\x65\x47\xb4\x97\x82\x43\xc1\x5b\x8a\xd7\xf5\x81\x9c\xea\x00\x30\x20\xe1\x32\xdf\xa1\x2e\xe8\xe5\xf5\x6f\xf9\xb4\xc3\x6b\x37\xbd\xa4\x05\x95\xc3\x4d\x77\xf8\xa2\x87\xdb\x2a\x98\x61\x25\xf6\xc1\xed\x12\x1f\xe4\xcc\x81\x8a\x02\xec\xb2\x11\xba\x98\x2c\x6e\x9c\x6e\x13\xf7\x64\xe8\x1d\x1c\x8a\xee\x1e\x0b\x7c\x07\x5d\x2b\x06\xa2\xfe\xe1\x50\xcc\xe5\x02\xff\x0c\x53\x7c\x77\x41\xe4\xc6\x08\xe1\x41\xf4\x6b\xd5\xf9\x72\x36\x53\xb5\xc8\x72\x67\xa5\xd5\x65\xae\xb1\xea\xb7\x47\x87\xeb\x1d\x8c\xea\x80\x90\x37\x54\x23\x04\x8c\xfe\x3c\x98\xc0\xbd\x5e\xf2\xaa\x28\x28\x8f\xc2\x02\xc6\xe3\x5b\x1c\x07\xa1\x29\x59\x43\xa2\x37\x02\x46\x7c\x1a\xbf\xc1\x61\x5e\xa3\x56\x3f\x13\xa8\x61\x98\xe7\xd2\x9a\x4d\xd4\x04\x19\x8e\x20\x8a\x59\x06\x73\xb0\x3e\xf7\x5a\x79\x98\x30\x6a\x98\x60\x31\xf9\xb5\xaa\xa4\x9d\x38\x99\xc2\x5e\xf3\x0a\xc5\xae\xec\xe6\xb7\x46\xa0\x93\x9c\xbe\x8e\x7a\x97\xe3\x83\x22\xce\x3d\x59\x6d\xb7\xf7\xe2\xd8\x97\xd0\x32\x38\x47\xea\x19\x4a\x11\xe1\xda\x98\xe8\xd1\xd2\x66\x33\xa8\xec\x9a\x3d\x62\x88\x5c\x5e\x0c\xf5\xbe\x51\x79\xe4\x64\xb8\x33\x86\x81\xc2\x61\x12\x29\xc5\xa8\xac\x74\xba\xc7\x9e\x74\x28\x75\x87\x2a\x4d\xb1\x43\xac\xd1\x69\x07\xa3\x8d\xd3\xf1\xde\x78\xc7\x6f\x8a\x2a\x53\x2f\x10\xee\x10\x5c\x57\xb0\x4f\x4b\x49\x04\x4d\x79\xb6\x8e\x46\xf7\x3f\x20\xe9\x07\xe5\x65\x27\xd2\xca\x8d\x75\x35\xdd\x93\x38\x5f\xcc\x64\xfe\x57\xfc\x38\x57\x8d\x01\x7e\x1c\x9f\x4c\x26\x52\x3b\xbc\x6d\x79\x15\x8b\xce\xa1\x21\x04\x50\x51\x7e\xd1\x6f\x04\xe2\x5b\x21\xa0\x0e\xe3\xc8\x7e\x3a\xab\xc5\x3d\x09\x3d\x04\x93\x15\x95\xa0\xf9\xf7\xc2\xd1\x5a\xbe\x01\xd0\xde\x0a\xdb\x23\xe4\xd5\x98\xdd\xed\x6b\xaa\x0c\xa5\x84\x6e\x7a\x6e\xf5\xd8\xe5\xa9\x3b\xc8\xb5\x2f\x12\x7d\xde\x5f\x1b\x20\x24\x2d\xdd\x15\xc2\x4e\xba\x87\x7f\xd0\x64\x89\xb5\xc1\x2d\x6b\x5c\x88\x2c\x9c\xb8\x03\x11\x2b\xd5\xf1\xe0\xa5\x68\x4f\x6d\x2b\xbd\xbb\xaa\xfb\x90\x7e\x53\x1b\x5e\xe5\x7b\x4e\x73\x1d\xa5\xcf\x24\xc7\x4f\xbf\xf5\xd6\x32\xf5\x4f\x1f\xe7\x4d\xcb\x1e\x7b\xe6\xc1\xec\xdc\x82\x38\xae\xa9\x80\x47\xb4\x59\xbf\x7b\x4b\xe9\xd2\x6c\x2f\x2b\x12\x4d\xff\xf9\xff\xeb\x34\x1a\xde\x97\x9c\xca\x94\x15\xbd\xe2\xc6\x4b\xdb\x5b\xcd\x60\xd6\xf0\xe7\xf1\xd0\x8c\x52\x75\x49\xc1\x6b\x14\x5b\x76\x41\x17\x07\xdb\x8e\x45\x06\x77\x88\xdf\x09\x96\xa9\x28\x8b\x0e\x5f\xd5\xba\x32\x9c\x0e\xa9\x89\x7d\x63\x1b\xbc\xdc\xb5\xae\xc5\x24\x03\x5f\x0b\x5b\x61\xbd\x7e\xd5\xda\x7d\x51\x6d\x30\x26\x8e\xf9\x99\x59\x59\x73\x9a\xe6\x6e\xd3\x72\x6b\xc5\x63\x4a\xcc\x57\xbf\xab\x1c\x60\x3a\xaa\xe4\xfc\xbe\xd8\xd3\xb8\x66\x45\xce\x69\xd9\x79\xf0\x58\xb3\x5a\x51\xe8\x71\x7b\x6f\xd0\xbb\x73\x03\x43\x7a\xa9\xf3\xa7\x7d\xc4\xec\xf5\x6e\x87\x45\x1d\xe9\x30\x24\xf4\x1b\x39\x2e\x9a\x8e\x34\xe0\x75\x1e\xdd\x86\xad\x1c\x39\x86\xdd\xbb\xbf\x7e\x94\x6b\x5f\x0f\x82\x37\x3e\x13\x47\x39\x78\xb7\xa8\xef\xe0\x5e\x93\x37\xcc\x5d\xab\xfc\x5f\x00\x00\x00\xff\xff\x40\x5e\x1f\x0d\xe4\x1b\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 7140, mode: os.FileMode(416), modTime: time.Unix(1461797050, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
