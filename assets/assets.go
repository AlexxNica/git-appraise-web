// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461718427, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x58\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x63\x91\x7f\xef\x50\x56\x12\x3b\x45\xb1\x48\x7d\x91\x87\xf3\x34\xf3\xe6\xcd\xa3\xa6\xef\xae\x56\x97\x9b\xbb\xdf\xaf\xa1\xf6\x8d\x9e\x45\xd3\x77\x49\x12\x5d\xda\xf6\xe0\x54\x55\x7b\x98\xbc\x1f\x5f\xc0\x27\x6b\x2b\x8d\xb0\x30\x32\x85\xb9\xd6\xd0\xa7\x08\x1c\x12\xba\x07\x2c\xd3\x28\xfa\xac\x24\x1a\xc2\x12\x76\xa6\x44\x07\xbe\x46\x98\xb7\x42\xf2\x63\xc8\x8c\xe0\x0f\x74\xa4\xac\x81\x49\xfa\x1e\xbe\x0f\x80\x78\x48\xc5\x3f\xfc\x18\x1d\xec\x0e\x1a\x71\x00\x63\x3d\xec\x08\xb9\x80\x22\xd8\x2a\x6e\x8a\x7b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x4d\x86\x12\x69\x74\x37\x14\xb0\x85\x17\x8c\x15\x8c\x6e\x39\xda\x9e\xa2\x40\xf8\x28\x02\xfe\xd5\xde\xb7\x1f\xb3\xac\xeb\xba\x54\xf4\x2c\x53\xeb\xaa\x4c\x1f\x51\x94\x7d\x5e\x5c\x5e\x2f\xd7\xd7\x09\x33\x8d\xa2\x2f\x46\x23\x85\x59\xff\xde\x29\xc7\x03\x16\x07\x10\x2d\xf3\x90\xa2\x60\x76\x5a\x74\x60\x1d\x88\xca\x21\xe7\xbc\x0d\x3c\x3b\xa7\xbc\x32\xd5\x08\xc8\x6e\x7d\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf3\x67\x02\x3d\xb1\xe2\x49\x4f\x01\x2c\x91\x30\x10\xcf\xd7\xb0\x58\xc7\xf0\xf3\x7c\xbd\x58\x8f\xa2\xdb\xc5\xe6\xd7\xd5\x97\x0d\xdc\xce\x6f\x6e\xe6\xcb\xcd\xe2\x7a\x0d\xab\x1b\xb8\x5c\x2d\xaf\x16\x9b\xc5\x6a\xc9\xd1\x2f\x30\x5f\xde\xc1\x6f\x8b\xe5\xd5\x08\x90\xe5\xe1\x26\xb8\x6f\x5d\xe0\xce\x04\x55\x90\x2e\x6c\x6a\x8d\x78\xd6\x7c\x6b\x8f\x64\xa8\x45\xa9\xb6\x4a\xf2\x44\xa6\xda\x89\x0a\xa1\xb2\x0f\xe8\x0c\x0f\x02\x2d\xba\x46\x51\x58\x1e\x31\xb5\x32\xd2\xaa\x51\x5e\xf8\x3e\xfe\xd7\x38\x69\x94\x24\xec\xa2\xc1\x4c\x35\x8a\x72\xc6\x9a\x4f\xbd\xf2\x1a\x67\x37\xd8\x5a\x52\xde\xba\x03\xc3\xc9\x4f\xb3\xe3\x71\x00\x68\x65\xfe\x62\x95\x75\x1e\x93\x3f\xb0\xe4\x35\xa2\x8f\xa1\x76\xb8\xcd\xe3\xb0\x2f\xe2\x85\x35\x62\x2f\x4b\x93\x16\xd6\x7a\xd6\x4b\xb4\x21\x60\x57\x64\xcf\x07\xd9\x87\xf4\x43\x7a\x91\x49\xa2\x97\xb3\xb4\x51\x8c\x22\x8a\x21\xfb\x66\xa3\x8c\xc2\x5c\x32\x73\xf8\xa0\xb0\xa3\xd3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xae\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x1f\x8c\xd8\x0a\xec\x03\xa1\x13\x92\x42\x63\x3e\x8e\xfb\x32\x24\x9d\x62\x3b\x93\x93\x2f\x63\x89\x7b\xb1\x4f\xab\xfe\x8e\x89\x56\x51\x3f\x52\x38\x63\x47\x16\x94\x85\x7d\x68\xe1\xee\x29\x1b\xa7\x93\x74\x72\xf1\x74\xd0\xcf\x75\x4f\xf1\x6c\x9a\x1d\x8b\xb2\xdc\xd9\x51\xef\x69\x61\x4b\xbe\x4b\x55\xc2\x4e\xcd\xe3\x4a\xf9\x79\xdb\x3a\xa1\x08\x6f\xb1\x38\xd2\x28\xd5\x43\xc8\x07\xfe\xce\x6a\x8d\x2e\x8f\x35\x2f\xa4\xdf\x4f\x8f\x18\x30\x52\x0b\xa2\x3c\x0e\x38\xbe\x56\xe8\x86\xdc\x79\xd6\xd9\xee\xf9\xfc\xf5\x7b\x3a\x69\xca\x64\x3c\x39\xc9\x33\xa2\x1e\x3f\x01\x3c\xee\x7d\xc2\xbe\xf1\x6c\x22\x49\x85\xde\x61\x3c\xfb\xa4\x7c\xf2\x44\x18\x98\x31\x4f\x35\x3e\x29\x9f\x71\xfd\x67\x16\x67\xc1\x39\x25\x08\x5a\xa0\x4b\x0a\xe1\xde\xc6\xae\x78\xb1\xa9\x42\xfa\x38\xcd\x8a\xff\xd3\x5d\x68\x9e\xc9\x08\x8f\x7f\x06\x79\x82\xd8\x0e\x5b\x14\xec\x15\x7e\xf6\xdf\x09\x77\xd2\xe5\x6d\x0c\xc5\x7f\xd8\x35\x5c\xba\xef\x7e\x0a\x75\xf3\xaf\x5f\xc3\x23\x55\xe5\xe3\x63\x3c\x1b\x82\xe0\xde\xc7\xc7\x69\x26\xbe\x3d\xcf\xf3\xdf\xe1\xcf\x6b\xeb\xbe\xee\xfc\xda\x87\xc1\x80\xbd\x1f\xfb\xcf\xc0\x3f\x01\x00\x00\xff\xff\x70\x50\xec\xfd\x64\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1636, mode: os.FileMode(416), modTime: time.Unix(1461393701, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\x5f\x4f\xe3\x46\x10\x7f\xf7\xa7\x18\xfc\xd4\x4a\xd8\x06\xae\x42\x15\x0d\x91\x52\xa0\x6d\xd4\x53\xa8\x48\xae\x88\xa7\x6a\x6d\x4f\xec\xa5\x6b\xaf\x6f\x77\x4d\x88\x50\xbe\x7b\x67\xd7\x0e\x71\x12\x08\x77\x5c\x2f\xbc\x38\xde\x19\xcf\xfc\xe6\x37\x7f\x76\xe8\x1d\x5c\x5e\x5f\x4c\xee\xfe\xba\x82\xdc\x14\xa2\xef\xf5\x0e\x82\xc0\xbb\x90\xd5\x5c\xf1\x2c\x37\x70\x72\x74\x7c\x0a\xbf\x4b\x99\x09\x84\x61\x99\x84\x30\x10\x02\x9c\x48\x83\x42\x8d\xea\x01\xd3\xd0\xf3\x3e\xf2\x04\x4b\x8d\x29\xd4\x65\x8a\x0a\x4c\x8e\x30\xa8\x58\x42\x8f\x56\x72\x08\x7f\xa3\xd2\x5c\x96\x70\x12\x1e\xc1\x0f\x56\xc1\x6f\x45\xfe\x8f\xbf\x78\x73\x59\x43\xc1\xe6\x50\x4a\x03\xb5\x46\x32\xc0\x35\x4c\x39\x39\xc5\xc7\x04\x2b\x03\xbc\x84\x44\x16\x95\xe0\xac\x4c\x10\x66\xdc\xe4\xce\x49\x6b\x22\xf4\xee\x5a\x03\x32\x36\x8c\x74\x19\x69\x57\xf4\x36\xed\x6a\x01\x33\x9e\x07\xf4\x97\x1b\x53\x9d\x45\xd1\x6c\x36\x0b\x99\x43\x19\x4a\x95\x45\xa2\xd1\xd2\xd1\xc7\xe1\xc5\xd5\x68\x7c\x15\x10\x52\xcf\xfb\x54\x0a\xd4\x36\xd6\xcf\x35\x57\x14\x60\x3c\x07\x56\x11\x8e\x84\xc5\x84\x4e\xb0\x19\x48\x05\x2c\x53\x48\x32\x23\x2d\xce\x99\xe2\x86\x97\xd9\x21\x68\x39\x35\x33\xa6\xd0\x4b\xb9\x36\x8a\xc7\xb5\x59\x23\x68\x89\x8a\x22\xed\x2a\x10\x45\xac\x04\x7f\x30\x86\xe1\xd8\x87\x5f\x07\xe3\xe1\xf8\xd0\xbb\x1d\x4e\xfe\xb8\xfe\x34\x81\xdb\xc1\xcd\xcd\x60\x34\x19\x5e\x8d\xe1\xfa\x06\x2e\xae\x47\x97\xc3\xc9\xf0\x7a\x44\x6f\xbf\xc1\x60\x74\x07\x7f\x0e\x47\x97\x87\x80\x44\x0f\x39\xc1\xc7\x4a\x59\xec\x04\x90\x5b\xea\x6c\xa6\xc6\x88\x6b\xce\xa7\xb2\x01\xa3\x2b\x4c\xf8\x94\x27\x14\x51\x99\xd5\x2c\x43\xc8\xe4\x03\xaa\x92\x02\x81\x0a\x55\xc1\xb5\x4d\x9e\x26\x68\xa9\x27\x78\xc1\x0d\x33\xee\x7d\x2b\x9c\xd0\x0b\x02\xaa\xa2\xb6\x98\x72\x64\x69\x9f\x38\xef\x19\x6e\x04\xf6\x6f\xf0\x81\xe3\x0c\x2e\x91\x92\x24\x74\x2f\x6a\x4e\xad\x5c\xf0\xf2\x5f\x22\x59\x9c\xfb\xda\xcc\x89\xf1\x1c\xd1\xf8\x90\x2b\x9c\x9e\xfb\x36\x5d\x9a\xf2\x55\xb0\xc7\x24\x2d\xc3\x58\x4a\x43\x74\xb1\xca\xbe\x50\x51\x44\xcf\x07\xd1\x87\xf0\x43\x78\x1a\x25\x5a\xaf\xce\xc2\x82\x93\x96\xd6\x3e\x44\x6f\x3a\x8a\xb4\x0d\x2b\x89\x94\x83\xa9\xbb\x9f\xe9\x44\x71\x2a\x43\xad\x92\x15\x1e\x76\xcf\x1e\xc3\xcc\xf5\x06\xab\xb8\x76\x58\xec\x19\x55\x52\xac\x23\xcb\xa3\x60\xea\x5e\x47\xc7\xe1\x49\x78\x72\xba\x3c\x70\x80\xee\xb5\xdf\xef\x45\x8d\x51\xa2\x29\x6a\x78\xea\xc5\x32\xa5\x1e\xc8\x02\xaa\xb0\x73\x3f\xe3\x66\x50\x55\x8a\x71\x8d\xb7\x18\xfb\x0e\x46\xca\x1f\xac\x3c\x91\xa5\x51\x52\x08\x54\xa4\x86\xa6\xa1\xd5\x69\xb4\x3a\x89\x60\x5a\x9f\xfb\x56\x8f\xda\x01\x55\x2b\x5b\x97\x2a\x39\x7b\x3e\xdf\xfc\x4e\x04\x45\x1a\x1c\x9f\x74\xe4\xa4\x91\x1f\x2f\x15\x0c\x3e\x9a\x80\xf2\x6d\x28\xf9\x89\x8e\x45\x8d\x3e\x25\xb7\x92\x9a\x1b\xa9\xe6\x67\xf0\xf4\x54\x31\x93\x2f\x16\x14\xd9\x71\xc7\x45\x44\x3e\x9e\x91\xac\xbd\xac\xc3\x02\xcb\x07\xaa\x20\x66\xea\xeb\x10\xc6\xfd\xb6\xb6\xce\x7a\x51\xfc\x0e\xc7\xbb\xbd\x6d\x39\xb3\xc4\xdb\xbe\xd8\xe1\xed\x65\xd8\x47\x6b\x96\x9e\x9e\xd2\x06\x75\xa8\x5a\x83\x8b\xc5\x1e\xb0\x7f\xae\x51\x53\x02\xff\x47\xf0\xce\xe2\xf2\x89\x6a\x2f\x51\xb8\x89\x72\x83\xd3\xef\x10\x86\x35\x4d\x96\xf7\x10\xc6\x84\x29\xea\xe3\xef\x12\x86\x71\xa6\xf7\x13\xc6\x25\x36\x23\xed\xdb\x5b\xa2\xab\x91\x92\x55\xbf\xbf\x1d\x59\xba\xf2\x66\x27\xcd\xba\x87\x7d\x8c\x1a\x3e\xdd\x95\xae\xf7\xf3\xba\xe9\x8a\xae\xf1\x7e\x2f\x91\x29\xba\xdb\x99\x08\x21\xc7\x8e\x10\x7a\x86\x76\xc6\xd3\x20\xd6\x96\x02\xab\x43\xf7\x8a\xd5\xdf\x2b\x13\x17\x84\x81\x97\xb5\xac\x35\x2d\x89\x06\x33\xc5\xde\x28\x81\x9d\x38\x98\xa0\xd9\x51\x32\x83\xff\x58\xa6\xec\x7d\xa7\xb0\x42\x66\x48\x4a\x57\x8c\x72\xcb\xe0\xaa\x16\xec\x89\x76\x5a\x7c\xba\xd4\x08\xed\x45\x5e\xeb\xdd\x61\xfc\x64\x29\x6c\xf5\x0d\x2f\xa8\xa2\x58\x51\x6d\x17\xd2\xee\x0f\x69\x53\x2a\xcd\x97\x7d\xb4\x01\xb1\x56\x62\x9d\x46\xd6\x6e\x21\xcf\xb6\x49\x63\xb1\xe8\xf8\x6a\x82\xb2\xce\xd8\xd7\x74\xd6\xca\xf3\x41\xd7\xf5\x0b\x66\xf7\xd1\x32\x3a\xa9\xf5\x1b\x57\xe6\xce\xc6\xe9\x96\x83\x21\xc2\x58\xda\x2d\x07\x5a\xc1\x0a\xdb\x0c\xaf\xe2\xda\xdc\x87\x5e\x72\xd1\x95\xbd\x56\x00\x93\x65\xc1\x9c\x6d\x24\xe0\x95\x4f\x7e\xb6\x84\x37\x78\x97\x20\x77\x14\xdd\x56\x5a\xdf\x07\x72\x50\x9b\x5c\xaa\x6f\x40\xc8\x9c\x81\x77\xc1\x73\x43\x6b\xcb\xe0\xc6\xc8\x76\x83\xed\xcb\x06\xf7\xf3\xcf\xf6\xc7\xe6\x52\xbe\xb9\xbb\x6f\x6e\xd8\x76\xb5\x76\x9b\xb6\xfb\xc7\xe4\xbf\x00\x00\x00\xff\xff\x6b\xb3\x45\x70\xf6\x0e\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 3830, mode: os.FileMode(416), modTime: time.Unix(1461718221, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\x4e\xdc\x30\x10\xbd\xfb\x2b\x46\xcb\x05\xd0\x26\x01\x8a\x4a\xbb\x9c\x52\xa0\x6d\x54\x94\x95\xc8\x52\xc4\xa9\x72\x9c\x49\x62\xd5\x6b\xbb\xb6\x43\x58\x55\xfd\xf7\x8e\xb3\x8b\xb4\xa8\xc5\x39\x44\xe3\xf7\xe6\xcd\x9b\x19\x67\xc7\xec\xca\xd8\x8d\x93\x5d\x1f\xe0\xec\xe4\xf4\x3d\x7c\x31\xa6\x53\x08\x85\x16\x29\xe4\x4a\xc1\x04\x79\x70\xe8\xd1\x3d\x61\x93\x32\x76\x2b\x05\x6a\x8f\x0d\x0c\xba\x41\x07\xa1\x47\xc8\x2d\x17\xf4\xdb\x21\x73\xf8\x8e\xce\x4b\xa3\xe1\x2c\x3d\x81\xc3\x48\x98\xed\xa0\xd9\xd1\x25\xdb\x98\x01\xd6\x7c\x03\xda\x04\x18\x3c\x92\x80\xf4\xd0\x4a\x2a\x8a\xcf\x02\x6d\x00\xa9\x41\x98\xb5\x55\x92\x6b\x81\x30\xca\xd0\x4f\x45\x76\x12\x29\x7b\xdc\x09\x98\x3a\x70\xe2\x72\x62\x5b\x8a\xda\x7d\x16\xf0\xc0\x18\xd0\xe9\x43\xb0\x8b\x2c\x1b\xc7\x31\xe5\x93\xcb\xd4\xb8\x2e\x53\x5b\x96\xcf\x6e\x8b\xab\x9b\xb2\xba\x49\xc8\x29\x63\xf7\x5a\xa1\x8f\xbd\xfe\x1a\xa4\xa3\x06\xeb\x0d\x70\x4b\x3e\x04\xaf\xc9\x9d\xe2\x23\x18\x07\xbc\x73\x48\x58\x30\xd1\xe7\xe8\x64\x90\xba\x9b\x83\x37\x6d\x18\xb9\x43\xd6\x48\x1f\x9c\xac\x87\xf0\x6a\x40\x2f\xae\xa8\xd3\x7d\x02\x8d\x88\x6b\x98\xe5\x15\x14\xd5\x0c\x3e\xe5\x55\x51\xcd\xd9\x43\xb1\xfa\xba\xbc\x5f\xc1\x43\x7e\x77\x97\x97\xab\xe2\xa6\x82\xe5\x1d\x5c\x2d\xcb\xeb\x62\x55\x2c\x4b\x8a\x3e\x43\x5e\x3e\xc2\xb7\xa2\xbc\x9e\x03\xd2\x78\xa8\x08\x3e\x5b\x17\xbd\x93\x41\x19\x47\x17\x37\x55\x21\xbe\x2a\xde\x9a\xad\x19\x6f\x51\xc8\x56\x0a\xea\x48\x77\x03\xef\x10\x3a\xf3\x84\x4e\x53\x23\x60\xd1\xad\xa5\x8f\xcb\xf3\x64\xad\x61\x4a\xae\x65\xe0\x61\x8a\xff\x69\x27\x65\xc7\x19\x4b\xb9\x0a\x94\xcc\x03\xfe\x70\x66\x5c\xe8\xd0\x27\xa2\x97\xaa\x39\xc4\x27\xd4\x47\xbf\x69\x09\x35\x17\x3f\x3b\x67\x28\x3d\x11\x46\x19\xb7\x80\x83\xf6\x3c\x7e\x97\xec\xcf\xdb\xe9\xa6\x69\xde\xcc\x9e\x4e\xcc\x66\xa9\xf0\xb5\x1a\x10\x22\x73\x0b\x1f\x9c\x5f\x7c\xb8\xc0\x66\x8b\xf6\xc8\xc9\x73\x52\x73\x07\xff\xd5\x3a\xc0\x77\xf8\x31\x4a\x01\xbd\x28\xd7\x49\x9d\x04\x63\x17\x70\x7a\x66\x9f\xf7\xee\x6a\x13\x82\x59\xbf\x5c\x47\xdd\x06\xbd\x98\x14\xc7\x5e\x06\x4c\x3c\xbd\x2c\x5c\x00\xad\x80\xe0\xbf\x01\x00\x00\xff\xff\x08\x6a\x12\x52\x54\x03\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 852, mode: os.FileMode(416), modTime: time.Unix(1461396647, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\x55\xa0\x68\x81\x48\x5a\x7b\x8b\xa0\x48\x6d\x17\xae\x93\xb6\x46\x17\x76\x11\x7b\x1b\xe4\x54\x50\xd4\x58\x62\x4a\x89\x2c\x87\x8e\x6d\x04\xfe\xf7\x0e\x65\xc5\x6b\xa7\x5b\x14\xed\x21\x97\xcd\xc5\x22\xe7\x91\xef\xcd\x9b\xe1\x64\xf0\xe6\x7a\x3e\x59\xde\xff\x7a\x03\x95\xaf\xf5\x28\x1a\xbc\x49\x92\x68\x62\xec\xce\xa9\xb2\xf2\xd0\x7f\xdb\xbb\x84\x9f\x8c\x29\x35\xc2\xb4\x91\x29\x8c\xb5\x86\x36\x44\xe0\x90\xd0\x3d\x62\x91\x46\xd1\x7b\x25\xb1\x21\x2c\x60\xdd\x14\xe8\xc0\x57\x08\x63\x2b\x24\xff\x74\x91\x0b\xf8\x0d\x1d\x29\xd3\x40\x3f\x7d\x0b\x5f\x05\x40\xdc\x85\xe2\xaf\xbf\x8b\x76\x66\x0d\xb5\xd8\x41\x63\x3c\xac\x09\xf9\x02\x45\xb0\x52\x4c\x8a\x5b\x89\xd6\x83\x6a\x40\x9a\xda\x6a\x25\x1a\x89\xb0\x51\xbe\x6a\x49\xba\x2b\xd2\xe8\xbe\xbb\xc0\xe4\x5e\x30\x56\x30\xda\xf2\x6a\x75\x8a\x02\xe1\xa3\x08\xf8\xaf\xf2\xde\x5e\x65\xd9\x66\xb3\x49\x45\xab\x32\x35\xae\xcc\xf4\x01\x45\xd9\xfb\xe9\xe4\x66\xb6\xb8\x49\x58\x69\x14\x7d\x68\x34\x52\xc8\xf5\xcf\xb5\x72\x9c\x60\xbe\x03\x61\x59\x87\x14\x39\xab\xd3\x62\x03\xc6\x81\x28\x1d\x72\xcc\x9b\xa0\x73\xe3\x94\x57\x4d\x79\x01\x64\x56\x7e\x23\x1c\x46\x85\x22\xef\x54\xbe\xf6\x67\x06\x3d\xab\xe2\x4c\x4f\x01\x6c\x91\x68\x20\x1e\x2f\x60\xba\x88\xe1\x87\xf1\x62\xba\xb8\x88\xee\xa6\xcb\x9f\xe7\x1f\x96\x70\x37\xbe\xbd\x1d\xcf\x96\xd3\x9b\x05\xcc\x6f\x61\x32\x9f\x5d\x4f\x97\xd3\xf9\x8c\x57\x3f\xc2\x78\x76\x0f\xbf\x4c\x67\xd7\x17\x80\x6c\x0f\x93\xe0\xd6\xba\xa0\x9d\x05\xaa\x60\x5d\xa8\xd4\x02\xf1\x8c\x7c\x65\x0e\x62\xc8\xa2\x54\x2b\x25\x39\xa3\xa6\x5c\x8b\x12\xa1\x34\x8f\xe8\x1a\x4e\x04\x2c\xba\x5a\x51\x28\x1e\xb1\xb4\x22\xd2\xaa\x56\x5e\xf8\x76\xfd\xb7\x74\xd2\x28\x49\xb8\x8b\xba\x66\xaa\x50\x14\x23\xf6\x7c\xe0\x95\xd7\x38\xba\xc5\x47\x85\x1b\x86\x92\x1f\x64\x87\xad\x10\xd4\xaa\xf9\x83\x1d\xd6\xc3\x98\xfc\x8e\xed\xae\x10\x7d\x0c\x95\xc3\xd5\x30\x0e\xb5\x22\x2e\x56\x2d\xb6\xb2\x68\xd2\xdc\x18\xcf\x5e\x09\x1b\x16\xdc\x11\xd9\x71\x23\x7b\x97\xbe\x4b\x2f\x33\x49\xf4\x71\x2f\xad\x15\xa3\x88\x62\xc8\xfe\x95\x28\xa3\x90\x93\xcc\x5c\xab\x91\x4e\x8f\x91\x74\x8a\x7b\x90\x9c\xfc\xa8\x47\x3c\x88\x6d\x5a\xb6\x0f\x43\x58\x45\xad\x96\xb0\xc7\x6d\x94\x53\x16\x4c\xd4\xc2\x3d\x50\xd6\x4b\xfb\x69\xff\xf2\x79\xa3\x15\xf4\x40\xf1\x68\x90\x1d\x2e\x65\x8f\xb2\x83\x49\x83\xdc\x14\xfc\x00\xca\x84\xdb\x6b\x18\x97\xca\x8f\xad\x75\x42\x11\xde\x61\x1e\xb7\x32\x0a\xf5\x18\xe2\xd2\x34\xde\x19\xad\xd1\x0d\x63\xcd\x4e\x1e\x4c\xa5\x16\xd3\xa1\xa4\x16\x44\xc3\x38\x20\xf9\x35\xa0\xeb\x62\xe7\x51\x67\x36\xc7\xfd\x97\xe7\x74\x52\x17\x49\xaf\x7f\x12\x67\x44\xd5\x7b\x06\x78\xdc\xfa\x84\xcb\xed\xb9\xf6\x92\x72\xbd\xc6\x98\x6b\x6b\x0d\x29\x6f\xdc\xee\x0a\x9e\x9e\xac\xf0\xd5\x7e\xcf\xb9\xf5\x4e\x28\x32\xe6\x38\x2a\x39\x5b\x9c\xcb\x82\xe0\x08\xba\x24\x17\xee\xbf\x29\xcc\x47\x73\x8b\x0d\x74\x8e\x5c\x0d\xb2\xfc\xff\xb0\x0b\xcd\x79\x35\xc2\xe3\xef\xc1\xa2\x60\xb9\x43\x8b\xc2\x73\xf4\xd0\xbf\xfc\xc8\x0d\xf3\x9c\x1b\xff\x0f\x12\xbf\x89\x47\x4f\x4f\x87\x73\xa9\x57\x35\x72\x97\xd5\x36\x38\x73\x22\xe0\x93\x07\xbf\x3d\x4f\x4d\x7c\xb2\x4d\xd3\xf0\xce\xbe\xf8\x9e\xf5\x99\x61\xa0\xb1\x66\xbf\xff\xf2\x10\x1a\x1e\x69\xc3\x4f\x78\xbd\xfb\xfd\x89\x16\x5a\xd7\xb5\x70\xbb\xa0\x44\xbc\x6e\x89\x26\xda\x84\xff\x14\xaf\x50\x24\xd9\x32\x7d\x46\x65\x3a\x7e\x76\x1f\x2f\x87\xd7\xcb\x19\xf7\x72\x12\x85\x11\xd4\x4e\xa4\x76\x7a\xff\x15\x00\x00\xff\xff\xa8\xb3\x6b\x1b\x1b\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2075, mode: os.FileMode(416), modTime: time.Unix(1461397271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x5f\x6f\xdb\xb6\x17\x7d\xd7\xa7\xb8\x30\x8a\x5f\xe5\x56\x95\xdd\x3e\xfc\x30\xcc\xc8\x06\x2f\xc9\x3a\x63\x41\x32\xc4\xe9\x8a\x22\x2b\x02\x46\xba\xb6\x09\x48\xa4\x4a\x52\x71\x82\x21\xdf\x7d\x97\xa4\x64\x51\x76\xbc\x78\x5d\x1f\x96\x17\x5b\xe4\xb9\xe7\x9e\xfb\x57\xce\xe8\x55\x74\x2c\xab\x07\xc5\x97\x2b\x03\xef\xc6\x6f\xff\x0f\xef\xa5\x5c\x16\x08\x33\x91\xa5\x30\x2d\x0a\x70\x57\x1a\x14\x6a\x54\x77\x98\xa7\x51\x74\xc6\x33\x14\x1a\x73\xa8\x45\x8e\x0a\xcc\x0a\x61\x5a\xb1\x8c\x3e\x9a\x9b\x04\x7e\x47\xa5\xb9\x14\xf0\x2e\x1d\x43\x6c\x01\x83\xe6\x6a\x30\x9c\x44\x0f\xb2\x86\x92\x3d\x80\x90\x06\x6a\x8d\x44\xc0\x35\x2c\x38\x39\xc5\xfb\x0c\x2b\x03\x5c\x40\x26\xcb\xaa\xe0\x4c\x64\x08\x6b\x6e\x56\xce\x49\x43\x91\x46\x9f\x1a\x02\x79\x6b\x18\x61\x19\xa1\x2b\x7a\x5a\x84\x28\x60\x26\x8a\x80\xfe\x56\xc6\x54\xdf\x8f\x46\xeb\xf5\x3a\x65\x4e\x65\x2a\xd5\x72\x54\x78\x94\x1e\x9d\xcd\x8e\x4f\xcf\xe7\xa7\x6f\x48\x69\x14\x7d\x10\x05\x6a\x1b\xeb\x97\x9a\x2b\x0a\xf0\xf6\x01\x58\x45\x3a\x32\x76\x4b\xea\x0a\xb6\x06\xa9\x80\x2d\x15\xd2\x9d\x91\x56\xe7\x5a\x71\xc3\xc5\x32\x01\x2d\x17\x66\xcd\x14\x46\x39\xd7\x46\xf1\xdb\xda\xf4\x12\xd4\xaa\xa2\x48\x43\x00\xa5\x88\x09\x18\x4c\xe7\x30\x9b\x0f\xe0\xa7\xe9\x7c\x36\x4f\xa2\x8f\xb3\xab\x5f\x2e\x3e\x5c\xc1\xc7\xe9\xe5\xe5\xf4\xfc\x6a\x76\x3a\x87\x8b\x4b\x38\xbe\x38\x3f\x99\x5d\xcd\x2e\xce\xe9\xe9\x67\x98\x9e\x7f\x82\x5f\x67\xe7\x27\x09\x20\xa5\x87\x9c\xe0\x7d\xa5\xac\x76\x12\xc8\x6d\xea\x6c\xa5\xe6\x88\x3d\xe7\x0b\xe9\xc5\xe8\x0a\x33\xbe\xe0\x19\x45\x24\x96\x35\x5b\x22\x2c\xe5\x1d\x2a\x41\x81\x40\x85\xaa\xe4\xda\x16\x4f\x93\xb4\x3c\x2a\x78\xc9\x0d\x33\xee\x79\x27\x9c\x34\x7a\x35\x8a\xa2\x3b\xa6\x60\xc9\xcd\xb4\xaa\x14\xe3\x1a\x3f\xe2\xed\x91\xe5\x2d\x98\x4a\x4b\x99\xd7\x05\xc6\x83\xfe\xf5\x20\x81\xeb\xcf\xd4\x08\xd1\x68\x04\xef\xd1\x50\x01\x15\x56\x52\x73\x23\x15\x75\x05\x2b\x49\xa9\x92\xa5\x73\xb4\xa8\xa9\x05\x2b\x66\x56\x69\xb4\xa8\x45\x66\x75\xc0\x12\xcd\x19\xd3\xe6\x37\x3a\x3d\x2d\xb0\x44\x61\x62\x8b\x18\xc2\x9f\x54\x70\x2b\x46\x17\x4c\xaf\x66\x24\xf6\x1e\x8e\xbc\x31\x1d\x18\x77\x70\xb1\x88\x07\x23\xdb\x84\x00\x7c\x01\x71\x80\xfc\x01\xc6\x9e\x01\x48\x8d\xa9\x95\xf0\x96\xba\xbe\xb5\xe5\x12\xcb\x00\xfb\xfa\x6d\xd2\xd0\xa2\x58\x92\x63\xcb\xf6\x18\xf5\xec\x26\xd1\x63\x2f\xbc\x3b\x8e\x6b\xd0\x75\x59\x32\x0a\xb1\x1f\x5d\x8e\x3a\x53\xbc\xb2\xa1\xf5\x83\x9c\x7b\x78\x6c\x01\x5d\x70\x54\xe5\xba\x30\x14\x98\x3d\x9e\x34\x87\x02\xd7\x05\x17\xd8\xc6\x6c\xaf\x52\xde\xc6\xfb\x87\xe8\x02\xee\x01\x7b\x21\x07\xac\x41\xd0\xe3\xa4\xc7\xbd\x09\xd5\x72\x79\x9b\x26\x09\x44\xf6\xdd\x2e\x5b\x03\xe9\xf1\x11\x6c\x2b\x61\x1e\xb5\x49\x19\xbf\x43\x3b\xd4\x86\x97\xa8\x0d\x2b\x2b\x60\xda\xb7\x2d\x66\x52\xe4\xba\x4b\x5f\x2d\xf8\x3d\x50\xe7\x64\xab\xa4\xa5\xb2\xc7\xab\xba\x64\xe2\xcd\x42\x71\x14\x79\xf1\x00\x77\x7e\x17\x05\xb9\x6d\xaf\xae\x5a\x0f\xf1\xc6\x97\x8f\xa0\x21\xa3\xc8\xe1\x84\x19\xa4\xf6\x52\x9a\x12\x60\x42\xdc\x2b\x78\x3b\x1e\x8f\x87\xa9\x91\x73\x1f\xda\xd0\x05\xd0\xef\xf4\x94\x14\x1b\x25\x8b\x02\x55\x3c\x28\x68\xf0\x2f\x6d\xa3\x53\xff\xb7\x5a\xe2\x17\x9a\x96\x17\x26\x2f\xec\x9a\xf2\xce\xdd\xd7\x94\xea\x4f\x9d\xca\x2a\x3e\x72\xb3\x31\x18\x52\x12\xb3\x8c\x26\x3c\x76\x19\xde\xd8\x53\xee\x2a\x9a\x4d\x24\x5b\x4f\x95\x6e\x66\x89\xa3\xb6\xfd\xaf\xa4\x35\x3b\x6b\x9d\x5f\x36\x06\x9d\xe5\xe4\xd1\xce\x62\xc7\x79\x80\x49\x53\x67\xdf\x8f\x84\x20\x3f\xd7\x9f\x27\x5e\x19\x2d\x99\xd8\x5e\x70\xbb\x1f\xb7\x2d\xbc\x8d\x9d\x10\xdf\x1d\xee\xf2\x9a\x7f\x4e\xfd\xd0\x78\x88\xa3\x4c\xab\x5a\xaf\x6c\xbf\x82\xd5\x10\x87\x58\x9e\x27\x7b\x97\xc0\x70\xe8\x59\x1e\xc3\x49\x76\x84\xbe\xe9\xc2\x38\x1d\xb1\x25\xb3\x3b\xa7\x55\x68\xdf\x46\xe4\x81\xe4\xf1\x7c\xd2\x9d\xb8\xb5\x74\xe4\x90\x9e\xc8\x25\xed\xd9\x6a\xdb\xb9\xdf\x5b\xef\xe4\x45\x21\x33\xb7\x5b\xc3\xf1\xae\x24\xf9\xd9\xdc\xa4\x1a\x99\xca\x56\xf1\xf0\xfa\xa5\xbd\x7a\xe9\xb2\x1c\x54\xda\xa5\xb1\x92\x93\x3d\x8d\x73\xd3\xec\x9c\x1f\xed\xc3\xd1\x00\x5e\x3b\xf4\xe1\xcd\xd4\x54\xea\x89\x6c\xb7\x58\x07\xf1\x3d\xb4\x2b\x81\x28\xc4\x8d\xdf\x7e\xfa\x6b\x25\x58\x8e\x26\x91\xdb\xed\xec\x0e\xf7\x34\xf4\xae\x98\xac\x90\xf4\xab\xe5\xdf\xca\xf1\x2c\x5f\x21\x68\xef\x84\xed\x31\xea\xcd\x58\xeb\xed\x9f\x4c\x99\xb5\x72\xbf\xc2\xfa\x93\xd6\x1e\x4f\x02\x68\xb7\x6b\xb7\xb1\x5f\x6a\xba\x48\x37\xf7\xa1\x91\x7d\x55\xec\xc1\x07\xef\xb4\x6e\xa8\x5d\x0c\xe1\x58\xdb\x83\xb8\x95\x93\x74\x22\x12\x47\x9d\xec\xbc\x03\xf7\xcc\xb6\xe3\x7d\x6a\xba\x9f\xe3\x6f\x66\xa3\x37\xf9\xbd\xa4\x85\x89\x72\xb7\x61\x9e\xfe\xee\x2d\x12\x98\x34\x59\x6a\xdf\xd6\xcd\x69\xfb\x53\xe0\xa8\x15\x71\xd8\x52\xa1\x8c\xf8\xb0\xbe\xf9\x4a\xe9\xda\x6c\x2f\xd4\x5e\x36\xfb\xe7\xbf\xb7\x69\xbc\xbc\x9b\x1c\xe9\x5f\x82\x62\x6b\xb8\xe9\x63\xf0\x3f\x0f\x68\xce\xec\xd7\xc3\xa5\x35\xa4\xb6\x58\xee\x55\xcf\x17\x5d\xd1\xf5\xb3\x6b\xa7\x55\xc6\x17\x8b\x6f\x2c\x8b\x18\x83\xf9\xdb\x59\x32\x1b\xb1\xc7\xb2\xb4\x89\x0c\x34\x67\xcd\xc9\x4a\x21\xcb\xc3\x4d\x13\x36\x78\x0f\x94\x36\x4f\xdb\xab\xe0\x19\xd0\x41\x73\xd2\x5f\x66\x5b\x8c\x2b\x5e\xe4\x0a\x45\xb7\xda\x0e\x0d\x6b\x63\x4a\x8b\x29\x58\x1c\x8f\x4f\xe7\xa8\x57\x50\x5b\x87\x13\x5f\xf4\xd6\xef\xf6\xc2\x0d\x20\xee\x3d\xac\x8c\xde\xde\xbe\xf6\xb0\x59\x23\x3b\x58\xd2\xb4\x7f\xff\x5a\xc4\xee\xca\xdd\x3e\x3f\x28\xb5\x8f\xcf\x8a\x6f\x72\xa6\x0f\x4a\xf0\xd3\xa6\xfd\x04\x6f\x6d\xe6\x06\xdc\xed\xb7\xbf\x02\x00\x00\xff\xff\x62\x4d\xb8\x60\x73\x10\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 4211, mode: os.FileMode(416), modTime: time.Unix(1461714434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
