// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/repos.html
// assets/review.html
// assets/reviews.css
// assets/reviews.html
// assets/reviews.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(416), modTime: time.Unix(1461397275, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\xd5\x4b\x0b\x58\xd2\xda\x0b\xe4\xb0\xb5\x5c\xb8\x49\xba\x35\xba\xb0\x8b\xd8\xdb\x20\xa7\x82\xa2\xc6\x12\x53\x8a\x54\x39\x74\x64\x63\x91\x7f\xef\x50\x56\x12\x3b\x45\xb1\x48\x7d\x91\x87\xf3\x34\xf3\xe6\xcd\xa3\xa6\xef\xae\x56\x97\x9b\xbb\xdf\xaf\xa1\xf6\x8d\x9e\x45\xd3\x77\x49\x12\x5d\xda\xf6\xe0\x54\x55\x7b\x98\xbc\x1f\x5f\xc0\x27\x6b\x2b\x8d\xb0\x30\x32\x85\xb9\xd6\xd0\xa7\x08\x1c\x12\xba\x07\x2c\xd3\x28\xfa\xac\x24\x1a\xc2\x12\x76\xa6\x44\x07\xbe\x46\x98\xb7\x42\xf2\x63\xc8\x8c\xe0\x0f\x74\xa4\xac\x81\x49\xfa\x1e\xbe\x0f\x80\x78\x48\xc5\x3f\xfc\x18\x1d\xec\x0e\x1a\x71\x00\x63\x3d\xec\x08\xb9\x80\x22\xd8\x2a\x6e\x8a\x7b\x89\xad\x07\x65\x40\xda\xa6\xd5\x4a\x18\x89\xd0\x29\x5f\xf7\x4d\x86\x12\x69\x74\x37\x14\xb0\x85\x17\x8c\x15\x8c\x6e\x39\xda\x9e\xa2\x40\xf8\x28\x02\xfe\xd5\xde\xb7\x1f\xb3\xac\xeb\xba\x54\xf4\x2c\x53\xeb\xaa\x4c\x1f\x51\x94\x7d\x5e\x5c\x5e\x2f\xd7\xd7\x09\x33\x8d\xa2\x2f\x46\x23\x85\x59\xff\xde\x29\xc7\x03\x16\x07\x10\x2d\xf3\x90\xa2\x60\x76\x5a\x74\x60\x1d\x88\xca\x21\xe7\xbc\x0d\x3c\x3b\xa7\xbc\x32\xd5\x08\xc8\x6e\x7d\x27\x1c\x46\xa5\x22\xef\x54\xb1\xf3\x67\x02\x3d\xb1\xe2\x49\x4f\x01\x2c\x91\x30\x10\xcf\xd7\xb0\x58\xc7\xf0\xf3\x7c\xbd\x58\x8f\xa2\xdb\xc5\xe6\xd7\xd5\x97\x0d\xdc\xce\x6f\x6e\xe6\xcb\xcd\xe2\x7a\x0d\xab\x1b\xb8\x5c\x2d\xaf\x16\x9b\xc5\x6a\xc9\xd1\x2f\x30\x5f\xde\xc1\x6f\x8b\xe5\xd5\x08\x90\xe5\xe1\x26\xb8\x6f\x5d\xe0\xce\x04\x55\x90\x2e\x6c\x6a\x8d\x78\xd6\x7c\x6b\x8f\x64\xa8\x45\xa9\xb6\x4a\xf2\x44\xa6\xda\x89\x0a\xa1\xb2\x0f\xe8\x0c\x0f\x02\x2d\xba\x46\x51\x58\x1e\x31\xb5\x32\xd2\xaa\x51\x5e\xf8\x3e\xfe\xd7\x38\x69\x94\x24\xec\xa2\xc1\x4c\x35\x8a\x72\xc6\x9a\x4f\xbd\xf2\x1a\x67\x37\xd8\x5a\x52\xde\xba\x03\xc3\xc9\x4f\xb3\xe3\x71\x00\x68\x65\xfe\x62\x95\x75\x1e\x93\x3f\xb0\xe4\x35\xa2\x8f\xa1\x76\xb8\xcd\xe3\xb0\x2f\xe2\x85\x35\x62\x2f\x4b\x93\x16\xd6\x7a\xd6\x4b\xb4\x21\x60\x57\x64\xcf\x07\xd9\x87\xf4\x43\x7a\x91\x49\xa2\x97\xb3\xb4\x51\x8c\x22\x8a\x21\xfb\x66\xa3\x8c\xc2\x5c\x32\x73\xf8\xa0\xb0\xa3\xd3\xd7\x1a\xf4\x02\x8c\x68\x30\x8f\x43\xae\xb5\x8e\xdf\x92\xd6\x78\x34\x3e\x8f\x3b\x55\xfa\x3a\x2f\xf9\x35\x89\x49\x1f\x8c\xd8\x0a\xec\x03\xa1\x13\x92\x42\x63\x3e\x8e\xfb\x32\x24\x9d\x62\x3b\x93\x93\x2f\x63\x89\x7b\xb1\x4f\xab\xfe\x8e\x89\x56\x51\x3f\x52\x38\x63\x47\x16\x94\x85\x7d\x68\xe1\xee\x29\x1b\xa7\x93\x74\x72\xf1\x74\xd0\xcf\x75\x4f\xf1\x6c\x9a\x1d\x8b\xb2\xdc\xd9\x51\xef\x69\x61\x4b\xbe\x4b\x55\xc2\x4e\xcd\xe3\x4a\xf9\x79\xdb\x3a\xa1\x08\x6f\xb1\x38\xd2\x28\xd5\x43\xc8\x07\xfe\xce\x6a\x8d\x2e\x8f\x35\x2f\xa4\xdf\x4f\x8f\x18\x30\x52\x0b\xa2\x3c\x0e\x38\xbe\x56\xe8\x86\xdc\x79\xd6\xd9\xee\xf9\xfc\xf5\x7b\x3a\x69\xca\x64\x3c\x39\xc9\x33\xa2\x1e\x3f\x01\x3c\xee\x7d\xc2\xbe\xf1\x6c\x22\x49\x85\xde\x61\x3c\xfb\xa4\x7c\xf2\x44\x18\x98\x31\x4f\x35\x3e\x29\x9f\x71\xfd\x67\x16\x67\xc1\x39\x25\x08\x5a\xa0\x4b\x0a\xe1\xde\xc6\xae\x78\xb1\xa9\x42\xfa\x38\xcd\x8a\xff\xd3\x5d\x68\x9e\xc9\x08\x8f\x7f\x06\x79\x82\xd8\x0e\x5b\x14\xec\x15\x7e\xf6\xdf\x09\x77\xd2\xe5\x6d\x0c\xc5\x7f\xd8\x35\x5c\xba\xef\x7e\x0a\x75\xf3\xaf\x5f\xc3\x23\x55\xe5\xe3\x63\x3c\x1b\x82\xe0\xde\xc7\xc7\x69\x26\xbe\x3d\xcf\xf3\xdf\xe1\xcf\x6b\xeb\xbe\xee\xfc\xda\x87\xc1\x80\xbd\x1f\xfb\xcf\xc0\x3f\x01\x00\x00\xff\xff\x70\x50\xec\xfd\x64\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1636, mode: os.FileMode(416), modTime: time.Unix(1461393701, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xcc\xea\xd4\x02\x91\x14\x7b\x81\x1c\x52\xc7\x80\x1b\xa7\xad\xd1\x85\x5d\xd8\xde\x06\x39\x52\xd4\x58\x62\x4a\x8b\x5a\x0e\x1d\xd9\x58\xe4\xbf\x77\x48\x2b\x89\xed\xdd\x76\xd1\x8f\xc4\x17\x99\x9c\xa7\x99\xf7\xde\x0c\xa9\xc1\xbb\xf1\xec\x7a\x79\xf7\xdb\x0d\x54\x6e\xad\x87\xd1\xe0\x5d\x92\x44\xd7\xa6\xd9\x59\x55\x56\x0e\xfa\xe7\xbd\x0b\xf8\xd9\x98\x52\x23\x4c\x6a\x99\xc2\x48\x6b\x08\x21\x02\x8b\x84\xf6\x01\x8b\x34\x8a\x3e\x28\x89\x35\x61\x01\x9b\xba\x40\x0b\xae\x42\x18\x35\x42\xf2\xa3\x8b\x9c\xc1\xef\x68\x49\x99\x1a\xfa\xe9\x39\x7c\xe7\x01\x71\x17\x8a\xbf\xff\x21\xda\x99\x0d\xac\xc5\x0e\x6a\xe3\x60\x43\xc8\x09\x14\xc1\x4a\x71\x51\xdc\x4a\x6c\x1c\xa8\x1a\xa4\x59\x37\x5a\x89\x5a\x22\xb4\xca\x55\xa1\x48\x97\x22\x8d\xee\xba\x04\x26\x77\x82\xb1\x82\xd1\x0d\xaf\x56\x87\x28\x10\x2e\x8a\x80\x7f\x95\x73\xcd\x65\x96\xb5\x6d\x9b\x8a\xc0\x32\x35\xb6\xcc\xf4\x1e\x45\xd9\x87\xc9\xf5\xcd\x74\x71\x93\x30\xd3\x28\xfa\x58\x6b\x24\xaf\xf5\xd3\x46\x59\x16\x98\xef\x40\x34\xcc\x43\x8a\x9c\xd9\x69\xd1\x82\xb1\x20\x4a\x8b\x1c\x73\xc6\xf3\x6c\xad\x72\xaa\x2e\xcf\x80\xcc\xca\xb5\xc2\x62\x54\x28\x72\x56\xe5\x1b\x77\x64\xd0\x13\x2b\x56\x7a\x08\x60\x8b\x44\x0d\xf1\x68\x01\x93\x45\x0c\x3f\x8e\x16\x93\xc5\x59\x74\x3b\x59\xfe\x32\xfb\xb8\x84\xdb\xd1\x7c\x3e\x9a\x2e\x27\x37\x0b\x98\xcd\xe1\x7a\x36\x1d\x4f\x96\x93\xd9\x94\x57\x3f\xc1\x68\x7a\x07\xbf\x4e\xa6\xe3\x33\x40\xb6\x87\x8b\xe0\xb6\xb1\x9e\x3b\x13\x54\xde\x3a\xdf\xa9\x05\xe2\x51\xf1\x95\xd9\x93\xa1\x06\xa5\x5a\x29\xc9\x8a\xea\x72\x23\x4a\x84\xd2\x3c\xa0\xad\x59\x08\x34\x68\xd7\x8a\x7c\xf3\x88\xa9\x15\x91\x56\x6b\xe5\x84\x0b\xeb\x2f\xe4\xa4\x51\x92\xf0\x14\x75\xc3\x54\xa1\x28\x86\xec\xf9\xc0\x29\xa7\x71\x38\xc7\x07\x85\x2d\x8c\x91\x9b\xa4\x69\x90\xed\x77\x7d\x5c\xab\xfa\x0f\x36\x59\x5f\xc5\xe4\x76\xec\x78\x85\xe8\x62\xa8\x2c\xae\xae\x62\xdf\x2e\xe2\x7e\xad\xc5\x56\x16\x75\x9a\x1b\xe3\xd8\x2e\xd1\xf8\x05\x0f\x45\xf6\xbc\x91\xbd\x4f\xdf\xa7\x17\x99\x24\x7a\xd9\x4b\xd7\x8a\x51\x44\x31\x64\xdf\x2c\x94\x91\x97\x25\x33\x1b\x68\xd2\xe1\x6b\x24\xad\xe2\x31\x24\x2b\x5f\xf8\x88\x7b\xb1\x4d\xcb\x70\x36\x44\xa3\x28\x70\xf1\x7b\x3c\x49\x39\x65\xde\x47\x2d\xec\x3d\x65\xbd\xb4\x9f\xf6\x2f\x9e\x36\x02\xa1\x7b\x8a\x87\x83\x6c\x9f\x94\x6d\xca\xf6\x3e\x0d\x72\x53\xf0\x19\x28\x13\x9e\xb0\xab\xb8\x54\x6e\xd4\x34\x56\x28\xc2\x5b\xcc\xe3\x40\xa3\x50\x0f\x3e\x2e\x4d\xed\xac\xd1\x1a\x2d\xc3\xd0\xed\x6d\x0d\x88\x0e\x23\xb5\x20\xba\x8a\x3d\x8e\x8f\x03\xda\x2e\x76\x1c\xb5\xa6\x7d\xde\x3f\x7d\x4f\x27\xeb\x22\xe9\xf5\x0f\xe2\x8c\xa8\x7a\x4f\x00\x87\x5b\x97\x70\xbf\x1d\x37\x5f\x52\xae\x37\x18\x73\x73\x1b\x43\xca\x19\xbb\xbb\x84\xcf\x9f\x1b\xe1\xaa\xc7\x47\x56\xd6\x3b\x28\x91\x71\x8d\x67\x26\x47\x8b\x63\x5a\xe0\xfd\x40\x9b\xe4\xc2\xfe\x33\x86\x79\x18\x31\x3f\xaa\x9e\x43\xb1\x9f\xb3\xd4\x76\x7b\x9e\x4f\xfe\x2f\xe8\xfc\x3d\x87\xaf\x50\xf8\xb4\x41\x62\x6b\x2e\xff\xba\xdc\xd7\xd5\x9c\x1f\xa5\x3a\x14\x10\x32\x3e\x3d\xd1\x3e\x3e\xbe\x81\x8a\x70\x56\xe7\xb8\x7a\x05\x19\x3e\x35\x67\x7e\x03\x19\x4b\x61\xf9\x84\xbc\x8a\x0c\x17\x52\xbf\x8d\x8c\x31\xee\x2f\x0b\x3f\xd9\xff\x4d\xc7\x21\xa2\xe0\xac\xf1\xf0\x4b\x65\xc5\x4b\x35\x7f\x66\x8e\x2b\xfc\x3f\x0a\x4f\x4f\x2e\x7f\xaa\x86\x03\x69\x0a\x0c\x5f\x20\xa6\xa6\x56\xab\x40\x8d\x9f\x9e\x83\x0f\xf1\x95\xe9\x61\xdf\xa4\xf2\xfc\xb7\xfb\x73\x7a\x81\x9f\xde\xf3\xa7\xb7\xb1\xbf\x86\xc3\xad\x1c\x3e\x62\x7f\x06\x00\x00\xff\xff\x19\xdd\xe2\xec\x22\x09\x00\x00")

func assetsReviewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewHtml,
		"assets/review.html",
	)
}

func assetsReviewHtml() (*asset, error) {
	bytes, err := assetsReviewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/review.html", size: 2338, mode: os.FileMode(416), modTime: time.Unix(1461396469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\x4e\xdc\x30\x10\xbd\xfb\x2b\x46\xcb\x05\xd0\x26\x01\x8a\x4a\xbb\x9c\x52\xa0\x6d\x54\x94\x95\xc8\x52\xc4\xa9\x72\x9c\x49\x62\xd5\x6b\xbb\xb6\x43\x58\x55\xfd\xf7\x8e\xb3\x8b\xb4\xa8\xc5\x39\x44\xe3\xf7\xe6\xcd\x9b\x19\x67\xc7\xec\xca\xd8\x8d\x93\x5d\x1f\xe0\xec\xe4\xf4\x3d\x7c\x31\xa6\x53\x08\x85\x16\x29\xe4\x4a\xc1\x04\x79\x70\xe8\xd1\x3d\x61\x93\x32\x76\x2b\x05\x6a\x8f\x0d\x0c\xba\x41\x07\xa1\x47\xc8\x2d\x17\xf4\xdb\x21\x73\xf8\x8e\xce\x4b\xa3\xe1\x2c\x3d\x81\xc3\x48\x98\xed\xa0\xd9\xd1\x25\xdb\x98\x01\xd6\x7c\x03\xda\x04\x18\x3c\x92\x80\xf4\xd0\x4a\x2a\x8a\xcf\x02\x6d\x00\xa9\x41\x98\xb5\x55\x92\x6b\x81\x30\xca\xd0\x4f\x45\x76\x12\x29\x7b\xdc\x09\x98\x3a\x70\xe2\x72\x62\x5b\x8a\xda\x7d\x16\xf0\xc0\x18\xd0\xe9\x43\xb0\x8b\x2c\x1b\xc7\x31\xe5\x93\xcb\xd4\xb8\x2e\x53\x5b\x96\xcf\x6e\x8b\xab\x9b\xb2\xba\x49\xc8\x29\x63\xf7\x5a\xa1\x8f\xbd\xfe\x1a\xa4\xa3\x06\xeb\x0d\x70\x4b\x3e\x04\xaf\xc9\x9d\xe2\x23\x18\x07\xbc\x73\x48\x58\x30\xd1\xe7\xe8\x64\x90\xba\x9b\x83\x37\x6d\x18\xb9\x43\xd6\x48\x1f\x9c\xac\x87\xf0\x6a\x40\x2f\xae\xa8\xd3\x7d\x02\x8d\x88\x6b\x98\xe5\x15\x14\xd5\x0c\x3e\xe5\x55\x51\xcd\xd9\x43\xb1\xfa\xba\xbc\x5f\xc1\x43\x7e\x77\x97\x97\xab\xe2\xa6\x82\xe5\x1d\x5c\x2d\xcb\xeb\x62\x55\x2c\x4b\x8a\x3e\x43\x5e\x3e\xc2\xb7\xa2\xbc\x9e\x03\xd2\x78\xa8\x08\x3e\x5b\x17\xbd\x93\x41\x19\x47\x17\x37\x55\x21\xbe\x2a\xde\x9a\xad\x19\x6f\x51\xc8\x56\x0a\xea\x48\x77\x03\xef\x10\x3a\xf3\x84\x4e\x53\x23\x60\xd1\xad\xa5\x8f\xcb\xf3\x64\xad\x61\x4a\xae\x65\xe0\x61\x8a\xff\x69\x27\x65\xc7\x19\x4b\xb9\x0a\x94\xcc\x03\xfe\x70\x66\x5c\xe8\xd0\x27\xa2\x97\xaa\x39\xc4\x27\xd4\x47\xbf\x69\x09\x35\x17\x3f\x3b\x67\x28\x3d\x11\x46\x19\xb7\x80\x83\xf6\x3c\x7e\x97\xec\xcf\xdb\xe9\xa6\x69\xde\xcc\x9e\x4e\xcc\x66\xa9\xf0\xb5\x1a\x10\x22\x73\x0b\x1f\x9c\x5f\x7c\xb8\xc0\x66\x8b\xf6\xc8\xc9\x73\x52\x73\x07\xff\xd5\x3a\xc0\x77\xf8\x31\x4a\x01\xbd\x28\xd7\x49\x9d\x04\x63\x17\x70\x7a\x66\x9f\xf7\xee\x6a\x13\x82\x59\xbf\x5c\x47\xdd\x06\xbd\x98\x14\xc7\x5e\x06\x4c\x3c\xbd\x2c\x5c\x00\xad\x80\xe0\xbf\x01\x00\x00\xff\xff\x08\x6a\x12\x52\x54\x03\x00\x00")

func assetsReviewsCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsCss,
		"assets/reviews.css",
	)
}

func assetsReviewsCss() (*asset, error) {
	bytes, err := assetsReviewsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.css", size: 852, mode: os.FileMode(416), modTime: time.Unix(1461396647, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x55\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x66\x55\xa0\x68\x81\x48\x5a\x7b\x8b\xa0\x48\x6d\x17\xae\x93\xb6\x46\x17\x76\x11\x7b\x1b\xe4\x54\x50\xd4\x58\x62\x4a\x89\x2c\x87\x8e\x6d\x04\xfe\xf7\x0e\x65\xc5\x6b\xa7\x5b\x14\xed\x21\x97\xcd\xc5\x22\xe7\x91\xef\xcd\x9b\xe1\x64\xf0\xe6\x7a\x3e\x59\xde\xff\x7a\x03\x95\xaf\xf5\x28\x1a\xbc\x49\x92\x68\x62\xec\xce\xa9\xb2\xf2\xd0\x7f\xdb\xbb\x84\x9f\x8c\x29\x35\xc2\xb4\x91\x29\x8c\xb5\x86\x36\x44\xe0\x90\xd0\x3d\x62\x91\x46\xd1\x7b\x25\xb1\x21\x2c\x60\xdd\x14\xe8\xc0\x57\x08\x63\x2b\x24\xff\x74\x91\x0b\xf8\x0d\x1d\x29\xd3\x40\x3f\x7d\x0b\x5f\x05\x40\xdc\x85\xe2\xaf\xbf\x8b\x76\x66\x0d\xb5\xd8\x41\x63\x3c\xac\x09\xf9\x02\x45\xb0\x52\x4c\x8a\x5b\x89\xd6\x83\x6a\x40\x9a\xda\x6a\x25\x1a\x89\xb0\x51\xbe\x6a\x49\xba\x2b\xd2\xe8\xbe\xbb\xc0\xe4\x5e\x30\x56\x30\xda\xf2\x6a\x75\x8a\x02\xe1\xa3\x08\xf8\xaf\xf2\xde\x5e\x65\xd9\x66\xb3\x49\x45\xab\x32\x35\xae\xcc\xf4\x01\x45\xd9\xfb\xe9\xe4\x66\xb6\xb8\x49\x58\x69\x14\x7d\x68\x34\x52\xc8\xf5\xcf\xb5\x72\x9c\x60\xbe\x03\x61\x59\x87\x14\x39\xab\xd3\x62\x03\xc6\x81\x28\x1d\x72\xcc\x9b\xa0\x73\xe3\x94\x57\x4d\x79\x01\x64\x56\x7e\x23\x1c\x46\x85\x22\xef\x54\xbe\xf6\x67\x06\x3d\xab\xe2\x4c\x4f\x01\x6c\x91\x68\x20\x1e\x2f\x60\xba\x88\xe1\x87\xf1\x62\xba\xb8\x88\xee\xa6\xcb\x9f\xe7\x1f\x96\x70\x37\xbe\xbd\x1d\xcf\x96\xd3\x9b\x05\xcc\x6f\x61\x32\x9f\x5d\x4f\x97\xd3\xf9\x8c\x57\x3f\xc2\x78\x76\x0f\xbf\x4c\x67\xd7\x17\x80\x6c\x0f\x93\xe0\xd6\xba\xa0\x9d\x05\xaa\x60\x5d\xa8\xd4\x02\xf1\x8c\x7c\x65\x0e\x62\xc8\xa2\x54\x2b\x25\x39\xa3\xa6\x5c\x8b\x12\xa1\x34\x8f\xe8\x1a\x4e\x04\x2c\xba\x5a\x51\x28\x1e\xb1\xb4\x22\xd2\xaa\x56\x5e\xf8\x76\xfd\xb7\x74\xd2\x28\x49\xb8\x8b\xba\x66\xaa\x50\x14\x23\xf6\x7c\xe0\x95\xd7\x38\xba\xc5\x47\x85\x1b\x86\x92\x1f\x64\x87\xad\x10\xd4\xaa\xf9\x83\x1d\xd6\xc3\x98\xfc\x8e\xed\xae\x10\x7d\x0c\x95\xc3\xd5\x30\x0e\xb5\x22\x2e\x56\x2d\xb6\xb2\x68\xd2\xdc\x18\xcf\x5e\x09\x1b\x16\xdc\x11\xd9\x71\x23\x7b\x97\xbe\x4b\x2f\x33\x49\xf4\x71\x2f\xad\x15\xa3\x88\x62\xc8\xfe\x95\x28\xa3\x90\x93\xcc\x5c\xab\x91\x4e\x8f\x91\x74\x8a\x7b\x90\x9c\xfc\xa8\x47\x3c\x88\x6d\x5a\xb6\x0f\x43\x58\x45\xad\x96\xb0\xc7\x6d\x94\x53\x16\x4c\xd4\xc2\x3d\x50\xd6\x4b\xfb\x69\xff\xf2\x79\xa3\x15\xf4\x40\xf1\x68\x90\x1d\x2e\x65\x8f\xb2\x83\x49\x83\xdc\x14\xfc\x00\xca\x84\xdb\x6b\x18\x97\xca\x8f\xad\x75\x42\x11\xde\x61\x1e\xb7\x32\x0a\xf5\x18\xe2\xd2\x34\xde\x19\xad\xd1\x0d\x63\xcd\x4e\x1e\x4c\xa5\x16\xd3\xa1\xa4\x16\x44\xc3\x38\x20\xf9\x35\xa0\xeb\x62\xe7\x51\x67\x36\xc7\xfd\x97\xe7\x74\x52\x17\x49\xaf\x7f\x12\x67\x44\xd5\x7b\x06\x78\xdc\xfa\x84\xcb\xed\xb9\xf6\x92\x72\xbd\xc6\x98\x6b\x6b\x0d\x29\x6f\xdc\xee\x0a\x9e\x9e\xac\xf0\xd5\x7e\xcf\xb9\xf5\x4e\x28\x32\xe6\x38\x2a\x39\x5b\x9c\xcb\x82\xe0\x08\xba\x24\x17\xee\xbf\x29\xcc\x47\x73\x8b\x0d\x74\x8e\x5c\x0d\xb2\xfc\xff\xb0\x0b\xcd\x79\x35\xc2\xe3\xef\xc1\xa2\x60\xb9\x43\x8b\xc2\x73\xf4\xd0\xbf\xfc\xc8\x0d\xf3\x9c\x1b\xff\x0f\x12\xbf\x89\x47\x4f\x4f\x87\x73\xa9\x57\x35\x72\x97\xd5\x36\x38\x73\x22\xe0\x93\x07\xbf\x3d\x4f\x4d\x7c\xb2\x4d\xd3\xf0\xce\xbe\xf8\x9e\xf5\x99\x61\xa0\xb1\x66\xbf\xff\xf2\x10\x1a\x1e\x69\xc3\x4f\x78\xbd\xfb\xfd\x89\x16\x5a\xd7\xb5\x70\xbb\xa0\x44\xbc\x6e\x89\x26\xda\x84\xff\x14\xaf\x50\x24\xd9\x32\x7d\x46\x65\x3a\x7e\x76\x1f\x2f\x87\xd7\xcb\x19\xf7\x72\x12\x85\x11\xd4\x4e\xa4\x76\x7a\xff\x15\x00\x00\xff\xff\xa8\xb3\x6b\x1b\x1b\x08\x00\x00")

func assetsReviewsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsHtml,
		"assets/reviews.html",
	)
}

func assetsReviewsHtml() (*asset, error) {
	bytes, err := assetsReviewsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.html", size: 2075, mode: os.FileMode(416), modTime: time.Unix(1461397271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReviewsJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x6d\x4f\xe3\x46\x10\xfe\x5c\xff\x8a\x91\x75\xea\x39\x9c\xeb\x84\xfb\x50\x55\x8d\x68\x95\x02\xbd\x46\x45\xa1\x22\x5c\xd1\x89\x22\xb4\x71\xc6\xce\x4a\xf6\xae\x6f\x77\x4d\x40\x15\xff\xbd\xb3\xbb\x76\x62\x27\x20\xe8\xcb\x49\x45\x42\x89\xe7\xe5\x99\x67\x5e\x9d\xe1\x41\x70\x2c\xab\x07\xc5\xf3\x95\x81\xf7\xa3\xc3\x6f\xe1\x83\x94\x79\x81\x30\x15\x69\x02\x93\xa2\x00\xa7\xd2\xa0\x50\xa3\xba\xc3\x65\x12\x04\x67\x3c\x45\xa1\x71\x09\xb5\x58\xa2\x02\xb3\x42\x98\x54\x2c\xa5\x8f\x46\x13\xc3\xef\xa8\x34\x97\x02\xde\x27\x23\x88\xac\x41\xd8\xa8\xc2\xc1\x38\x78\x90\x35\x94\xec\x01\x84\x34\x50\x6b\x24\x00\xae\x21\xe3\x14\x14\xef\x53\xac\x0c\x70\x01\xa9\x2c\xab\x82\x33\x91\x22\xac\xb9\x59\xb9\x20\x0d\x44\x12\x7c\x6a\x00\xe4\xc2\x30\xb2\x65\x64\x5d\xd1\x53\xd6\xb5\x02\x66\x82\x00\xe8\x6f\x65\x4c\xf5\xfd\x70\xb8\x5e\xaf\x13\xe6\x58\x26\x52\xe5\xc3\xc2\x5b\xe9\xe1\xd9\xf4\xf8\x74\x36\x3f\xfd\x86\x98\x06\xc1\x47\x51\xa0\xb6\xb9\x7e\xae\xb9\xa2\x04\x17\x0f\xc0\x2a\xe2\x91\xb2\x05\xb1\x2b\xd8\x1a\xa4\x02\x96\x2b\x24\x9d\x91\x96\xe7\x5a\x71\xc3\x45\x1e\x83\x96\x99\x59\x33\x85\xc1\x92\x6b\xa3\xf8\xa2\x36\xbd\x02\xb5\xac\x28\xd3\xae\x01\x95\x88\x09\x08\x27\x73\x98\xce\x43\xf8\x69\x32\x9f\xce\xe3\xe0\x6a\x7a\xf9\xcb\xf9\xc7\x4b\xb8\x9a\x5c\x5c\x4c\x66\x97\xd3\xd3\x39\x9c\x5f\xc0\xf1\xf9\xec\x64\x7a\x39\x3d\x9f\xd1\xd3\xcf\x30\x99\x7d\x82\x5f\xa7\xb3\x93\x18\x90\xca\x43\x41\xf0\xbe\x52\x96\x3b\x11\xe4\xb6\x74\xb6\x53\x73\xc4\x5e\xf0\x4c\x7a\x32\xba\xc2\x94\x67\x3c\xa5\x8c\x44\x5e\xb3\x1c\x21\x97\x77\xa8\x04\x25\x02\x15\xaa\x92\x6b\xdb\x3c\x4d\xd4\x96\x41\xc1\x4b\x6e\x98\x71\xcf\x7b\xe9\x24\xc1\xc1\x30\x08\xee\x98\x82\x9c\x9b\x49\x55\x29\xc6\x35\x5e\xe1\xe2\xc8\xe2\x16\x4c\x25\xa5\x5c\xd6\x05\x46\x61\x5f\x1d\xc6\x70\x7d\x43\x83\x10\x0c\x87\xf0\x01\x0d\x35\x50\x61\x25\x35\x37\x52\xd1\x54\xb0\x92\x98\x2a\x59\xba\x40\x59\x4d\x23\x58\x31\xb3\x4a\x82\xac\x16\xa9\xe5\x01\x39\x9a\x33\xa6\xcd\x6f\x24\x3d\x2d\xb0\x44\x61\x22\x6b\x31\x80\x3f\xa9\xe1\x96\x8c\x2e\x98\x5e\x4d\x89\xec\x3d\x1c\x79\x67\x12\x18\x27\x38\xcf\xa2\x70\x68\x87\x10\x80\x67\x10\x75\x2c\x7f\x80\x91\x47\x00\x62\x63\x6a\x25\xbc\xa7\xae\x17\xb6\x5d\x22\xef\xd8\xbe\x3b\x8c\x1b\x58\x14\x39\x05\xb6\x68\x8f\x41\xcf\x6f\x1c\x3c\xf6\xd2\xbb\xe3\xb8\x06\x5d\x97\x25\xa3\x14\xfb\xd9\x2d\x51\xa7\x8a\x57\x36\xb5\x7e\x92\x73\x6f\x1e\x59\x83\x6d\x72\xd4\xe5\xba\x30\x94\x98\x15\x8f\x1b\xa1\xc0\x75\xc1\x05\xb6\x39\x5b\x55\xc2\xdb\x7c\xff\x10\xdb\x84\x7b\x86\xbd\x94\x3b\xa8\x9d\xa4\x47\x71\x0f\x7b\x93\xaa\xc5\xf2\x3e\x4d\x11\x08\xec\xbb\x7d\xb4\xc6\xa4\x87\x47\x66\x3b\x05\xf3\x56\xae\x64\xfd\x41\x49\x52\x29\x8c\x92\x45\x81\x2a\x0a\x0b\xda\x9b\x0b\x3b\x27\x34\x3e\x6d\x99\xa2\x37\x9a\x76\x1f\xe3\x37\x76\xcb\x7d\x74\xf7\x35\xa1\xf2\x51\xa3\x59\xc5\x87\x6e\xb4\xc2\x01\x71\x48\x53\x5a\x90\xc8\x11\xdc\xf8\x53\xe8\x8a\x46\x1b\xc9\xd7\x43\x25\x9b\x51\xe4\xa8\xed\xf8\x28\x69\xdd\xce\xda\xe0\x17\x8d\xc3\xd6\x73\xfc\x68\x47\x79\x8b\xf9\x0a\x97\xa6\x4c\xbe\x9d\x64\x41\x71\xae\x6f\xc6\x9e\x19\xed\x68\x64\x15\xdc\x9e\x97\x5d\x0f\xef\x63\x07\xcc\x17\xd7\x29\xaf\xf9\x4d\xe2\x67\xce\x9b\x38\xc8\xa4\xaa\xf5\xca\xb6\x1b\x2c\x87\xa8\x6b\xcb\x97\xf1\xb3\x3b\x34\x18\x78\x94\xc7\xee\x22\x38\x40\xdf\xb3\x6e\x9e\x0e\xd8\x82\xd9\x95\x6d\x19\xda\x63\x4e\x11\x88\x1e\x5f\x8e\xb7\x12\xb7\xd5\x47\xce\xd2\x03\xb9\xa2\xbd\xd8\x6d\xbb\x36\xcf\xf6\x3b\x7e\x53\xc8\xd4\x9d\xa6\xdd\x82\x52\xa4\x8d\x2e\xd1\xc8\x54\xba\x8a\x06\xd7\x6f\xad\xea\x6d\x53\xe7\x4e\xb7\x5d\x29\x2b\xd9\xc8\x9f\x18\x9f\xdb\x66\x71\x7f\xb4\x0f\x47\x21\xbc\x73\xf6\x3b\x23\xf5\xc2\x58\x35\x3d\x7b\xa2\xee\xad\xad\x33\xf1\xd3\xf4\x14\x11\x02\x11\xb7\xfe\x90\xe8\x7f\x43\xc4\xe2\x34\x85\xdd\x1d\x6f\x27\x7c\x66\xc0\x9f\xa2\x94\x16\x92\x7e\x06\xfc\x17\xa4\x3c\xd2\x3f\xa0\xd5\xdb\xe6\x57\xb9\x6d\x36\xa9\x1d\x97\x36\x66\xbb\x81\xaf\xd9\xc2\xbe\xbf\xfb\xa9\xd3\xdf\xc7\x56\x3c\xde\x73\x30\xbc\x44\x6d\x58\x59\xed\x79\x7c\xae\x49\x91\x6c\xf4\xfb\xae\xf6\x36\x3f\xe3\xd5\x79\x89\xf4\xfd\x9a\xfc\xba\xe7\xc0\x0a\xa2\x96\x60\xbc\x25\x14\xbb\x00\xf1\xde\xab\xa7\xbd\x09\xdb\xbb\xd0\xbb\x0d\x0e\xbf\xbd\x1a\xfd\x7e\xbc\x1c\xab\xd9\xac\x6e\x65\xdd\xbd\xe8\x95\xb5\x2d\xe5\x57\x4e\xd5\x2d\xa0\x4d\xe8\x84\x19\xa4\xe3\xa5\x34\xbd\xa2\x4c\xb4\xd1\x0e\xe0\x00\x0e\x47\xa3\xd1\x20\x31\x72\xee\x5f\x3e\x9d\x3c\x1c\x52\x53\xcf\xf6\x45\xda\xd1\xb4\x6f\xea\xa3\x96\x60\x9b\xdf\x4b\x67\x8b\x6a\xe7\x93\xfe\x22\x47\x6b\x3b\xb0\xcf\x1a\x5b\xe5\xe6\xc6\xfd\x5f\x6f\x99\xa7\x79\xbb\x44\xfa\xfd\x5e\xec\x1c\x0e\xfa\x08\xbf\xf6\x06\x8d\xcc\x7e\xfd\x7b\x04\x1b\xe0\xce\xae\xbc\x48\x85\x67\xd9\x17\xe0\x41\xa8\xbb\x24\xec\xff\x5f\x01\x00\x00\xff\xff\x2c\x2c\x00\x01\x76\x0d\x00\x00")

func assetsReviewsJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsReviewsJs,
		"assets/reviews.js",
	)
}

func assetsReviewsJs() (*asset, error) {
	bytes, err := assetsReviewsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reviews.js", size: 3446, mode: os.FileMode(416), modTime: time.Unix(1461397148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go":    assetsAssetsGo,
	"assets/repos.html":   assetsReposHtml,
	"assets/review.html":  assetsReviewHtml,
	"assets/reviews.css":  assetsReviewsCss,
	"assets/reviews.html": assetsReviewsHtml,
	"assets/reviews.js":   assetsReviewsJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go":    &bintree{assetsAssetsGo, map[string]*bintree{}},
		"repos.html":   &bintree{assetsReposHtml, map[string]*bintree{}},
		"review.html":  &bintree{assetsReviewHtml, map[string]*bintree{}},
		"reviews.css":  &bintree{assetsReviewsCss, map[string]*bintree{}},
		"reviews.html": &bintree{assetsReviewsHtml, map[string]*bintree{}},
		"reviews.js":   &bintree{assetsReviewsJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
